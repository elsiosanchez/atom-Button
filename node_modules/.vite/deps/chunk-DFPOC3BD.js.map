{
  "version": 3,
  "sources": ["../../../packages/components/popper/src/constants.ts", "../../../packages/components/popper/src/popper.ts", "../../../packages/components/popper/src/popper.vue", "../../../packages/components/popper/src/arrow.ts", "../../../packages/components/popper/src/arrow.vue", "../../../packages/components/slot/src/only-child.tsx", "../../../packages/components/popper/src/trigger.ts", "../../../packages/components/popper/src/trigger.vue", "../../../packages/components/popper/src/content.ts", "../../../packages/components/popper/src/utils.ts", "../../../packages/components/popper/src/composables/use-content.ts", "../../../packages/components/popper/src/composables/use-content-dom.ts", "../../../packages/components/popper/src/composables/use-focus-trap.ts", "../../../packages/components/popper/src/content.vue", "../../../packages/components/popper/index.ts"],
  "sourcesContent": ["import type { CSSProperties, ComputedRef, InjectionKey, Ref } from 'vue'\nimport type { Instance } from '@popperjs/core'\n\nexport type Measurable = {\n  getBoundingClientRect: () => DOMRect\n}\n\n/**\n * triggerRef indicates the element that triggers popper\n * contentRef indicates the element of popper content\n * referenceRef indicates the element that popper content relative with\n */\nexport type ElPopperInjectionContext = {\n  triggerRef: Ref<Measurable | undefined>\n  contentRef: Ref<HTMLElement | undefined>\n  popperInstanceRef: Ref<Instance | undefined>\n  referenceRef: Ref<Measurable | undefined>\n  role: ComputedRef<string>\n}\n\nexport type ElPopperContentInjectionContext = {\n  arrowRef: Ref<HTMLElement | undefined>\n  arrowOffset: Ref<number | undefined>\n  arrowStyle: ComputedRef<CSSProperties>\n}\n\nexport const POPPER_INJECTION_KEY: InjectionKey<ElPopperInjectionContext> =\n  Symbol('popper')\n\nexport const POPPER_CONTENT_INJECTION_KEY: InjectionKey<ElPopperContentInjectionContext> =\n  Symbol('popperContent')\n", "import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Popper from './popper.vue'\n\nconst effects = ['light', 'dark'] as const\nconst triggers = ['click', 'contextmenu', 'hover', 'focus'] as const\n\nexport const Effect = {\n  LIGHT: 'light',\n  DARK: 'dark',\n} as const\n\nexport const roleTypes = [\n  'dialog',\n  'grid',\n  'group',\n  'listbox',\n  'menu',\n  'navigation',\n  'tooltip',\n  'tree',\n] as const\n\nexport type PopperEffect = typeof effects[number]\nexport type PopperTrigger = typeof triggers[number]\n\nexport const popperProps = buildProps({\n  role: {\n    type: String,\n    values: roleTypes,\n    default: 'tooltip',\n  },\n} as const)\n\nexport type PopperProps = ExtractPropTypes<typeof popperProps>\n\nexport type PopperInstance = InstanceType<typeof Popper>\n\n/** @deprecated use `popperProps` instead, and it will be deprecated in the next major version */\nexport const usePopperProps = popperProps\n\n/** @deprecated use `PopperProps` instead, and it will be deprecated in the next major version */\nexport type UsePopperProps = PopperProps\n", "<template>\n  <slot />\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, ref } from 'vue'\nimport { POPPER_INJECTION_KEY } from './constants'\nimport { popperProps } from './popper'\n\nimport type { Instance as PopperInstance } from '@popperjs/core'\nimport type { ElPopperInjectionContext } from './constants'\n\ndefineOptions({\n  name: 'ElPopper',\n  inheritAttrs: false,\n})\nconst props = defineProps(popperProps)\n\nconst triggerRef = ref<HTMLElement>()\nconst popperInstanceRef = ref<PopperInstance>()\nconst contentRef = ref<HTMLElement>()\nconst referenceRef = ref<HTMLElement>()\nconst role = computed(() => props.role)\n\nconst popperProvides = {\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n  /**\n   * @description popperjs instance\n   */\n  popperInstanceRef,\n  /**\n   * @description popper content element\n   */\n  contentRef,\n  /**\n   * @description popper reference element\n   */\n  referenceRef,\n  /**\n   * @description role determines how aria attributes are distributed\n   */\n  role,\n} as ElPopperInjectionContext\n\ndefineExpose(popperProvides)\n\nprovide(POPPER_INJECTION_KEY, popperProvides)\n</script>\n", "import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Arrow from './arrow.vue'\n\nexport const popperArrowProps = buildProps({\n  arrowOffset: {\n    type: Number,\n    default: 5,\n  },\n} as const)\nexport type PopperArrowProps = ExtractPropTypes<typeof popperArrowProps>\n\nexport type PopperArrowInstance = InstanceType<typeof Arrow>\n\n/** @deprecated use `popperArrowProps` instead, and it will be deprecated in the next major version */\nexport const usePopperArrowProps = popperArrowProps\n\n/** @deprecated use `PopperArrowProps` instead, and it will be deprecated in the next major version */\nexport type UsePopperArrowProps = PopperArrowProps\n\n/** @deprecated use `PopperArrowInstance` instead, and it will be deprecated in the next major version */\nexport type ElPopperArrowInstance = PopperArrowInstance\n", "<template>\n  <span\n    ref=\"arrowRef\"\n    :class=\"ns.e('arrow')\"\n    :style=\"arrowStyle\"\n    data-popper-arrow\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, onBeforeUnmount, watch } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { POPPER_CONTENT_INJECTION_KEY } from './constants'\nimport { popperArrowProps } from './arrow'\n\ndefineOptions({\n  name: 'ElPopperArrow',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(popperArrowProps)\n\nconst ns = useNamespace('popper')\nconst { arrowOffset, arrowRef, arrowStyle } = inject(\n  POPPER_CONTENT_INJECTION_KEY,\n  undefined\n)!\n\nwatch(\n  () => props.arrowOffset,\n  (val) => {\n    arrowOffset.value = val\n  }\n)\nonBeforeUnmount(() => {\n  arrowRef.value = undefined\n})\n\ndefineExpose({\n  /**\n   * @description Arrow element\n   */\n  arrowRef,\n})\n</script>\n", "import {\n  Comment,\n  Fragment,\n  Text,\n  cloneVNode,\n  defineComponent,\n  inject,\n  withDirectives,\n} from 'vue'\nimport { NOOP, isObject } from '@vue/shared'\nimport {\n  FORWARD_REF_INJECTION_KEY,\n  useForwardRefDirective,\n  useNamespace,\n} from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\n\nimport type { Ref, VNode } from 'vue'\n\nconst NAME = 'ElOnlyChild'\n\nexport const OnlyChild = defineComponent({\n  name: NAME,\n  setup(_, { slots, attrs }) {\n    const forwardRefInjection = inject(FORWARD_REF_INJECTION_KEY)\n    const forwardRefDirective = useForwardRefDirective(\n      forwardRefInjection?.setForwardRef ?? NOOP\n    )\n    return () => {\n      const defaultSlot = slots.default?.(attrs)\n      if (!defaultSlot) return null\n\n      if (defaultSlot.length > 1) {\n        debugWarn(NAME, 'requires exact only one valid child.')\n        return null\n      }\n\n      const firstLegitNode = findFirstLegitChild(defaultSlot)\n      if (!firstLegitNode) {\n        debugWarn(NAME, 'no valid child node found')\n        return null\n      }\n\n      return withDirectives(cloneVNode(firstLegitNode!, attrs), [\n        [forwardRefDirective],\n      ])\n    }\n  },\n})\n\nfunction findFirstLegitChild(node: VNode[] | undefined): VNode | null {\n  if (!node) return null\n  const children = node as VNode[]\n  for (const child of children) {\n    /**\n     * when user uses h(Fragment, [text]) to render plain string,\n     * this switch case just cannot handle, when the value is primitives\n     * we should just return the wrapped string\n     */\n    if (isObject(child)) {\n      switch (child.type) {\n        case Comment:\n          continue\n        case Text:\n        case 'svg':\n          return wrapTextContent(child)\n        case Fragment:\n          return findFirstLegitChild(child.children as VNode[])\n        default:\n          return child\n      }\n    }\n    return wrapTextContent(child)\n  }\n  return null\n}\n\nfunction wrapTextContent(s: string | VNode) {\n  const ns = useNamespace('only-child')\n  return <span class={ns.e('content')}>{s}</span>\n}\n\nexport type OnlyChildExpose = {\n  forwardRef: Ref<HTMLElement>\n}\n", "import { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { Measurable } from './constants'\nimport type Trigger from './trigger.vue'\n\nexport const popperTriggerProps = buildProps({\n  virtualRef: {\n    type: definePropType<Measurable>(Object),\n  },\n  virtualTriggering: Boolean,\n  onMouseenter: {\n    type: definePropType<(e: Event) => void>(Function),\n  },\n  onMouseleave: {\n    type: definePropType<(e: Event) => void>(Function),\n  },\n  onClick: {\n    type: definePropType<(e: Event) => void>(Function),\n  },\n  onKeydown: {\n    type: definePropType<(e: Event) => void>(Function),\n  },\n  onFocus: {\n    type: definePropType<(e: Event) => void>(Function),\n  },\n  onBlur: {\n    type: definePropType<(e: Event) => void>(Function),\n  },\n  onContextmenu: {\n    type: definePropType<(e: Event) => void>(Function),\n  },\n  id: String,\n  open: Boolean,\n} as const)\n\nexport type PopperTriggerProps = typeof popperTriggerProps\n\nexport type PopperTriggerInstance = InstanceType<typeof Trigger>\n\n/** @deprecated use `popperTriggerProps` instead, and it will be deprecated in the next major version */\nexport const usePopperTriggerProps = popperTriggerProps\n\n/** @deprecated use `PopperTriggerInstance` instead, and it will be deprecated in the next major version */\nexport type ElPopperArrowTrigger = PopperTriggerInstance\n", "<template>\n  <el-only-child\n    v-if=\"!virtualTriggering\"\n    v-bind=\"$attrs\"\n    :aria-controls=\"ariaControls\"\n    :aria-describedby=\"ariaDescribedby\"\n    :aria-expanded=\"ariaExpanded\"\n    :aria-haspopup=\"ariaHaspopup\"\n  >\n    <slot />\n  </el-only-child>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, onBeforeUnmount, onMounted, watch } from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { unrefElement } from '@vueuse/core'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useForwardRef } from '@element-plus/hooks'\nimport { isElement } from '@element-plus/utils'\nimport { POPPER_INJECTION_KEY } from './constants'\nimport { popperTriggerProps } from './trigger'\n\nimport type { WatchStopHandle } from 'vue'\n\ndefineOptions({\n  name: 'ElPopperTrigger',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(popperTriggerProps)\n\nconst { role, triggerRef } = inject(POPPER_INJECTION_KEY, undefined)!\n\nuseForwardRef(triggerRef)\n\nconst ariaControls = computed<string | undefined>(() => {\n  return ariaHaspopup.value ? props.id : undefined\n})\n\nconst ariaDescribedby = computed<string | undefined>(() => {\n  if (role && role.value === 'tooltip') {\n    return props.open && props.id ? props.id : undefined\n  }\n  return undefined\n})\n\nconst ariaHaspopup = computed<string | undefined>(() => {\n  if (role && role.value !== 'tooltip') {\n    return role.value\n  }\n  return undefined\n})\n\nconst ariaExpanded = computed<string | undefined>(() => {\n  return ariaHaspopup.value ? `${props.open}` : undefined\n})\n\nlet virtualTriggerAriaStopWatch: WatchStopHandle | undefined = undefined\n\nonMounted(() => {\n  watch(\n    () => props.virtualRef,\n    (virtualEl) => {\n      if (virtualEl) {\n        triggerRef.value = unrefElement(virtualEl as HTMLElement)\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  watch(\n    triggerRef,\n    (el, prevEl) => {\n      virtualTriggerAriaStopWatch?.()\n      virtualTriggerAriaStopWatch = undefined\n      if (isElement(el)) {\n        ;(\n          [\n            'onMouseenter',\n            'onMouseleave',\n            'onClick',\n            'onKeydown',\n            'onFocus',\n            'onBlur',\n            'onContextmenu',\n          ] as const\n        ).forEach((eventName) => {\n          const handler = props[eventName]\n          if (handler) {\n            ;(el as HTMLElement).addEventListener(\n              eventName.slice(2).toLowerCase(),\n              handler\n            )\n            ;(prevEl as HTMLElement)?.removeEventListener?.(\n              eventName.slice(2).toLowerCase(),\n              handler\n            )\n          }\n        })\n        virtualTriggerAriaStopWatch = watch(\n          [ariaControls, ariaDescribedby, ariaHaspopup, ariaExpanded],\n          (watches) => {\n            ;[\n              'aria-controls',\n              'aria-describedby',\n              'aria-haspopup',\n              'aria-expanded',\n            ].forEach((key, idx) => {\n              isNil(watches[idx])\n                ? el.removeAttribute(key)\n                : el.setAttribute(key, watches[idx]!)\n            })\n          },\n          { immediate: true }\n        )\n      }\n      if (isElement(prevEl)) {\n        ;[\n          'aria-controls',\n          'aria-describedby',\n          'aria-haspopup',\n          'aria-expanded',\n        ].forEach((key) => prevEl.removeAttribute(key))\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n})\n\nonBeforeUnmount(() => {\n  virtualTriggerAriaStopWatch?.()\n  virtualTriggerAriaStopWatch = undefined\n})\n\ndefineExpose({\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n})\n</script>\n", "import { placements } from '@popperjs/core'\nimport { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, StyleValue } from 'vue'\nimport type { Options, Placement } from '@popperjs/core'\nimport type { Measurable } from './constants'\nimport type Content from './content.vue'\n\ntype ClassObjectType = Record<string, boolean>\ntype ClassType = string | ClassObjectType | ClassType[]\n\nconst POSITIONING_STRATEGIES = ['fixed', 'absolute'] as const\n\nexport interface CreatePopperInstanceParams {\n  referenceEl: Measurable\n  popperContentEl: HTMLElement\n  arrowEl: HTMLElement | undefined\n}\n\nexport const popperCoreConfigProps = buildProps({\n  boundariesPadding: {\n    type: Number,\n    default: 0,\n  },\n  fallbackPlacements: {\n    type: definePropType<Placement[]>(Array),\n    default: undefined,\n  },\n  gpuAcceleration: {\n    type: Boolean,\n    default: true,\n  },\n  offset: {\n    type: Number,\n    default: 12,\n  },\n  placement: {\n    type: String,\n    values: placements,\n    default: 'bottom',\n  },\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  strategy: {\n    type: String,\n    values: POSITIONING_STRATEGIES,\n    default: 'absolute',\n  },\n} as const)\nexport type PopperCoreConfigProps = ExtractPropTypes<\n  typeof popperCoreConfigProps\n>\n\nexport const popperContentProps = buildProps({\n  ...popperCoreConfigProps,\n  id: String,\n  style: {\n    type: definePropType<StyleValue>([String, Array, Object]),\n  },\n  className: {\n    type: definePropType<ClassType>([String, Array, Object]),\n  },\n  effect: {\n    type: String,\n    default: 'dark',\n  },\n  visible: Boolean,\n  enterable: {\n    type: Boolean,\n    default: true,\n  },\n  pure: Boolean,\n  focusOnShow: {\n    type: Boolean,\n    default: false,\n  },\n  trapping: {\n    type: Boolean,\n    default: false,\n  },\n  popperClass: {\n    type: definePropType<ClassType>([String, Array, Object]),\n  },\n  popperStyle: {\n    type: definePropType<StyleValue>([String, Array, Object]),\n  },\n  referenceEl: {\n    type: definePropType<HTMLElement>(Object),\n  },\n  triggerTargetEl: {\n    type: definePropType<HTMLElement>(Object),\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    default: true,\n  },\n  ariaLabel: {\n    type: String,\n    default: undefined,\n  },\n  virtualTriggering: Boolean,\n  zIndex: Number,\n} as const)\nexport type PopperContentProps = ExtractPropTypes<typeof popperContentProps>\n\nexport const popperContentEmits = {\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  focus: () => true,\n  blur: () => true,\n  close: () => true,\n}\nexport type PopperContentEmits = typeof popperContentEmits\n\nexport type PopperContentInstance = InstanceType<typeof Content>\n\n/** @deprecated use `popperCoreConfigProps` instead, and it will be deprecated in the next major version */\nexport const usePopperCoreConfigProps = popperCoreConfigProps\n\n/** @deprecated use `popperContentProps` instead, and it will be deprecated in the next major version */\nexport const usePopperContentProps = popperContentProps\n\n/** @deprecated use `popperContentEmits` instead, and it will be deprecated in the next major version */\nexport const usePopperContentEmits = popperContentEmits\n\n/** @deprecated use `PopperCoreConfigProps` instead, and it will be deprecated in the next major version */\nexport type UsePopperCoreConfigProps = PopperCoreConfigProps\n\n/** @deprecated use `PopperContentProps` instead, and it will be deprecated in the next major version */\nexport type UsePopperContentProps = PopperContentProps\n\n/** @deprecated use `PopperContentInstance` instead, and it will be deprecated in the next major version */\nexport type ElPopperArrowContent = PopperContentInstance\n", "import { isClient, unrefElement } from '@vueuse/core'\n\nimport type { ComponentPublicInstance } from 'vue'\nimport type { MaybeRef } from '@vueuse/core'\nimport type { Modifier } from '@popperjs/core'\nimport type { Measurable } from './constants'\nimport type { PopperCoreConfigProps } from './content'\n\nexport const buildPopperOptions = (\n  props: PopperCoreConfigProps,\n  modifiers: Modifier<any, any>[] = []\n) => {\n  const { placement, strategy, popperOptions } = props\n  const options = {\n    placement,\n    strategy,\n    ...popperOptions,\n    modifiers: [...genModifiers(props), ...modifiers],\n  }\n\n  deriveExtraModifiers(options, popperOptions?.modifiers)\n  return options\n}\n\nexport const unwrapMeasurableEl = (\n  $el: MaybeRef<Measurable | undefined | ComponentPublicInstance>\n) => {\n  if (!isClient) return\n  return unrefElement($el as HTMLElement)\n}\n\nfunction genModifiers(options: PopperCoreConfigProps) {\n  const { offset, gpuAcceleration, fallbackPlacements } = options\n  return [\n    {\n      name: 'offset',\n      options: {\n        offset: [0, offset ?? 12],\n      },\n    },\n    {\n      name: 'preventOverflow',\n      options: {\n        padding: {\n          top: 2,\n          bottom: 2,\n          left: 5,\n          right: 5,\n        },\n      },\n    },\n    {\n      name: 'flip',\n      options: {\n        padding: 5,\n        fallbackPlacements,\n      },\n    },\n    {\n      name: 'computeStyles',\n      options: {\n        gpuAcceleration,\n      },\n    },\n  ]\n}\n\nfunction deriveExtraModifiers(\n  options: any,\n  modifiers: PopperCoreConfigProps['popperOptions']['modifiers']\n) {\n  if (modifiers) {\n    options.modifiers = [...options.modifiers, ...(modifiers ?? [])]\n  }\n}\n", "import { computed, inject, onMounted, ref, unref, watch } from 'vue'\nimport { isUndefined } from 'lodash-unified'\nimport { usePopper } from '@element-plus/hooks'\nimport { POPPER_INJECTION_KEY } from '../constants'\nimport { buildPopperOptions, unwrapMeasurableEl } from '../utils'\n\nimport type { Modifier } from '@popperjs/core'\nimport type { PartialOptions } from '@element-plus/hooks'\nimport type { PopperContentProps } from '../content'\n\nconst DEFAULT_ARROW_OFFSET = 0\n\nexport const usePopperContent = (props: PopperContentProps) => {\n  const { popperInstanceRef, contentRef, triggerRef, role } = inject(\n    POPPER_INJECTION_KEY,\n    undefined\n  )!\n\n  const arrowRef = ref<HTMLElement>()\n  const arrowOffset = ref<number>()\n\n  const eventListenerModifier = computed(() => {\n    return {\n      name: 'eventListeners',\n      enabled: !!props.visible,\n    } as Modifier<'eventListeners', any>\n  })\n\n  const arrowModifier = computed(() => {\n    const arrowEl = unref(arrowRef)\n    const offset = unref(arrowOffset) ?? DEFAULT_ARROW_OFFSET\n    // Seems like the `phase` and `fn` is required by Modifier type\n    // But on its documentation they didn't specify that.\n    // Refer to https://popper.js.org/docs/v2/modifiers/arrow/\n    return {\n      name: 'arrow',\n      enabled: !isUndefined(arrowEl),\n      options: {\n        element: arrowEl,\n        padding: offset,\n      },\n    } as any\n  })\n\n  const options = computed<PartialOptions>(() => {\n    return {\n      onFirstUpdate: () => {\n        update()\n      },\n      ...buildPopperOptions(props, [\n        unref(arrowModifier),\n        unref(eventListenerModifier),\n      ]),\n    }\n  })\n\n  const computedReference = computed(\n    () => unwrapMeasurableEl(props.referenceEl) || unref(triggerRef)\n  )\n\n  const { attributes, state, styles, update, forceUpdate, instanceRef } =\n    usePopper(computedReference, contentRef, options)\n\n  watch(instanceRef, (instance) => (popperInstanceRef.value = instance))\n\n  onMounted(() => {\n    watch(\n      () => unref(computedReference)?.getBoundingClientRect(),\n      () => {\n        update()\n      }\n    )\n  })\n\n  return {\n    attributes,\n    arrowRef,\n    contentRef,\n    instanceRef,\n    state,\n    styles,\n    role,\n\n    forceUpdate,\n    update,\n  }\n}\n\nexport type UsePopperContentReturn = ReturnType<typeof usePopperContent>\n", "import { computed, ref, unref } from 'vue'\nimport { useNamespace, useZIndex } from '@element-plus/hooks'\n\nimport type { CSSProperties, StyleValue } from 'vue'\nimport type { UsePopperReturn } from '@element-plus/hooks'\nimport type { UsePopperContentReturn } from './use-content'\nimport type { PopperContentProps } from '../content'\n\nexport const usePopperContentDOM = (\n  props: PopperContentProps,\n  {\n    attributes,\n    styles,\n    role,\n  }: Pick<UsePopperReturn, 'attributes' | 'styles'> &\n    Pick<UsePopperContentReturn, 'role'>\n) => {\n  const { nextZIndex } = useZIndex()\n  const ns = useNamespace('popper')\n\n  const contentAttrs = computed(() => unref(attributes).popper)\n  const contentZIndex = ref<number>(props.zIndex || nextZIndex())\n  const contentClass = computed(() => [\n    ns.b(),\n    ns.is('pure', props.pure),\n    ns.is(props.effect),\n    props.popperClass,\n  ])\n  const contentStyle = computed<StyleValue[]>(() => {\n    return [\n      { zIndex: unref(contentZIndex) } as CSSProperties,\n      props.popperStyle || {},\n      unref(styles).popper as CSSProperties,\n    ]\n  })\n  const ariaModal = computed<string | undefined>(() =>\n    role.value === 'dialog' ? 'false' : undefined\n  )\n  const arrowStyle = computed(\n    () => (unref(styles).arrow || {}) as CSSProperties\n  )\n\n  const updateZIndex = () => {\n    contentZIndex.value = props.zIndex || nextZIndex()\n  }\n\n  return {\n    ariaModal,\n    arrowStyle,\n    contentAttrs,\n    contentClass,\n    contentStyle,\n    contentZIndex,\n\n    updateZIndex,\n  }\n}\n\nexport type UsePopperContentDOMReturn = ReturnType<typeof usePopperContentDOM>\n", "import { ref } from 'vue'\n\nimport type { SetupContext } from 'vue'\nimport type { PopperContentEmits, PopperContentProps } from '../content'\n\nexport const usePopperContentFocusTrap = (\n  props: PopperContentProps,\n  emit: SetupContext<PopperContentEmits>['emit']\n) => {\n  const trapped = ref(false)\n  const focusStartRef = ref<'container' | 'first' | HTMLElement>()\n\n  const onFocusAfterTrapped = () => {\n    emit('focus')\n  }\n\n  const onFocusAfterReleased = (event: CustomEvent) => {\n    if (event.detail?.focusReason !== 'pointer') {\n      focusStartRef.value = 'first'\n      emit('blur')\n    }\n  }\n\n  const onFocusInTrap = (event: FocusEvent) => {\n    if (props.visible && !trapped.value) {\n      if (event.target) {\n        focusStartRef.value = event.target as typeof focusStartRef.value\n      }\n      trapped.value = true\n    }\n  }\n\n  const onFocusoutPrevented = (event: CustomEvent) => {\n    if (!props.trapping) {\n      if (event.detail.focusReason === 'pointer') {\n        event.preventDefault()\n      }\n      trapped.value = false\n    }\n  }\n\n  const onReleaseRequested = () => {\n    trapped.value = false\n    emit('close')\n  }\n\n  return {\n    focusStartRef,\n    trapped,\n\n    onFocusAfterReleased,\n    onFocusAfterTrapped,\n    onFocusInTrap,\n    onFocusoutPrevented,\n    onReleaseRequested,\n  }\n}\n\nexport type UsePopperContentFocusTrapReturn = ReturnType<\n  typeof usePopperContentFocusTrap\n>\n", "<template>\n  <div\n    ref=\"contentRef\"\n    v-bind=\"contentAttrs\"\n    :style=\"contentStyle\"\n    :class=\"contentClass\"\n    tabindex=\"-1\"\n    @mouseenter=\"(e) => $emit('mouseenter', e)\"\n    @mouseleave=\"(e) => $emit('mouseleave', e)\"\n  >\n    <el-focus-trap\n      :trapped=\"trapped\"\n      :trap-on-focus-in=\"true\"\n      :focus-trap-el=\"contentRef\"\n      :focus-start-el=\"focusStartRef\"\n      @focus-after-trapped=\"onFocusAfterTrapped\"\n      @focus-after-released=\"onFocusAfterReleased\"\n      @focusin=\"onFocusInTrap\"\n      @focusout-prevented=\"onFocusoutPrevented\"\n      @release-requested=\"onReleaseRequested\"\n    >\n      <slot />\n    </el-focus-trap>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  ref,\n  unref,\n  watch,\n} from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { isNil } from 'lodash-unified'\nimport ElFocusTrap from '@element-plus/components/focus-trap'\nimport { formItemContextKey } from '@element-plus/components/form'\nimport { isElement } from '@element-plus/utils'\nimport { POPPER_CONTENT_INJECTION_KEY } from './constants'\nimport { popperContentEmits, popperContentProps } from './content'\nimport {\n  usePopperContent,\n  usePopperContentDOM,\n  usePopperContentFocusTrap,\n} from './composables'\n\nimport type { WatchStopHandle } from 'vue'\n\ndefineOptions({\n  name: 'ElPopperContent',\n})\n\nconst emit = defineEmits(popperContentEmits)\n\nconst props = defineProps(popperContentProps)\n\nconst {\n  focusStartRef,\n  trapped,\n\n  onFocusAfterReleased,\n  onFocusAfterTrapped,\n  onFocusInTrap,\n  onFocusoutPrevented,\n  onReleaseRequested,\n} = usePopperContentFocusTrap(props, emit)\n\nconst { attributes, arrowRef, contentRef, styles, instanceRef, role, update } =\n  usePopperContent(props)\n\nconst {\n  ariaModal,\n  arrowStyle,\n  contentAttrs,\n  contentClass,\n  contentStyle,\n  updateZIndex,\n} = usePopperContentDOM(props, {\n  styles,\n  attributes,\n  role,\n})\n\nconst formItemContext = inject(formItemContextKey, undefined)\nconst arrowOffset = ref<number>()\n\nprovide(POPPER_CONTENT_INJECTION_KEY, {\n  arrowStyle,\n  arrowRef,\n  arrowOffset,\n})\n\nif (\n  formItemContext &&\n  (formItemContext.addInputId || formItemContext.removeInputId)\n) {\n  // disallow auto-id from inside popper content\n  provide(formItemContextKey, {\n    ...formItemContext,\n    addInputId: NOOP,\n    removeInputId: NOOP,\n  })\n}\n\nlet triggerTargetAriaStopWatch: WatchStopHandle | undefined = undefined\n\nconst updatePopper = (shouldUpdateZIndex = true) => {\n  update()\n  shouldUpdateZIndex && updateZIndex()\n}\n\nconst togglePopperAlive = () => {\n  updatePopper(false)\n  if (props.visible && props.focusOnShow) {\n    trapped.value = true\n  } else if (props.visible === false) {\n    trapped.value = false\n  }\n}\n\nonMounted(() => {\n  watch(\n    () => props.triggerTargetEl,\n    (triggerTargetEl, prevTriggerTargetEl) => {\n      triggerTargetAriaStopWatch?.()\n      triggerTargetAriaStopWatch = undefined\n\n      const el = unref(triggerTargetEl || contentRef.value)\n      const prevEl = unref(prevTriggerTargetEl || contentRef.value)\n\n      if (isElement(el)) {\n        triggerTargetAriaStopWatch = watch(\n          [role, () => props.ariaLabel, ariaModal, () => props.id],\n          (watches) => {\n            ;['role', 'aria-label', 'aria-modal', 'id'].forEach((key, idx) => {\n              isNil(watches[idx])\n                ? el.removeAttribute(key)\n                : el.setAttribute(key, watches[idx]!)\n            })\n          },\n          { immediate: true }\n        )\n      }\n      if (prevEl !== el && isElement(prevEl)) {\n        ;['role', 'aria-label', 'aria-modal', 'id'].forEach((key) => {\n          prevEl.removeAttribute(key)\n        })\n      }\n    },\n    { immediate: true }\n  )\n\n  watch(() => props.visible, togglePopperAlive, { immediate: true })\n})\n\nonBeforeUnmount(() => {\n  triggerTargetAriaStopWatch?.()\n  triggerTargetAriaStopWatch = undefined\n})\n\ndefineExpose({\n  /**\n   * @description popper content element\n   */\n  popperContentRef: contentRef,\n  /**\n   * @description popperjs instance\n   */\n  popperInstanceRef: instanceRef,\n  /**\n   * @description method for updating popper\n   */\n  updatePopper,\n\n  /**\n   * @description content style\n   */\n  contentStyle,\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport Popper from './src/popper.vue'\n\nimport ElPopperArrow from './src/arrow.vue'\nimport ElPopperTrigger from './src/trigger.vue'\nimport ElPopperContent from './src/content.vue'\n\nexport { ElPopperArrow, ElPopperTrigger, ElPopperContent }\n\nexport const ElPopper = withInstall(Popper)\nexport default ElPopper\n\nexport * from './src/popper'\nexport * from './src/trigger'\nexport * from './src/content'\nexport * from './src/arrow'\nexport * from './src/constants'\n\nexport type { Placement, Options } from '@popperjs/core'\n"],
  "mappings": "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",
  "names": ["NAME", "OnlyChild", "defineComponent", "name", "slots", "attrs", "forwardRefInjection", "inject", "FORWARD_REF_INJECTION_KEY", "forwardRefDirective", "useForwardRefDirective", "setForwardRef", "NOOP", "defaultSlot", "debugWarn", "firstLegitNode", "findFirstLegitChild", "node", "children", "child", "isObject", "Fragment", "_createVNode", "unrefElement"]
}
