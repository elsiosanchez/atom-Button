{
  "version": 3,
  "sources": ["../../../packages/components/check-tag/src/check-tag.ts", "../../../packages/components/check-tag/src/check-tag.vue", "../../../packages/components/check-tag/index.ts"],
  "sourcesContent": ["import { buildProps, isBoolean } from '@element-plus/utils'\nimport { CHANGE_EVENT } from '@element-plus/constants'\n\nimport type CheckTag from './check-tag.vue'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const checkTagProps = buildProps({\n  checked: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\nexport type CheckTagProps = ExtractPropTypes<typeof checkTagProps>\n\nexport const checkTagEmits = {\n  'update:checked': (value: boolean) => isBoolean(value),\n  [CHANGE_EVENT]: (value: boolean) => isBoolean(value),\n}\nexport type CheckTagEmits = typeof checkTagEmits\n\nexport type CheckTagInstance = InstanceType<typeof CheckTag>\n", "<template>\n  <span :class=\"[ns.b(), ns.is('checked', checked)]\" @click=\"handleChange\">\n    <slot />\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { checkTagEmits, checkTagProps } from './check-tag'\n\ndefineOptions({\n  name: 'ElCheckTag',\n})\nconst props = defineProps(checkTagProps)\nconst emit = defineEmits(checkTagEmits)\n\nconst ns = useNamespace('check-tag')\n\nconst handleChange = () => {\n  const checked = !props.checked\n  emit(CHANGE_EVENT, checked)\n  emit('update:checked', checked)\n}\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport CheckTag from './src/check-tag.vue'\n\nexport const ElCheckTag = withInstall(CheckTag)\nexport default ElCheckTag\n\nexport * from './src/check-tag'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAEY,IAAC,gBAAgB,WAAW;EACtC,SAAS;IACP,MAAM;IACN,SAAS;EACb;AACA,CAAC;AACW,IAAC,gBAAgB;EAC3B,kBAAkB,CAAC,UAAU,UAAU,KAAK;EAC5C,CAAC,YAAY,GAAG,CAAC,UAAU,UAAU,KAAK;AAC5C;;;kCCAc;EACZ,MAAM;AACR,CAAA;;;;;;;AAIM,UAAA,KAAK,aAAa,WAAW;AAEnC,UAAM,eAAe,MAAM;AACnB,YAAA,UAAU,CAAC,MAAM;AACvB,WAAK,cAAc,OAAO;AAC1B,WAAK,kBAAkB,OAAO;IAAA;;;;;;;;;;;;;;ACpBpB,IAAC,aAAa,YAAY,QAAQ;",
  "names": []
}
