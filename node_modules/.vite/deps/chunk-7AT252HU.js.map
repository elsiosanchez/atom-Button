{
  "version": 3,
  "sources": ["../../../packages/components/select-v2/src/group-item.vue", "../../../packages/components/select-v2/src/useOption.ts", "../../../packages/components/select-v2/src/defaults.ts", "../../../packages/components/select-v2/src/option-item.vue", "../../../packages/components/select-v2/src/token.ts", "../../../packages/components/select-v2/src/select-dropdown.tsx", "../../../packages/components/select-v2/src/useAllowCreate.ts", "../../../packages/components/select-v2/src/util.ts", "../../../packages/components/select-v2/src/useInput.ts", "../../../packages/components/select-v2/src/useSelect.ts", "../../../packages/components/select-v2/src/select.vue", "../../../packages/components/select-v2/index.ts"],
  "sourcesContent": ["<template>\n  <div\n    v-if=\"item.isTitle\"\n    :class=\"ns.be('group', 'title')\"\n    :style=\"[style, { lineHeight: `${height}px` }]\"\n  >\n    {{ item.label }}\n  </div>\n  <div v-else :class=\"ns.be('group', 'split')\" :style=\"style\">\n    <span\n      :class=\"ns.be('group', 'split-dash')\"\n      :style=\"{ top: `${height / 2}px` }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport { defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nexport default defineComponent({\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    style: Object,\n    height: Number,\n  },\n  setup() {\n    const ns = useNamespace('select')\n    return {\n      ns,\n    }\n  },\n})\n</script>\n", "// @ts-nocheck\nimport type { IOptionProps } from './token'\n\nexport function useOption(props: IOptionProps, { emit }) {\n  return {\n    hoverItem: () => {\n      if (!props.disabled) {\n        emit('hover', props.index)\n      }\n    },\n    selectOptionClick: () => {\n      if (!props.disabled) {\n        emit('select', props.item, props.index)\n      }\n    },\n  }\n}\n", "import { placements } from '@popperjs/core'\nimport { definePropType, isValidComponentSize } from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport { CircleClose } from '@element-plus/icons-vue'\nimport type { Component, PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { OptionType } from './select.types'\nimport type { Options, Placement } from '@element-plus/components/popper'\n\nexport const SelectProps = {\n  allowCreate: Boolean,\n  autocomplete: {\n    type: String as PropType<'none' | 'both' | 'list' | 'inline'>,\n    default: 'none',\n  },\n  automaticDropdown: Boolean,\n  clearable: Boolean,\n  clearIcon: {\n    type: [String, Object] as PropType<string | Component>,\n    default: CircleClose,\n  },\n  effect: {\n    type: String as PropType<'light' | 'dark' | string>,\n    default: 'light',\n  },\n  collapseTags: Boolean,\n  collapseTagsTooltip: {\n    type: Boolean,\n    default: false,\n  },\n  defaultFirstOption: Boolean,\n  disabled: Boolean,\n  estimatedOptionHeight: {\n    type: Number,\n    default: undefined,\n  },\n  filterable: Boolean,\n  filterMethod: Function,\n  height: {\n    type: Number,\n    default: 170, // 5 items by default\n  },\n  itemHeight: {\n    type: Number,\n    default: 34,\n  },\n  id: String,\n  loading: Boolean,\n  loadingText: String,\n  label: String,\n  modelValue: [Array, String, Number, Boolean, Object] as PropType<\n    any[] | string | number | boolean | Record<string, any> | any\n  >,\n  multiple: Boolean,\n  multipleLimit: {\n    type: Number,\n    default: 0,\n  },\n  name: String,\n  noDataText: String,\n  noMatchText: String,\n  remoteMethod: Function,\n  reserveKeyword: {\n    type: Boolean,\n    default: true,\n  },\n  options: {\n    type: Array as PropType<OptionType[]>,\n    required: true,\n  },\n  placeholder: {\n    type: String,\n  },\n  teleported: useTooltipContentProps.teleported,\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  popperOptions: {\n    type: Object as PropType<Partial<Options>>,\n    default: () => ({} as Partial<Options>),\n  },\n  remote: Boolean,\n  size: {\n    type: String as PropType<ComponentSize>,\n    validator: isValidComponentSize,\n  },\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  placement: {\n    type: definePropType<Placement>(String),\n    values: placements,\n    default: 'bottom-start',\n  },\n}\n\nexport const OptionProps = {\n  data: Array,\n  disabled: Boolean,\n  hovering: Boolean,\n  item: Object,\n  index: Number,\n  style: Object,\n  selected: Boolean,\n  created: Boolean,\n}\n", "<template>\n  <li\n    :aria-selected=\"selected\"\n    :style=\"style\"\n    :class=\"[\n      ns.be('dropdown', 'option-item'),\n      ns.is('selected', selected),\n      ns.is('disabled', disabled),\n      ns.is('created', created),\n      { hover: hovering },\n    ]\"\n    @mouseenter=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot :item=\"item\" :index=\"index\" :disabled=\"disabled\">\n      <span>{{ item.label }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport { defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useOption } from './useOption'\nimport { OptionProps } from './defaults'\n\nexport default defineComponent({\n  props: OptionProps,\n  emits: ['select', 'hover'],\n  setup(props, { emit }) {\n    const ns = useNamespace('select')\n    const { hoverItem, selectOptionClick } = useOption(props, { emit })\n    return {\n      ns,\n      hoverItem,\n      selectOptionClick,\n    }\n  },\n})\n</script>\n", "import type { OptionProps, SelectProps } from './defaults'\nimport type { ExtractPropTypes, InjectionKey, Ref } from 'vue'\nimport type { Option } from './select.types'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\nexport interface SelectV2Context {\n  props: ExtractPropTypes<typeof SelectProps>\n  expanded: boolean\n  popper: Ref<TooltipInstance>\n  onSelect: (option: Option<any>, index: number, byClick?: boolean) => void\n  onHover: (idx: number) => void\n  onKeyboardNavigate: (direction: 'forward' | 'backward') => void\n  onKeyboardSelect: () => void\n}\n\nexport const selectV2InjectionKey: InjectionKey<SelectV2Context> = Symbol(\n  'ElSelectV2Injection'\n)\nexport type IOptionProps = ExtractPropTypes<typeof OptionProps>\nexport type ISelectProps = ExtractPropTypes<typeof SelectProps>\n", "import { computed, defineComponent, inject, ref, unref, watch } from 'vue'\nimport { get } from 'lodash-unified'\nimport { isObject, isUndefined } from '@element-plus/utils'\nimport {\n  DynamicSizeList,\n  FixedSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@element-plus/components/virtual-list'\nimport type { Option, OptionItemProps } from './select.types'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  props: {\n    data: {\n      type: Array,\n      required: true,\n    },\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props, { slots, expose }) {\n    const select = inject(selectV2InjectionKey)!\n    const ns = useNamespace('select')\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref()\n\n    const size = computed(() => props.data.length)\n    watch(\n      () => size.value,\n      () => {\n        select.popper.value.updatePopper?.()\n      }\n    )\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return get(item, valueKey) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      const { valueKey } = select.props\n      if (select.props.multiple) {\n        return contains(modelValue, get(target, valueKey))\n      }\n      return isEqual(modelValue, get(target, valueKey))\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    expose({\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n      scrollToItem,\n      resetScrollTop,\n    })\n\n    const Item = (itemProps: ItemProps<any>) => {\n      const { index, data, style } = itemProps\n      const sized = unref(isSized)\n      const { itemSize, estimatedSize } = unref(listProps)\n      const { modelValue } = select.props\n      const { onSelect, onHover } = select\n      const item = data[index]\n      if (item.type === 'Group') {\n        return (\n          <GroupItem\n            item={item}\n            style={style}\n            height={(sized ? itemSize : estimatedSize) as number}\n          />\n        )\n      }\n\n      const isSelected = isItemSelected(modelValue, item)\n      const isDisabled = isItemDisabled(modelValue, isSelected)\n      const isHovering = isItemHovering(index)\n      return (\n        <OptionItem\n          {...itemProps}\n          selected={isSelected}\n          disabled={item.disabled || isDisabled}\n          created={!!item.created}\n          hovering={isHovering}\n          item={item}\n          onSelect={onSelect}\n          onHover={onHover}\n        >\n          {{\n            default: (props: OptionItemProps) =>\n              slots.default?.(props) || <span>{item.label}</span>,\n          }}\n        </OptionItem>\n      )\n    }\n\n    // computed\n    const { onKeyboardNavigate, onKeyboardSelect } = select\n\n    const onForward = () => {\n      onKeyboardNavigate('forward')\n    }\n\n    const onBackward = () => {\n      onKeyboardNavigate('backward')\n    }\n\n    const onEscOrTab = () => {\n      select.expanded = false\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      const { code } = e\n      const { tab, esc, down, up, enter } = EVENT_CODE\n      if (code !== tab) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case tab:\n        case esc: {\n          onEscOrTab()\n          break\n        }\n        case down: {\n          onForward()\n          break\n        }\n        case up: {\n          onBackward()\n          break\n        }\n        case enter: {\n          onKeyboardSelect()\n          break\n        }\n      }\n    }\n\n    return () => {\n      const { data, width } = props\n      const { height, multiple, scrollbarAlwaysOn } = select.props\n\n      if (data.length === 0) {\n        return (\n          <div\n            class={ns.b('dropdown')}\n            style={{\n              width: `${width}px`,\n            }}\n          >\n            {slots.empty?.()}\n          </div>\n        )\n      }\n\n      const List = unref(isSized) ? FixedSizeList : DynamicSizeList\n\n      return (\n        <div class={[ns.b('dropdown'), ns.is('multiple', multiple)]}>\n          <List\n            ref={listRef}\n            {...unref(listProps)}\n            className={ns.be('dropdown', 'list')}\n            scrollbarAlwaysOn={scrollbarAlwaysOn}\n            data={data}\n            height={height}\n            width={width}\n            total={data.length}\n            // @ts-ignore - dts problem\n            onKeydown={onKeydown}\n          >\n            {{\n              default: (props: ItemProps<any>) => <Item {...props} />,\n            }}\n          </List>\n        </div>\n      )\n    }\n  },\n})\n", "// @ts-nocheck\nimport { computed, ref } from 'vue'\nimport type { ISelectProps } from './token'\nimport type { Option } from './select.types'\n\nexport function useAllowCreate(props: ISelectProps, states) {\n  const createOptionCount = ref(0)\n  const cachedSelectedOption = ref<Option>(null)\n\n  const enableAllowCreateMode = computed(() => {\n    return props.allowCreate && props.filterable\n  })\n\n  function hasExistingOption(query: string) {\n    const hasValue = (option) => option.value === query\n    return (\n      (props.options && props.options.some(hasValue)) ||\n      states.createdOptions.some(hasValue)\n    )\n  }\n\n  function selectNewOption(option: Option) {\n    if (!enableAllowCreateMode.value) {\n      return\n    }\n    if (props.multiple && option.created) {\n      createOptionCount.value++\n    } else {\n      cachedSelectedOption.value = option\n    }\n  }\n\n  function createNewOption(query: string) {\n    if (enableAllowCreateMode.value) {\n      if (query && query.length > 0 && !hasExistingOption(query)) {\n        const newOption = {\n          value: query,\n          label: query,\n          created: true,\n          disabled: false,\n        }\n        if (states.createdOptions.length >= createOptionCount.value) {\n          states.createdOptions[createOptionCount.value] = newOption\n        } else {\n          states.createdOptions.push(newOption)\n        }\n      } else {\n        if (props.multiple) {\n          states.createdOptions.length = createOptionCount.value\n        } else {\n          const selectedOption = cachedSelectedOption.value\n          states.createdOptions.length = 0\n          if (selectedOption && selectedOption.created) {\n            states.createdOptions.push(selectedOption)\n          }\n        }\n      }\n    }\n  }\n\n  function removeNewOption(option: Option) {\n    if (\n      !enableAllowCreateMode.value ||\n      !option ||\n      !option.created ||\n      (option.created &&\n        props.reserveKeyword &&\n        states.inputValue === option.label)\n    ) {\n      return\n    }\n    const idx = states.createdOptions.findIndex(\n      (it) => it.value === option.value\n    )\n    if (~idx) {\n      states.createdOptions.splice(idx, 1)\n      createOptionCount.value--\n    }\n  }\n\n  function clearAllNewOption() {\n    if (enableAllowCreateMode.value) {\n      states.createdOptions.length = 0\n      createOptionCount.value = 0\n    }\n  }\n\n  return {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  }\n}\n", "// @ts-nocheck\nimport { isArray } from '@vue/shared'\n\nimport type { Option, OptionGroup } from './select.types'\n\nexport const flattenOptions = (options: Array<Option | OptionGroup>) => {\n  const flattened = []\n  options.forEach((option) => {\n    if (isArray(option.options)) {\n      flattened.push({\n        label: option.label,\n        isTitle: true,\n        type: 'Group',\n      })\n\n      option.options.forEach((o: Option) => {\n        flattened.push(o)\n      })\n      flattened.push({\n        type: 'Group',\n      })\n    } else {\n      flattened.push(option)\n    }\n  })\n\n  return flattened\n}\n", "// @ts-nocheck\nimport { ref } from 'vue'\nimport { isFunction } from '@vue/shared'\nimport { isKorean } from '@element-plus/utils'\n\nexport function useInput(handleInput: (event: InputEvent) => void) {\n  const isComposing = ref(false)\n\n  const handleCompositionStart = () => {\n    isComposing.value = true\n  }\n\n  const handleCompositionUpdate = (event) => {\n    const text = event.target.value\n    const lastCharacter = text[text.length - 1] || ''\n    isComposing.value = !isKorean(lastCharacter)\n  }\n\n  const handleCompositionEnd = (event) => {\n    if (isComposing.value) {\n      isComposing.value = false\n      if (isFunction(handleInput)) {\n        handleInput(event)\n      }\n    }\n  }\n\n  return {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  }\n}\n", "// @ts-nocheck\nimport { computed, nextTick, onMounted, reactive, ref, watch } from 'vue'\nimport { isArray, isFunction, isObject } from '@vue/shared'\nimport { get, isEqual, isNil, debounce as lodashDebounce } from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  escapeStringRegexp,\n} from '@element-plus/utils'\nimport { useFormItem, useFormSize } from '@element-plus/components/form'\n\nimport { ArrowUp } from '@element-plus/icons-vue'\nimport { useAllowCreate } from './useAllowCreate'\n\nimport { flattenOptions } from './util'\n\nimport { useInput } from './useInput'\nimport type ElTooltip from '@element-plus/components/tooltip'\nimport type { SelectProps } from './defaults'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { Option, OptionType } from './select.types'\n\nconst DEFAULT_INPUT_PLACEHOLDER = ''\nconst MINIMUM_INPUT_WIDTH = 11\nconst TAG_BASE_WIDTH = {\n  larget: 51,\n  default: 42,\n  small: 33,\n}\n\nconst useSelect = (props: ExtractPropTypes<typeof SelectProps>, emit) => {\n  // inject\n  const { t } = useLocale()\n  const nsSelectV2 = useNamespace('select-v2')\n  const nsInput = useNamespace('input')\n  const { form: elForm, formItem: elFormItem } = useFormItem()\n\n  const states = reactive({\n    inputValue: DEFAULT_INPUT_PLACEHOLDER,\n    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,\n    calculatedWidth: 0,\n    cachedPlaceholder: '',\n    cachedOptions: [] as Option[],\n    createdOptions: [] as Option[],\n    createdLabel: '',\n    createdSelected: false,\n    currentPlaceholder: '',\n    hoveringIndex: -1,\n    comboBoxHovering: false,\n    isOnComposition: false,\n    isSilentBlur: false,\n    isComposing: false,\n    inputLength: 20,\n    selectWidth: 200,\n    initialInputHeight: 0,\n    previousQuery: null,\n    previousValue: undefined,\n    query: '',\n    selectedLabel: '',\n    softFocus: false,\n    tagInMultiLine: false,\n  })\n\n  // data refs\n  const selectedIndex = ref(-1)\n  const popperSize = ref(-1)\n\n  // DOM & Component refs\n  const controlRef = ref(null)\n  const inputRef = ref(null) // el-input ref\n  const menuRef = ref(null)\n  const popper = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const selectRef = ref(null)\n  const selectionRef = ref(null) // tags ref\n  const calculatorRef = ref<HTMLElement>(null)\n\n  // the controller of the expanded popup\n  const expanded = ref(false)\n\n  const selectDisabled = computed(() => props.disabled || elForm?.disabled)\n\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * 34\n    return totalHeight > props.height ? props.height : totalHeight\n  })\n\n  const hasModelValue = computed(() => {\n    return !isNil(props.modelValue)\n  })\n\n  const showClearBtn = computed(() => {\n    const hasValue = props.multiple\n      ? Array.isArray(props.modelValue) && props.modelValue.length > 0\n      : hasModelValue.value\n\n    const criteria =\n      props.clearable &&\n      !selectDisabled.value &&\n      states.comboBoxHovering &&\n      hasValue\n    return criteria\n  })\n\n  const iconComponent = computed(() =>\n    props.remote && props.filterable ? '' : ArrowUp\n  )\n\n  const iconReverse = computed(\n    () => iconComponent.value && nsSelectV2.is('reverse', expanded.value)\n  )\n\n  const validateState = computed(() => elFormItem?.validateState || '')\n  const validateIcon = computed(\n    () => ValidateComponentsMap[validateState.value]\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  // filteredOptions includes flatten the data into one dimensional array.\n  const emptyText = computed(() => {\n    const options = filteredOptions.value\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (props.remote && states.inputValue === '' && options.length === 0)\n        return false\n      if (props.filterable && states.inputValue && options.length > 0) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (options.length === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filteredOptions = computed(() => {\n    const isValidOption = (o: Option): boolean => {\n      // fill the conditions here.\n      const query = states.inputValue\n      // when query was given, we should test on the label see whether the label contains the given query\n      const regexp = new RegExp(escapeStringRegexp(query), 'i')\n      const containsQueryString = query ? regexp.test(o.label || '') : true\n      return containsQueryString\n    }\n    if (props.loading) {\n      return []\n    }\n    return flattenOptions(\n      (props.options as OptionType[])\n        .concat(states.createdOptions)\n        .map((v) => {\n          if (isArray(v.options)) {\n            const filtered = v.options.filter(isValidOption)\n            if (filtered.length > 0) {\n              return {\n                ...v,\n                options: filtered,\n              }\n            }\n          } else {\n            if (props.remote || isValidOption(v as Option)) {\n              return v\n            }\n          }\n          return null\n        })\n        .filter((v) => v !== null)\n    )\n  })\n\n  const optionsAllDisabled = computed(() =>\n    filteredOptions.value.every((option) => option.disabled)\n  )\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    'small' === selectSize.value ? 'small' : 'default'\n  )\n\n  const tagMaxWidth = computed(() => {\n    const select = selectionRef.value\n    const size = collapseTagSize.value || 'default'\n    const paddingLeft = select\n      ? Number.parseInt(getComputedStyle(select).paddingLeft)\n      : 0\n    const paddingRight = select\n      ? Number.parseInt(getComputedStyle(select).paddingRight)\n      : 0\n    return (\n      states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size]\n    )\n  })\n\n  const calculatePopperSize = () => {\n    popperSize.value = selectRef.value?.offsetWidth || 200\n  }\n\n  const inputWrapperStyle = computed(() => {\n    return {\n      width: `${\n        states.calculatedWidth === 0\n          ? MINIMUM_INPUT_WIDTH\n          : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH\n      }px`,\n    } as CSSProperties\n  })\n\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.displayInputValue\n    }\n\n    // when it's not multiple mode, we only determine this flag based on filterable and expanded\n    // when filterable flag is true, which means we have input box on the screen\n    return props.filterable ? states.displayInputValue.length === 0 : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder || t('el.select.placeholder')\n    return props.multiple || isNil(props.modelValue)\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // this obtains the actual popper DOM element.\n  const popperRef = computed(() => popper.value?.popperRef?.contentRef)\n\n  // the index with current value in options\n  const indexRef = computed<number>(() => {\n    if (props.multiple) {\n      const len = (props.modelValue as []).length\n      if ((props.modelValue as Array<any>).length > 0) {\n        return filteredOptions.value.findIndex(\n          (o) => o.value === props.modelValue[len - 1]\n        )\n      }\n    } else {\n      if (props.modelValue) {\n        return filteredOptions.value.findIndex(\n          (o) => o.value === props.modelValue\n        )\n      }\n    }\n    return -1\n  })\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  // hooks\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  } = useAllowCreate(props, states)\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useInput((e) => onInput(e))\n\n  // methods\n  const focusAndUpdatePopup = () => {\n    inputRef.value.focus?.()\n    popper.value?.updatePopper()\n  }\n\n  const toggleMenu = () => {\n    if (props.automaticDropdown) return\n    if (!selectDisabled.value) {\n      if (states.isComposing) states.softFocus = true\n      return nextTick(() => {\n        expanded.value = !expanded.value\n        inputRef.value?.focus?.()\n      })\n    }\n  }\n\n  const onInputChange = () => {\n    if (props.filterable && states.inputValue !== states.selectedLabel) {\n      states.query = states.selectedLabel\n    }\n    handleQueryChange(states.inputValue)\n    return nextTick(() => {\n      createNewOption(states.inputValue)\n    })\n  }\n\n  const debouncedOnInputChange = lodashDebounce(onInputChange, debounce.value)\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n  }\n\n  const emitChange = (val: any | any[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const update = (val: any) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emitChange(val)\n    states.previousValue = val?.toString()\n  }\n\n  const getValueIndex = (arr = [], value: unknown) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value)\n    }\n    const valueKey = props.valueKey\n    let index = -1\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i\n        return true\n      }\n      return false\n    })\n    return index\n  }\n\n  const getValueKey = (item: unknown) => {\n    return isObject(item) ? get(item, props.valueKey) : item\n  }\n\n  // if the selected item is item then we get label via indexing\n  // otherwise it should be string we simply return the item itself.\n  const getLabel = (item: unknown) => {\n    return isObject(item) ? item.label : item\n  }\n\n  const resetInputHeight = () => {\n    if (props.collapseTags && !props.filterable) {\n      return\n    }\n    return nextTick(() => {\n      if (!inputRef.value) return\n      const selection = selectionRef.value\n\n      selectRef.value.height = selection.offsetHeight\n      if (expanded.value && emptyText.value !== false) {\n        popper.value?.updatePopper?.()\n      }\n    })\n  }\n\n  const handleResize = () => {\n    resetInputWidth()\n    calculatePopperSize()\n    popper.value?.updatePopper?.()\n    if (props.multiple) {\n      return resetInputHeight()\n    }\n  }\n\n  const resetInputWidth = () => {\n    const select = selectionRef.value\n    if (select) {\n      states.selectWidth = select.getBoundingClientRect().width\n    }\n  }\n\n  const onSelect = (option: Option, idx: number, byClick = true) => {\n    if (props.multiple) {\n      let selectedOptions = (props.modelValue as any[]).slice()\n\n      const index = getValueIndex(selectedOptions, getValueKey(option))\n      if (index > -1) {\n        selectedOptions = [\n          ...selectedOptions.slice(0, index),\n          ...selectedOptions.slice(index + 1),\n        ]\n        states.cachedOptions.splice(index, 1)\n        removeNewOption(option)\n      } else if (\n        props.multipleLimit <= 0 ||\n        selectedOptions.length < props.multipleLimit\n      ) {\n        selectedOptions = [...selectedOptions, getValueKey(option)]\n        states.cachedOptions.push(option)\n        selectNewOption(option)\n        updateHoveringIndex(idx)\n      }\n      update(selectedOptions)\n      if (option.created) {\n        states.query = ''\n        handleQueryChange('')\n        states.inputLength = 20\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        inputRef.value.focus?.()\n        onUpdateInputValue('')\n      }\n      if (props.filterable) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      resetInputHeight()\n      setSoftFocus()\n    } else {\n      selectedIndex.value = idx\n      states.selectedLabel = option.label\n      update(getValueKey(option))\n      expanded.value = false\n      states.isComposing = false\n      states.isSilentBlur = byClick\n      selectNewOption(option)\n      if (!option.created) {\n        clearAllNewOption()\n      }\n      updateHoveringIndex(idx)\n    }\n  }\n\n  const deleteTag = (event: MouseEvent, tag: Option) => {\n    const { valueKey } = props\n    const index = (props.modelValue as Array<any>).indexOf(get(tag, valueKey))\n\n    if (index > -1 && !selectDisabled.value) {\n      const value = [\n        ...(props.modelValue as Array<unknown>).slice(0, index),\n        ...(props.modelValue as Array<unknown>).slice(index + 1),\n      ]\n      states.cachedOptions.splice(index, 1)\n      update(value)\n      emit('remove-tag', get(tag, valueKey))\n      states.softFocus = true\n      removeNewOption(tag)\n      return nextTick(focusAndUpdatePopup)\n    }\n    event.stopPropagation()\n  }\n\n  const handleFocus = (event: FocusEvent) => {\n    const focused = states.isComposing\n    states.isComposing = true\n    if (!states.softFocus) {\n      // If already in the focus state, shouldn't trigger event\n      if (!focused) emit('focus', event)\n    } else {\n      states.softFocus = false\n    }\n  }\n\n  const handleBlur = (event: FocusEvent) => {\n    states.softFocus = false\n\n    // reset input value when blurred\n    // https://github.com/ElemeFE/element/pull/10822\n    return nextTick(() => {\n      inputRef.value?.blur?.()\n      if (calculatorRef.value) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      if (states.isSilentBlur) {\n        states.isSilentBlur = false\n      } else {\n        if (states.isComposing) {\n          emit('blur', event)\n        }\n      }\n      states.isComposing = false\n    })\n  }\n\n  // keyboard handlers\n  const handleEsc = () => {\n    if (states.displayInputValue.length > 0) {\n      onUpdateInputValue('')\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const handleDel = (e: KeyboardEvent) => {\n    if (states.displayInputValue.length === 0) {\n      e.preventDefault()\n      const selected = (props.modelValue as Array<any>).slice()\n      selected.pop()\n      removeNewOption(states.cachedOptions.pop())\n      update(selected)\n    }\n  }\n\n  const handleClear = () => {\n    let emptyValue: string | any[]\n    if (isArray(props.modelValue)) {\n      emptyValue = []\n    } else {\n      emptyValue = undefined\n    }\n\n    states.softFocus = true\n    if (props.multiple) {\n      states.cachedOptions = []\n    } else {\n      states.selectedLabel = ''\n    }\n    expanded.value = false\n    update(emptyValue)\n    emit('clear')\n    clearAllNewOption()\n    return nextTick(focusAndUpdatePopup)\n  }\n\n  const onUpdateInputValue = (val: string) => {\n    states.displayInputValue = val\n    states.inputValue = val\n  }\n\n  const onKeyboardNavigate = (\n    direction: 'forward' | 'backward',\n    hoveringIndex: number = undefined\n  ) => {\n    const options = filteredOptions.value\n    if (\n      !['forward', 'backward'].includes(direction) ||\n      selectDisabled.value ||\n      options.length <= 0 ||\n      optionsAllDisabled.value\n    ) {\n      return\n    }\n    if (!expanded.value) {\n      return toggleMenu()\n    }\n    if (hoveringIndex === undefined) {\n      hoveringIndex = states.hoveringIndex\n    }\n    let newIndex = -1\n    if (direction === 'forward') {\n      newIndex = hoveringIndex + 1\n      if (newIndex >= options.length) {\n        // return to the first option\n        newIndex = 0\n      }\n    } else if (direction === 'backward') {\n      newIndex = hoveringIndex - 1\n      if (newIndex < 0 || newIndex >= options.length) {\n        // navigate to the last one\n        newIndex = options.length - 1\n      }\n    }\n    const option = options[newIndex]\n    if (option.disabled || option.type === 'Group') {\n      // prevent dispatching multiple nextTick callbacks.\n      return onKeyboardNavigate(direction, newIndex)\n    } else {\n      updateHoveringIndex(newIndex)\n      scrollToItem(newIndex)\n    }\n  }\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu()\n    } else if (\n      ~states.hoveringIndex &&\n      filteredOptions.value[states.hoveringIndex]\n    ) {\n      onSelect(\n        filteredOptions.value[states.hoveringIndex],\n        states.hoveringIndex,\n        false\n      )\n    }\n  }\n\n  const updateHoveringIndex = (idx: number) => {\n    states.hoveringIndex = idx\n  }\n\n  const resetHoveringIndex = () => {\n    states.hoveringIndex = -1\n  }\n\n  const setSoftFocus = () => {\n    const _input = inputRef.value\n    if (_input) {\n      _input.focus?.()\n    }\n  }\n\n  const onInput = (event) => {\n    const value = event.target.value\n    onUpdateInputValue(value)\n    if (states.displayInputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n\n    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width\n    if (props.multiple) {\n      resetInputHeight()\n    }\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const handleClickOutside = () => {\n    expanded.value = false\n    return handleBlur()\n  }\n\n  const handleMenuEnter = () => {\n    states.inputValue = states.displayInputValue\n    return nextTick(() => {\n      if (~indexRef.value) {\n        updateHoveringIndex(indexRef.value)\n        scrollToItem(states.hoveringIndex)\n      }\n    })\n  }\n\n  const scrollToItem = (index: number) => {\n    menuRef.value.scrollToItem(index)\n  }\n\n  const initStates = () => {\n    resetHoveringIndex()\n    if (props.multiple) {\n      if ((props.modelValue as Array<any>).length > 0) {\n        let initHovering = false\n        states.cachedOptions.length = 0\n        states.previousValue = props.modelValue.toString()\n        ;(props.modelValue as Array<any>).forEach((selected) => {\n          const itemIndex = filteredOptions.value.findIndex(\n            (option) => getValueKey(option) === selected\n          )\n          if (~itemIndex) {\n            states.cachedOptions.push(\n              filteredOptions.value[itemIndex] as Option\n            )\n            if (!initHovering) {\n              updateHoveringIndex(itemIndex)\n            }\n            initHovering = true\n          }\n        })\n      } else {\n        states.cachedOptions = []\n        states.previousValue = undefined\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue\n        const options = filteredOptions.value\n        const selectedItemIndex = options.findIndex(\n          (option) => getValueKey(option) === getValueKey(props.modelValue)\n        )\n        if (~selectedItemIndex) {\n          states.selectedLabel = options[selectedItemIndex].label\n          updateHoveringIndex(selectedItemIndex)\n        } else {\n          states.selectedLabel = `${props.modelValue}`\n        }\n      } else {\n        states.selectedLabel = ''\n        states.previousValue = undefined\n      }\n    }\n    clearAllNewOption()\n    calculatePopperSize()\n  }\n\n  // in order to track these individually, we need to turn them into refs instead of watching the entire\n  // reactive object which could cause perf penalty when unnecessary field gets changed the watch method will\n  // be invoked.\n\n  watch(expanded, (val) => {\n    emit('visible-change', val)\n    if (val) {\n      popper.value.update?.()\n      // the purpose of this function is to differ the blur event trigger mechanism\n    } else {\n      states.displayInputValue = ''\n      states.previousQuery = null\n      createNewOption('')\n    }\n  })\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (!val || val.toString() !== states.previousValue) {\n        initStates()\n      }\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => props.options,\n    () => {\n      const input = inputRef.value\n      // filter or remote-search scenarios are not initialized\n      if (!input || (input && document.activeElement !== input)) {\n        initStates()\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // fix the problem that scrollTop is not reset in filterable mode\n  watch(filteredOptions, () => {\n    return nextTick(menuRef.value.resetScrollTop)\n  })\n\n  onMounted(() => {\n    initStates()\n  })\n  useResizeObserver(selectRef, handleResize)\n\n  return {\n    // data exports\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    inputWrapperStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    // readonly,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    tagMaxWidth,\n    nsSelectV2,\n    nsInput,\n\n    // refs items exports\n    calculatorRef,\n    controlRef,\n    inputRef,\n    menuRef,\n    popper,\n    selectRef,\n    selectionRef,\n\n    popperRef,\n\n    validateState,\n    validateIcon,\n\n    // methods exports\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    handleMenuEnter,\n    handleResize,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: updateHoveringIndex,\n    onUpdateInputValue,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  }\n}\n\nexport default useSelect\n", "<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelectV2.b(), nsSelectV2.m(selectSize)]\"\n    @click.stop=\"toggleMenu\"\n    @mouseenter=\"states.comboBoxHovering = true\"\n    @mouseleave=\"states.comboBoxHovering = false\"\n  >\n    <el-tooltip\n      ref=\"popper\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelectV2.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelectV2.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.inputValue = states.displayInputValue\"\n    >\n      <template #default>\n        <div\n          ref=\"selectionRef\"\n          :class=\"[\n            nsSelectV2.e('wrapper'),\n            nsSelectV2.is('focused', states.isComposing || expanded),\n            nsSelectV2.is('hovering', states.comboBoxHovering),\n            nsSelectV2.is('filterable', filterable),\n            nsSelectV2.is('disabled', selectDisabled),\n          ]\"\n        >\n          <div v-if=\"$slots.prefix\">\n            <slot name=\"prefix\" />\n          </div>\n          <div v-if=\"multiple\" :class=\"nsSelectV2.e('selection')\">\n            <template v-if=\"collapseTags && modelValue.length > 0\">\n              <div :class=\"nsSelectV2.e('selected-item')\">\n                <el-tag\n                  :closable=\"\n                    !selectDisabled && !states.cachedOptions[0]?.disable\n                  \"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, states.cachedOptions[0])\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ states.cachedOptions[0]?.label }}</span\n                  >\n                </el-tag>\n                <el-tag\n                  v-if=\"modelValue.length > 1\"\n                  :closable=\"false\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                >\n                  <el-tooltip\n                    v-if=\"collapseTagsTooltip\"\n                    :disabled=\"dropdownMenuVisible\"\n                    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                    :effect=\"effect\"\n                    placement=\"bottom\"\n                    :teleported=\"false\"\n                  >\n                    <template #default>\n                      <span\n                        :class=\"nsSelectV2.e('tags-text')\"\n                        :style=\"{\n                          maxWidth: `${tagMaxWidth}px`,\n                        }\"\n                        >+ {{ modelValue.length - 1 }}</span\n                      >\n                    </template>\n                    <template #content>\n                      <div :class=\"nsSelectV2.e('selection')\">\n                        <div\n                          v-for=\"(selected, idx) in states.cachedOptions.slice(\n                            1\n                          )\"\n                          :key=\"idx\"\n                          :class=\"nsSelectV2.e('selected-item')\"\n                        >\n                          <el-tag\n                            :key=\"getValueKey(selected)\"\n                            :closable=\"!selectDisabled && !selected.disabled\"\n                            :size=\"collapseTagSize\"\n                            class=\"in-tooltip\"\n                            type=\"info\"\n                            disable-transitions\n                            @close=\"deleteTag($event, selected)\"\n                          >\n                            <span\n                              :class=\"nsSelectV2.e('tags-text')\"\n                              :style=\"{\n                                maxWidth: `${tagMaxWidth}px`,\n                              }\"\n                              >{{ getLabel(selected) }}</span\n                            >\n                          </el-tag>\n                        </div>\n                      </div>\n                    </template>\n                  </el-tooltip>\n                  <span\n                    v-else\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >+ {{ modelValue.length - 1 }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n\n            <template v-else>\n              <div\n                v-for=\"(selected, idx) in states.cachedOptions\"\n                :key=\"idx\"\n                :class=\"nsSelectV2.e('selected-item')\"\n              >\n                <el-tag\n                  :key=\"getValueKey(selected)\"\n                  :closable=\"!selectDisabled && !selected.disabled\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, selected)\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ getLabel(selected) }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n              :style=\"inputWrapperStyle\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-labelledby=\"label\"\n                :class=\"[\n                  nsSelectV2.is(selectSize),\n                  nsSelectV2.e('combobox-input'),\n                ]\"\n                :disabled=\"disabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @update:modelValue=\"onUpdateInputValue\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelectV2.e('input-calculator')\"\n                v-text=\"states.displayInputValue\"\n              />\n            </div>\n          </div>\n          <template v-else>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                :aria-labelledby=\"label\"\n                :aria-expanded=\"expanded\"\n                autocapitalize=\"off\"\n                :autocomplete=\"autocomplete\"\n                :class=\"nsSelectV2.e('combobox-input')\"\n                :disabled=\"disabled\"\n                :name=\"name\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @focus=\"handleFocus\"\n                @blur=\"handleBlur\"\n                @input=\"onInput\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @update:modelValue=\"onUpdateInputValue\"\n              />\n            </div>\n            <span\n              v-if=\"filterable\"\n              ref=\"calculatorRef\"\n              aria-hidden=\"true\"\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-calculator'),\n              ]\"\n              v-text=\"states.displayInputValue\"\n            />\n          </template>\n          <span\n            v-if=\"shouldShowPlaceholder\"\n            :class=\"[\n              nsSelectV2.e('placeholder'),\n              nsSelectV2.is(\n                'transparent',\n                multiple ? modelValue.length === 0 : !hasModelValue\n              ),\n            ]\"\n          >\n            {{ currentPlaceholder }}\n          </span>\n          <span :class=\"nsSelectV2.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </span>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template #empty>\n            <slot name=\"empty\">\n              <p :class=\"nsSelectV2.e('empty')\">\n                {{ emptyText ? emptyText : '' }}\n              </p>\n            </slot>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  provide,\n  reactive,\n  toRefs,\n  vModelText,\n} from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { selectV2InjectionKey } from './token'\nimport { SelectProps } from './defaults'\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside, ModelText: vModelText },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      popper: API.popper,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return {\n      ...API,\n      modelValue,\n    }\n  },\n})\n</script>\n", "import Select from './src/select.vue'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nSelect.install = (app: App): void => {\n  app.component(Select.name, Select)\n}\n\nconst _Select = Select as SFCWithInstall<typeof Select>\n\nexport default _Select\nexport const ElSelectV2 = _Select\n\nexport * from './src/token'\n"],
  "mappings": "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",
  "names": ["_createElementBlock", "_normalizeClass", "_normalizeStyle", "_toDisplayString", "_openBlock", "_createElementVNode", "_sfc_main", "_createElementBlock", "_normalizeStyle", "_normalizeClass", "_renderSlot", "_createElementVNode", "_toDisplayString", "defineComponent", "name", "props", "data", "type", "Array", "required", "hoveringIndex", "Number", "width", "slots", "expose", "select", "ns", "cachedHeights", "listRef", "size", "computed", "watch", "popper", "isSized", "isUndefined", "estimatedOptionHeight", "listProps", "value", "itemSize", "itemHeight", "estimatedSize", "contains", "valueKey", "isObject", "target", "arr", "includes", "item", "isEqual", "selected", "modelValue", "isItemDisabled", "multiple", "multipleLimit", "isItemHovering", "resetScrollTop", "list", "isItemSelected", "Item", "style", "itemProps", "unref", "_mergeProps", "onSelect", "onHover", "sized", "disabled", "onKeyboardSelect", "onForward", "onBackward", "onEscOrTab", "onKeydown", "code", "up", "enter", "EVENT_CODE", "e", "_createVNode", "debounce", "lodashDebounce", "_sfc_main", "_createElementBlock", "_normalizeClass", "_createVNode", "_withCtx", "_createElementVNode", "_openBlock", "_hoisted_1", "_renderSlot", "_createCommentVNode", "_normalizeStyle", "_toDisplayString", "_createBlock", "_Fragment", "_renderList", "_withDirectives", "_withKeys", "_withModifiers", "_resolveDynamicComponent", "_vShow", "_guardReactiveProps"]
}
