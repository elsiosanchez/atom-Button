{
  "version": 3,
  "sources": ["../../../packages/components/upload/src/constants.ts", "../../../packages/components/upload/src/ajax.ts", "../../../packages/components/upload/src/upload.ts", "../../../packages/components/upload/src/upload-list.ts", "../../../packages/components/upload/src/upload-list.vue", "../../../packages/components/upload/src/upload-dragger.ts", "../../../packages/components/upload/src/upload-dragger.vue", "../../../packages/components/upload/src/upload-content.ts", "../../../packages/components/upload/src/upload-content.vue", "../../../packages/components/upload/src/use-handlers.ts", "../../../packages/components/upload/src/upload.vue", "../../../packages/components/upload/index.ts"],
  "sourcesContent": ["import type { ComputedRef, InjectionKey } from 'vue'\n\nexport interface UploadContext {\n  accept: ComputedRef<string>\n}\n\nexport const uploadContextKey: InjectionKey<UploadContext> =\n  Symbol('uploadContextKey')\n", "import { isNil } from 'lodash-unified'\nimport { throwError } from '@element-plus/utils'\nimport type {\n  UploadProgressEvent,\n  UploadRequestHandler,\n  UploadRequestOptions,\n} from './upload'\n\nconst SCOPE = 'ElUpload'\n\nexport class UploadAjaxError extends Error {\n  name = 'UploadAjaxError'\n  status: number\n  method: string\n  url: string\n\n  constructor(message: string, status: number, method: string, url: string) {\n    super(message)\n    this.status = status\n    this.method = method\n    this.url = url\n  }\n}\n\nfunction getError(\n  action: string,\n  option: UploadRequestOptions,\n  xhr: XMLHttpRequest\n) {\n  let msg: string\n  if (xhr.response) {\n    msg = `${xhr.response.error || xhr.response}`\n  } else if (xhr.responseText) {\n    msg = `${xhr.responseText}`\n  } else {\n    msg = `fail to ${option.method} ${action} ${xhr.status}`\n  }\n\n  return new UploadAjaxError(msg, xhr.status, option.method, action)\n}\n\nfunction getBody(xhr: XMLHttpRequest): XMLHttpRequestResponseType {\n  const text = xhr.responseText || xhr.response\n  if (!text) {\n    return text\n  }\n\n  try {\n    return JSON.parse(text)\n  } catch {\n    return text\n  }\n}\n\nexport const ajaxUpload: UploadRequestHandler = (option) => {\n  if (typeof XMLHttpRequest === 'undefined')\n    throwError(SCOPE, 'XMLHttpRequest is undefined')\n\n  const xhr = new XMLHttpRequest()\n  const action = option.action\n\n  if (xhr.upload) {\n    xhr.upload.addEventListener('progress', (evt) => {\n      const progressEvt = evt as UploadProgressEvent\n      progressEvt.percent = evt.total > 0 ? (evt.loaded / evt.total) * 100 : 0\n      option.onProgress(progressEvt)\n    })\n  }\n\n  const formData = new FormData()\n  if (option.data) {\n    for (const [key, value] of Object.entries(option.data)) {\n      if (Array.isArray(value)) formData.append(key, ...value)\n      else formData.append(key, value)\n    }\n  }\n  formData.append(option.filename, option.file, option.file.name)\n\n  xhr.addEventListener('error', () => {\n    option.onError(getError(action, option, xhr))\n  })\n\n  xhr.addEventListener('load', () => {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(action, option, xhr))\n    }\n    option.onSuccess(getBody(xhr))\n  })\n\n  xhr.open(option.method, action, true)\n\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true\n  }\n\n  const headers = option.headers || {}\n  if (headers instanceof Headers) {\n    headers.forEach((value, key) => xhr.setRequestHeader(key, value))\n  } else {\n    for (const [key, value] of Object.entries(headers)) {\n      if (isNil(value)) continue\n      xhr.setRequestHeader(key, String(value))\n    }\n  }\n\n  xhr.send(formData)\n  return xhr\n}\n", "import { NOOP } from '@vue/shared'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { ajaxUpload } from './ajax'\n\nimport type { UploadAjaxError } from './ajax'\nimport type { Awaitable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type Upload from './upload.vue'\n\nexport const uploadListTypes = ['text', 'picture', 'picture-card'] as const\n\nlet fileId = 1\nexport const genFileId = () => Date.now() + fileId++\n\nexport type UploadStatus = 'ready' | 'uploading' | 'success' | 'fail'\nexport interface UploadProgressEvent extends ProgressEvent {\n  percent: number\n}\n\nexport interface UploadRequestOptions {\n  action: string\n  method: string\n  data: Record<string, string | Blob | [string | Blob, string]>\n  filename: string\n  file: File\n  headers: Headers | Record<string, string | number | null | undefined>\n  onError: (evt: UploadAjaxError) => void\n  onProgress: (evt: UploadProgressEvent) => void\n  onSuccess: (response: any) => void\n  withCredentials: boolean\n}\nexport interface UploadFile {\n  name: string\n  percentage?: number\n  status: UploadStatus\n  size?: number\n  response?: unknown\n  uid: number\n  url?: string\n  raw?: UploadRawFile\n}\nexport type UploadUserFile = Omit<UploadFile, 'status' | 'uid'> &\n  Partial<Pick<UploadFile, 'status' | 'uid'>>\n\nexport type UploadFiles = UploadFile[]\nexport interface UploadRawFile extends File {\n  uid: number\n}\nexport type UploadRequestHandler = (\n  options: UploadRequestOptions\n) => XMLHttpRequest | Promise<unknown>\nexport interface UploadHooks {\n  beforeUpload: (\n    rawFile: UploadRawFile\n  ) => Awaitable<void | undefined | null | boolean | File | Blob>\n  beforeRemove: (\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => Awaitable<boolean>\n  onRemove: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onChange: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onPreview: (uploadFile: UploadFile) => void\n  onSuccess: (\n    response: any,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onProgress: (\n    evt: UploadProgressEvent,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onError: (\n    error: Error,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onExceed: (files: File[], uploadFiles: UploadUserFile[]) => void\n}\n\nexport const uploadBaseProps = buildProps({\n  action: {\n    type: String,\n    default: '#',\n  },\n  headers: {\n    type: definePropType<Headers | Record<string, any>>(Object),\n  },\n  method: {\n    type: String,\n    default: 'post',\n  },\n  data: {\n    type: Object,\n    default: () => mutable({} as const),\n  },\n  multiple: {\n    type: Boolean,\n    default: false,\n  },\n  name: {\n    type: String,\n    default: 'file',\n  },\n  drag: {\n    type: Boolean,\n    default: false,\n  },\n  withCredentials: Boolean,\n  showFileList: {\n    type: Boolean,\n    default: true,\n  },\n  accept: {\n    type: String,\n    default: '',\n  },\n  type: {\n    type: String,\n    default: 'select',\n  },\n  fileList: {\n    type: definePropType<UploadUserFile[]>(Array),\n    default: () => mutable([] as const),\n  },\n  autoUpload: {\n    type: Boolean,\n    default: true,\n  },\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    default: 'text',\n  },\n  httpRequest: {\n    type: definePropType<UploadRequestHandler>(Function),\n    default: ajaxUpload,\n  },\n  disabled: Boolean,\n  limit: Number,\n} as const)\n\nexport const uploadProps = buildProps({\n  ...uploadBaseProps,\n  beforeUpload: {\n    type: definePropType<UploadHooks['beforeUpload']>(Function),\n    default: NOOP,\n  },\n  beforeRemove: {\n    type: definePropType<UploadHooks['beforeRemove']>(Function),\n  },\n  onRemove: {\n    type: definePropType<UploadHooks['onRemove']>(Function),\n    default: NOOP,\n  },\n  onChange: {\n    type: definePropType<UploadHooks['onChange']>(Function),\n    default: NOOP,\n  },\n  onPreview: {\n    type: definePropType<UploadHooks['onPreview']>(Function),\n    default: NOOP,\n  },\n  onSuccess: {\n    type: definePropType<UploadHooks['onSuccess']>(Function),\n    default: NOOP,\n  },\n  onProgress: {\n    type: definePropType<UploadHooks['onProgress']>(Function),\n    default: NOOP,\n  },\n  onError: {\n    type: definePropType<UploadHooks['onError']>(Function),\n    default: NOOP,\n  },\n  onExceed: {\n    type: definePropType<UploadHooks['onExceed']>(Function),\n    default: NOOP,\n  },\n} as const)\n\nexport type UploadProps = ExtractPropTypes<typeof uploadProps>\n\nexport type UploadInstance = InstanceType<typeof Upload>\n", "import { NOOP } from '@vue/shared'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { uploadListTypes } from './upload'\nimport type { ExtractPropTypes } from 'vue'\nimport type { UploadFile, UploadFiles, UploadHooks } from './upload'\nimport type UploadList from './upload-list.vue'\n\nexport const uploadListProps = buildProps({\n  files: {\n    type: definePropType<UploadFiles>(Array),\n    default: () => mutable([]),\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  handlePreview: {\n    type: definePropType<UploadHooks['onPreview']>(Function),\n    default: NOOP,\n  },\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    default: 'text',\n  },\n} as const)\n\nexport type UploadListProps = ExtractPropTypes<typeof uploadListProps>\nexport const uploadListEmits = {\n  remove: (file: UploadFile) => !!file,\n}\nexport type UploadListEmits = typeof uploadListEmits\nexport type UploadListInstance = InstanceType<typeof UploadList>\n", "<template>\n  <transition-group\n    tag=\"ul\"\n    :class=\"[\n      nsUpload.b('list'),\n      nsUpload.bm('list', listType),\n      nsUpload.is('disabled', disabled),\n    ]\"\n    :name=\"nsList.b()\"\n  >\n    <li\n      v-for=\"file in files\"\n      :key=\"file.uid || file.name\"\n      :class=\"[\n        nsUpload.be('list', 'item'),\n        nsUpload.is(file.status),\n        { focusing },\n      ]\"\n      tabindex=\"0\"\n      @keydown.delete=\"!disabled && handleRemove(file)\"\n      @focus=\"focusing = true\"\n      @blur=\"focusing = false\"\n      @click=\"focusing = false\"\n    >\n      <slot :file=\"file\">\n        <img\n          v-if=\"\n            listType === 'picture' ||\n            (file.status !== 'uploading' && listType === 'picture-card')\n          \"\n          :class=\"nsUpload.be('list', 'item-thumbnail')\"\n          :src=\"file.url\"\n          alt=\"\"\n        />\n        <div\n          v-if=\"file.status === 'uploading' || listType !== 'picture-card'\"\n          :class=\"nsUpload.be('list', 'item-info')\"\n        >\n          <a\n            :class=\"nsUpload.be('list', 'item-name')\"\n            @click.prevent=\"handlePreview(file)\"\n          >\n            <el-icon :class=\"nsIcon.m('document')\">\n              <Document />\n            </el-icon>\n            <span :class=\"nsUpload.be('list', 'item-file-name')\">\n              {{ file.name }}\n            </span>\n          </a>\n          <el-progress\n            v-if=\"file.status === 'uploading'\"\n            :type=\"listType === 'picture-card' ? 'circle' : 'line'\"\n            :stroke-width=\"listType === 'picture-card' ? 6 : 2\"\n            :percentage=\"Number(file.percentage)\"\n            :style=\"listType === 'picture-card' ? '' : 'margin-top: 0.5rem'\"\n          />\n        </div>\n\n        <label :class=\"nsUpload.be('list', 'item-status-label')\">\n          <el-icon\n            v-if=\"listType === 'text'\"\n            :class=\"[nsIcon.m('upload-success'), nsIcon.m('circle-check')]\"\n          >\n            <circle-check />\n          </el-icon>\n          <el-icon\n            v-else-if=\"['picture-card', 'picture'].includes(listType)\"\n            :class=\"[nsIcon.m('upload-success'), nsIcon.m('check')]\"\n          >\n            <Check />\n          </el-icon>\n        </label>\n        <el-icon\n          v-if=\"!disabled\"\n          :class=\"nsIcon.m('close')\"\n          @click=\"handleRemove(file)\"\n        >\n          <Close />\n        </el-icon>\n        <!-- Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn-->\n        <!-- This is a bug which needs to be fixed -->\n        <!-- TODO: Fix the incorrect navigation interaction -->\n        <i v-if=\"!disabled\" :class=\"nsIcon.m('close-tip')\">{{\n          t('el.upload.deleteTip')\n        }}</i>\n        <span\n          v-if=\"listType === 'picture-card'\"\n          :class=\"nsUpload.be('list', 'item-actions')\"\n        >\n          <span\n            :class=\"nsUpload.be('list', 'item-preview')\"\n            @click=\"handlePreview(file)\"\n          >\n            <el-icon :class=\"nsIcon.m('zoom-in')\"><zoom-in /></el-icon>\n          </span>\n          <span\n            v-if=\"!disabled\"\n            :class=\"nsUpload.be('list', 'item-delete')\"\n            @click=\"handleRemove(file)\"\n          >\n            <el-icon :class=\"nsIcon.m('delete')\">\n              <Delete />\n            </el-icon>\n          </span>\n        </span>\n      </slot>\n    </li>\n    <slot name=\"append\" />\n  </transition-group>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport {\n  Check,\n  CircleCheck,\n  Close,\n  Delete,\n  Document,\n  ZoomIn,\n} from '@element-plus/icons-vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElProgress from '@element-plus/components/progress'\nimport { useFormDisabled } from '@element-plus/components/form'\n\nimport { uploadListEmits, uploadListProps } from './upload-list'\nimport type { UploadFile } from './upload'\n\ndefineOptions({\n  name: 'ElUploadList',\n})\n\ndefineProps(uploadListProps)\nconst emit = defineEmits(uploadListEmits)\n\nconst { t } = useLocale()\nconst nsUpload = useNamespace('upload')\nconst nsIcon = useNamespace('icon')\nconst nsList = useNamespace('list')\nconst disabled = useFormDisabled()\n\nconst focusing = ref(false)\n\nconst handleRemove = (file: UploadFile) => {\n  emit('remove', file)\n}\n</script>\n", "import { buildProps, isArray } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type UploadDragger from './upload-dragger.vue'\n\nexport const uploadDraggerProps = buildProps({\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\nexport type UploadDraggerProps = ExtractPropTypes<typeof uploadDraggerProps>\n\nexport const uploadDraggerEmits = {\n  file: (file: File[]) => isArray(file),\n}\nexport type UploadDraggerEmits = typeof uploadDraggerEmits\n\nexport type UploadDraggerInstance = InstanceType<typeof UploadDragger>\n", "<template>\n  <div\n    :class=\"[ns.b('dragger'), ns.is('dragover', dragover)]\"\n    @drop.prevent=\"onDrop\"\n    @dragover.prevent=\"onDragover\"\n    @dragleave.prevent=\"dragover = false\"\n  >\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { inject, ref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport { throwError } from '@element-plus/utils/error'\nimport { uploadContextKey } from './constants'\nimport { uploadDraggerEmits, uploadDraggerProps } from './upload-dragger'\n\nconst COMPONENT_NAME = 'ElUploadDrag'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\ndefineProps(uploadDraggerProps)\nconst emit = defineEmits(uploadDraggerEmits)\n\nconst uploaderContext = inject(uploadContextKey)\nif (!uploaderContext) {\n  throwError(\n    COMPONENT_NAME,\n    'usage: <el-upload><el-upload-dragger /></el-upload>'\n  )\n}\n\nconst ns = useNamespace('upload')\nconst dragover = ref(false)\nconst disabled = useFormDisabled()\n\nconst onDrop = (e: DragEvent) => {\n  if (disabled.value) return\n  dragover.value = false\n\n  e.stopPropagation()\n\n  const files = Array.from(e.dataTransfer!.files)\n  const accept = uploaderContext.accept.value\n  if (!accept) {\n    emit('file', files)\n    return\n  }\n\n  const filesFiltered = files.filter((file) => {\n    const { type, name } = file\n    const extension = name.includes('.') ? `.${name.split('.').pop()}` : ''\n    const baseType = type.replace(/\\/.*$/, '')\n    return accept\n      .split(',')\n      .map((type) => type.trim())\n      .filter((type) => type)\n      .some((acceptedType) => {\n        if (acceptedType.startsWith('.')) {\n          return extension === acceptedType\n        }\n        if (/\\/\\*$/.test(acceptedType)) {\n          return baseType === acceptedType.replace(/\\/\\*$/, '')\n        }\n        if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n          return type === acceptedType\n        }\n        return false\n      })\n  })\n\n  emit('file', filesFiltered)\n}\n\nconst onDragover = () => {\n  if (!disabled.value) dragover.value = true\n}\n</script>\n", "import { NOOP } from '@vue/shared'\nimport { buildProps, definePropType } from '@element-plus/utils'\nimport { uploadBaseProps } from './upload'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type {\n  UploadFile,\n  UploadHooks,\n  UploadProgressEvent,\n  UploadRawFile,\n} from './upload'\nimport type UploadContent from './upload-content.vue'\nimport type { UploadAjaxError } from './ajax'\n\nexport const uploadContentProps = buildProps({\n  ...uploadBaseProps,\n\n  beforeUpload: {\n    type: definePropType<UploadHooks['beforeUpload']>(Function),\n    default: NOOP,\n  },\n  onRemove: {\n    type: definePropType<\n      (file: UploadFile | UploadRawFile, rawFile?: UploadRawFile) => void\n    >(Function),\n    default: NOOP,\n  },\n  onStart: {\n    type: definePropType<(rawFile: UploadRawFile) => void>(Function),\n    default: NOOP,\n  },\n  onSuccess: {\n    type: definePropType<(response: any, rawFile: UploadRawFile) => unknown>(\n      Function\n    ),\n    default: NOOP,\n  },\n  onProgress: {\n    type: definePropType<\n      (evt: UploadProgressEvent, rawFile: UploadRawFile) => void\n    >(Function),\n    default: NOOP,\n  },\n  onError: {\n    type: definePropType<\n      (err: UploadAjaxError, rawFile: UploadRawFile) => void\n    >(Function),\n    default: NOOP,\n  },\n  onExceed: {\n    type: definePropType<UploadHooks['onExceed']>(Function),\n    default: NOOP,\n  },\n} as const)\n\nexport type UploadContentProps = ExtractPropTypes<typeof uploadContentProps>\n\nexport type UploadContentInstance = InstanceType<typeof UploadContent>\n", "<template>\n  <div\n    :class=\"[ns.b(), ns.m(listType), ns.is('drag', drag)]\"\n    tabindex=\"0\"\n    @click=\"handleClick\"\n    @keydown.self.enter.space=\"handleKeydown\"\n  >\n    <template v-if=\"drag\">\n      <upload-dragger :disabled=\"disabled\" @file=\"uploadFiles\">\n        <slot />\n      </upload-dragger>\n    </template>\n    <template v-else>\n      <slot />\n    </template>\n    <input\n      ref=\"inputRef\"\n      :class=\"ns.e('input')\"\n      :name=\"name\"\n      :multiple=\"multiple\"\n      :accept=\"accept\"\n      type=\"file\"\n      @change=\"handleChange\"\n      @click.stop\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { shallowRef } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { entriesOf } from '@element-plus/utils'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport UploadDragger from './upload-dragger.vue'\nimport { uploadContentProps } from './upload-content'\nimport { genFileId } from './upload'\n\nimport type {\n  UploadFile,\n  UploadHooks,\n  UploadRawFile,\n  UploadRequestOptions,\n} from './upload'\n\ndefineOptions({\n  name: 'ElUploadContent',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(uploadContentProps)\nconst ns = useNamespace('upload')\nconst disabled = useFormDisabled()\n\nconst requests = shallowRef<Record<string, XMLHttpRequest | Promise<unknown>>>(\n  {}\n)\nconst inputRef = shallowRef<HTMLInputElement>()\n\nconst uploadFiles = (files: File[]) => {\n  if (files.length === 0) return\n\n  const { autoUpload, limit, fileList, multiple, onStart, onExceed } = props\n\n  if (limit && fileList.length + files.length > limit) {\n    onExceed(files, fileList)\n    return\n  }\n\n  if (!multiple) {\n    files = files.slice(0, 1)\n  }\n\n  for (const file of files) {\n    const rawFile = file as UploadRawFile\n    rawFile.uid = genFileId()\n    onStart(rawFile)\n    if (autoUpload) upload(rawFile)\n  }\n}\n\nconst upload = async (rawFile: UploadRawFile) => {\n  inputRef.value!.value = ''\n\n  if (!props.beforeUpload) {\n    return doUpload(rawFile)\n  }\n\n  let hookResult: Exclude<ReturnType<UploadHooks['beforeUpload']>, Promise<any>>\n  try {\n    hookResult = await props.beforeUpload(rawFile)\n  } catch {\n    hookResult = false\n  }\n\n  if (hookResult === false) {\n    props.onRemove(rawFile)\n    return\n  }\n\n  let file: File = rawFile\n  if (hookResult instanceof Blob) {\n    if (hookResult instanceof File) {\n      file = hookResult\n    } else {\n      file = new File([hookResult], rawFile.name, {\n        type: rawFile.type,\n      })\n    }\n  }\n\n  doUpload(\n    Object.assign(file, {\n      uid: rawFile.uid,\n    })\n  )\n}\n\nconst doUpload = (rawFile: UploadRawFile) => {\n  const {\n    headers,\n    data,\n    method,\n    withCredentials,\n    name: filename,\n    action,\n    onProgress,\n    onSuccess,\n    onError,\n    httpRequest,\n  } = props\n\n  const { uid } = rawFile\n  const options: UploadRequestOptions = {\n    headers: headers || {},\n    withCredentials,\n    file: rawFile,\n    data,\n    method,\n    filename,\n    action,\n    onProgress: (evt) => {\n      onProgress(evt, rawFile)\n    },\n    onSuccess: (res) => {\n      onSuccess(res, rawFile)\n      delete requests.value[uid]\n    },\n    onError: (err) => {\n      onError(err, rawFile)\n      delete requests.value[uid]\n    },\n  }\n  const request = httpRequest(options)\n  requests.value[uid] = request\n  if (request instanceof Promise) {\n    request.then(options.onSuccess, options.onError)\n  }\n}\n\nconst handleChange = (e: Event) => {\n  const files = (e.target as HTMLInputElement).files\n  if (!files) return\n  uploadFiles(Array.from(files))\n}\n\nconst handleClick = () => {\n  if (!disabled.value) {\n    inputRef.value!.value = ''\n    inputRef.value!.click()\n  }\n}\n\nconst handleKeydown = () => {\n  handleClick()\n}\n\nconst abort = (file?: UploadFile) => {\n  const _reqs = entriesOf(requests.value).filter(\n    file ? ([uid]) => String(file.uid) === uid : () => true\n  )\n  _reqs.forEach(([uid, req]) => {\n    if (req instanceof XMLHttpRequest) req.abort()\n    delete requests.value[uid]\n  })\n}\n\ndefineExpose({\n  abort,\n  upload,\n})\n</script>\n", "import { watch } from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { useVModel } from '@vueuse/core'\nimport { debugWarn, throwError } from '@element-plus/utils'\nimport { genFileId } from './upload'\nimport type { ShallowRef } from 'vue'\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\nimport type {\n  UploadFile,\n  UploadFiles,\n  UploadProps,\n  UploadRawFile,\n  UploadStatus,\n} from './upload'\n\nconst SCOPE = 'ElUpload'\n\nconst revokeObjectURL = (file: UploadFile) => {\n  if (file.url?.startsWith('blob:')) {\n    URL.revokeObjectURL(file.url)\n  }\n}\n\nexport const useHandlers = (\n  props: UploadProps,\n  uploadRef: ShallowRef<UploadContentInstance | undefined>\n) => {\n  const uploadFiles = useVModel(\n    props as Omit<UploadProps, 'fileList'> & { fileList: UploadFiles },\n    'fileList',\n    undefined,\n    { passive: true }\n  )\n\n  const getFile = (rawFile: UploadRawFile) =>\n    uploadFiles.value.find((file) => file.uid === rawFile.uid)\n\n  function abort(file: UploadFile) {\n    uploadRef.value?.abort(file)\n  }\n\n  function clearFiles(\n    /** @default ['ready', 'uploading', 'success', 'fail'] */\n    states: UploadStatus[] = ['ready', 'uploading', 'success', 'fail']\n  ) {\n    uploadFiles.value = uploadFiles.value.filter(\n      (row) => !states.includes(row.status)\n    )\n  }\n\n  const handleError: UploadContentProps['onError'] = (err, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    console.error(err)\n    file.status = 'fail'\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1)\n    props.onError(err, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleProgress: UploadContentProps['onProgress'] = (evt, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    props.onProgress(evt, file, uploadFiles.value)\n    file.status = 'uploading'\n    file.percentage = Math.round(evt.percent)\n  }\n\n  const handleSuccess: UploadContentProps['onSuccess'] = (\n    response,\n    rawFile\n  ) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    file.status = 'success'\n    file.response = response\n    props.onSuccess(response, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleStart: UploadContentProps['onStart'] = (file) => {\n    if (isNil(file.uid)) file.uid = genFileId()\n    const uploadFile: UploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: 'ready',\n      size: file.size,\n      raw: file,\n      uid: file.uid,\n    }\n    if (props.listType === 'picture-card' || props.listType === 'picture') {\n      try {\n        uploadFile.url = URL.createObjectURL(file)\n      } catch (err: unknown) {\n        debugWarn(SCOPE, (err as Error).message)\n        props.onError(err as Error, uploadFile, uploadFiles.value)\n      }\n    }\n    uploadFiles.value = [...uploadFiles.value, uploadFile]\n    props.onChange(uploadFile, uploadFiles.value)\n  }\n\n  const handleRemove: UploadContentProps['onRemove'] = async (\n    file\n  ): Promise<void> => {\n    const uploadFile = file instanceof File ? getFile(file) : file\n    if (!uploadFile) throwError(SCOPE, 'file to be removed not found')\n\n    const doRemove = (file: UploadFile) => {\n      abort(file)\n      const fileList = uploadFiles.value\n      fileList.splice(fileList.indexOf(file), 1)\n      props.onRemove(file, fileList)\n      revokeObjectURL(file)\n    }\n\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value)\n      if (before !== false) doRemove(uploadFile)\n    } else {\n      doRemove(uploadFile)\n    }\n  }\n\n  function submit() {\n    uploadFiles.value\n      .filter(({ status }) => status === 'ready')\n      .forEach(({ raw }) => raw && uploadRef.value?.upload(raw))\n  }\n\n  watch(\n    () => props.listType,\n    (val) => {\n      if (val !== 'picture-card' && val !== 'picture') {\n        return\n      }\n\n      uploadFiles.value = uploadFiles.value.map((file) => {\n        const { raw, url } = file\n        if (!url && raw) {\n          try {\n            file.url = URL.createObjectURL(raw)\n          } catch (err: unknown) {\n            props.onError(err as Error, file, uploadFiles.value)\n          }\n        }\n        return file\n      })\n    }\n  )\n\n  watch(\n    uploadFiles,\n    (files) => {\n      for (const file of files) {\n        file.uid ||= genFileId()\n        file.status ||= 'success'\n      }\n    },\n    { immediate: true, deep: true }\n  )\n\n  return {\n    /** @description two-way binding ref from props `fileList` */\n    uploadFiles,\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n  }\n}\n", "<template>\n  <div>\n    <upload-list\n      v-if=\"isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\" />\n      </template>\n      <template #append>\n        <upload-content ref=\"uploadRef\" v-bind=\"uploadContentProps\">\n          <slot v-if=\"slots.trigger\" name=\"trigger\" />\n          <slot v-if=\"!slots.trigger && slots.default\" />\n        </upload-content>\n      </template>\n    </upload-list>\n\n    <upload-content\n      v-if=\"!isPictureCard || (isPictureCard && !showFileList)\"\n      ref=\"uploadRef\"\n      v-bind=\"uploadContentProps\"\n    >\n      <slot v-if=\"slots.trigger\" name=\"trigger\" />\n      <slot v-if=\"!slots.trigger && slots.default\" />\n    </upload-content>\n\n    <slot v-if=\"$slots.trigger\" />\n    <slot name=\"tip\" />\n    <upload-list\n      v-if=\"!isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\" />\n      </template>\n    </upload-list>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  onBeforeUnmount,\n  provide,\n  shallowRef,\n  toRef,\n  useSlots,\n} from 'vue'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport { uploadContextKey } from './constants'\nimport UploadList from './upload-list.vue'\nimport UploadContent from './upload-content.vue'\nimport { useHandlers } from './use-handlers'\nimport { uploadProps } from './upload'\n\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\n\ndefineOptions({\n  name: 'ElUpload',\n})\n\nconst props = defineProps(uploadProps)\n\nconst slots = useSlots()\nconst disabled = useFormDisabled()\n\nconst uploadRef = shallowRef<UploadContentInstance>()\nconst {\n  abort,\n  submit,\n  clearFiles,\n  uploadFiles,\n  handleStart,\n  handleError,\n  handleRemove,\n  handleSuccess,\n  handleProgress,\n} = useHandlers(props, uploadRef)\n\nconst isPictureCard = computed(() => props.listType === 'picture-card')\n\nconst uploadContentProps = computed<UploadContentProps>(() => ({\n  ...props,\n  fileList: uploadFiles.value,\n  onStart: handleStart,\n  onProgress: handleProgress,\n  onSuccess: handleSuccess,\n  onError: handleError,\n  onRemove: handleRemove,\n}))\n\nonBeforeUnmount(() => {\n  uploadFiles.value.forEach(({ url }) => {\n    if (url?.startsWith('blob:')) URL.revokeObjectURL(url)\n  })\n})\n\nprovide(uploadContextKey, {\n  accept: toRef(props, 'accept'),\n})\n\ndefineExpose({\n  /** @description cancel upload request */\n  abort,\n  /** @description upload the file list manually */\n  submit,\n  /** @description clear the file list  */\n  clearFiles,\n  /** @description select the file manually */\n  handleStart,\n  /** @description remove the file manually */\n  handleRemove,\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport Upload from './src/upload.vue'\n\nexport const ElUpload = withInstall(Upload)\nexport default ElUpload\n\nexport * from './src/upload'\nexport * from './src/upload-content'\nexport * from './src/upload-list'\nexport * from './src/upload-dragger'\nexport * from './src/constants'\n"],
  "mappings": "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",
  "names": ["SCOPE", "uploadContentProps"]
}
