{
  "version": 3,
  "sources": ["../../../packages/components/transfer/src/transfer.ts", "../../../packages/components/transfer/src/transfer-panel.ts", "../../../packages/components/transfer/src/composables/use-props-alias.ts", "../../../packages/components/transfer/src/composables/use-check.ts", "../../../packages/components/transfer/src/composables/use-checked-change.ts", "../../../packages/components/transfer/src/composables/use-computed-data.ts", "../../../packages/components/transfer/src/composables/use-move.ts", "../../../packages/components/transfer/src/transfer-panel.vue", "../../../packages/components/transfer/src/transfer.vue", "../../../packages/components/transfer/index.ts"],
  "sourcesContent": ["import { isNil } from 'lodash-unified'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  mutable,\n} from '@element-plus/utils'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ExtractPropTypes, h as H, VNode } from 'vue'\nimport type Transfer from './transfer.vue'\n\nexport type TransferKey = string | number\nexport type TransferDirection = 'left' | 'right'\n\nexport type TransferDataItem = Record<string, any>\n\nexport type renderContent = (\n  h: typeof H,\n  option: TransferDataItem\n) => VNode | VNode[]\n\nexport interface TransferFormat {\n  noChecked?: string\n  hasChecked?: string\n}\n\nexport interface TransferPropsAlias {\n  label?: string\n  key?: string\n  disabled?: string\n}\n\nexport interface TransferCheckedState {\n  leftChecked: TransferKey[]\n  rightChecked: TransferKey[]\n}\n\nexport const LEFT_CHECK_CHANGE_EVENT = 'left-check-change'\nexport const RIGHT_CHECK_CHANGE_EVENT = 'right-check-change'\n\nexport const transferProps = buildProps({\n  data: {\n    type: definePropType<TransferDataItem[]>(Array),\n    default: () => [],\n  },\n  titles: {\n    type: definePropType<[string, string]>(Array),\n    default: () => [],\n  },\n  buttonTexts: {\n    type: definePropType<[string, string]>(Array),\n    default: () => [],\n  },\n  filterPlaceholder: String,\n  filterMethod: {\n    type: definePropType<(query: string, item: TransferDataItem) => boolean>(\n      Function\n    ),\n  },\n  leftDefaultChecked: {\n    type: definePropType<TransferKey[]>(Array),\n    default: () => [],\n  },\n  rightDefaultChecked: {\n    type: definePropType<TransferKey[]>(Array),\n    default: () => [],\n  },\n  renderContent: {\n    type: definePropType<renderContent>(Function),\n  },\n  modelValue: {\n    type: definePropType<TransferKey[]>(Array),\n    default: () => [],\n  },\n  format: {\n    type: definePropType<TransferFormat>(Object),\n    default: () => ({}),\n  },\n  filterable: Boolean,\n  props: {\n    type: definePropType<TransferPropsAlias>(Object),\n    default: () =>\n      mutable({\n        label: 'label',\n        key: 'key',\n        disabled: 'disabled',\n      } as const),\n  },\n  targetOrder: {\n    type: String,\n    values: ['original', 'push', 'unshift'],\n    default: 'original',\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type TransferProps = ExtractPropTypes<typeof transferProps>\n\nexport const transferCheckedChangeFn = (\n  value: TransferKey[],\n  movedKeys?: TransferKey[]\n) => [value, movedKeys].every(isArray) || (isArray(value) && isNil(movedKeys))\n\nexport const transferEmits = {\n  [CHANGE_EVENT]: (\n    value: TransferKey[],\n    direction: TransferDirection,\n    movedKeys: TransferKey[]\n  ) =>\n    [value, movedKeys].every(isArray) && ['left', 'right'].includes(direction),\n  [UPDATE_MODEL_EVENT]: (value: TransferKey[]) => isArray(value),\n  [LEFT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn,\n  [RIGHT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn,\n}\nexport type TransferEmits = typeof transferEmits\n\nexport type TransferInstance = InstanceType<typeof Transfer>\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport { transferCheckedChangeFn, transferProps } from './transfer'\n\nimport type { ExtractPropTypes, VNode } from 'vue'\nimport type { TransferDataItem, TransferKey } from './transfer'\nimport type TransferPanel from './transfer-panel.vue'\n\nexport interface TransferPanelState {\n  checked: TransferKey[]\n  allChecked: boolean\n  query: string\n  checkChangeByUser: boolean\n}\n\nexport const CHECKED_CHANGE_EVENT = 'checked-change'\n\nexport const transferPanelProps = buildProps({\n  data: transferProps.data,\n  optionRender: {\n    type: definePropType<(option: TransferDataItem) => VNode | VNode[]>(\n      Function\n    ),\n  },\n  placeholder: String,\n  title: String,\n  filterable: Boolean,\n  format: transferProps.format,\n  filterMethod: transferProps.filterMethod,\n  defaultChecked: transferProps.leftDefaultChecked,\n  props: transferProps.props,\n} as const)\nexport type TransferPanelProps = ExtractPropTypes<typeof transferPanelProps>\n\nexport const transferPanelEmits = {\n  [CHECKED_CHANGE_EVENT]: transferCheckedChangeFn,\n}\nexport type TransferPanelEmits = typeof transferPanelEmits\n\nexport type TransferPanelInstance = InstanceType<typeof TransferPanel>\n", "import { computed } from 'vue'\n\nimport type { TransferPropsAlias } from '../transfer'\n\nexport const usePropsAlias = (props: { props: TransferPropsAlias }) => {\n  const initProps: Required<TransferPropsAlias> = {\n    label: 'label',\n    key: 'key',\n    disabled: 'disabled',\n  }\n\n  return computed(() => ({\n    ...initProps,\n    ...props.props,\n  }))\n}\n", "import { computed, watch } from 'vue'\nimport { isFunction } from '@element-plus/utils'\nimport { CHECKED_CHANGE_EVENT } from '../transfer-panel'\nimport { usePropsAlias } from './use-props-alias'\n\nimport type { SetupContext } from 'vue'\nimport type { CheckboxValueType } from '@element-plus/components/checkbox'\nimport type { TransferKey } from '../transfer'\nimport type {\n  TransferPanelEmits,\n  TransferPanelProps,\n  TransferPanelState,\n} from '../transfer-panel'\n\nexport const useCheck = (\n  props: TransferPanelProps,\n  panelState: TransferPanelState,\n  emit: SetupContext<TransferPanelEmits>['emit']\n) => {\n  const propsAlias = usePropsAlias(props)\n\n  const filteredData = computed(() => {\n    return props.data.filter((item) => {\n      if (isFunction(props.filterMethod)) {\n        return props.filterMethod(panelState.query, item)\n      } else {\n        const label = String(\n          item[propsAlias.value.label] || item[propsAlias.value.key]\n        )\n        return label.toLowerCase().includes(panelState.query.toLowerCase())\n      }\n    })\n  })\n\n  const checkableData = computed(() =>\n    filteredData.value.filter((item) => !item[propsAlias.value.disabled])\n  )\n\n  const checkedSummary = computed(() => {\n    const checkedLength = panelState.checked.length\n    const dataLength = props.data.length\n    const { noChecked, hasChecked } = props.format\n\n    if (noChecked && hasChecked) {\n      return checkedLength > 0\n        ? hasChecked\n            .replace(/\\${checked}/g, checkedLength.toString())\n            .replace(/\\${total}/g, dataLength.toString())\n        : noChecked.replace(/\\${total}/g, dataLength.toString())\n    } else {\n      return `${checkedLength}/${dataLength}`\n    }\n  })\n\n  const isIndeterminate = computed(() => {\n    const checkedLength = panelState.checked.length\n    return checkedLength > 0 && checkedLength < checkableData.value.length\n  })\n\n  const updateAllChecked = () => {\n    const checkableDataKeys = checkableData.value.map(\n      (item) => item[propsAlias.value.key]\n    )\n    panelState.allChecked =\n      checkableDataKeys.length > 0 &&\n      checkableDataKeys.every((item) => panelState.checked.includes(item))\n  }\n\n  const handleAllCheckedChange = (value: CheckboxValueType) => {\n    panelState.checked = value\n      ? checkableData.value.map((item) => item[propsAlias.value.key])\n      : []\n  }\n\n  watch(\n    () => panelState.checked,\n    (val, oldVal) => {\n      updateAllChecked()\n\n      if (panelState.checkChangeByUser) {\n        const movedKeys = val\n          .concat(oldVal)\n          .filter((v) => !val.includes(v) || !oldVal.includes(v))\n        emit(CHECKED_CHANGE_EVENT, val, movedKeys)\n      } else {\n        emit(CHECKED_CHANGE_EVENT, val)\n        panelState.checkChangeByUser = true\n      }\n    }\n  )\n\n  watch(checkableData, () => {\n    updateAllChecked()\n  })\n\n  watch(\n    () => props.data,\n    () => {\n      const checked: TransferKey[] = []\n      const filteredDataKeys = filteredData.value.map(\n        (item) => item[propsAlias.value.key]\n      )\n      panelState.checked.forEach((item) => {\n        if (filteredDataKeys.includes(item)) {\n          checked.push(item)\n        }\n      })\n      panelState.checkChangeByUser = false\n      panelState.checked = checked\n    }\n  )\n\n  watch(\n    () => props.defaultChecked,\n    (val, oldVal) => {\n      if (\n        oldVal &&\n        val.length === oldVal.length &&\n        val.every((item) => oldVal.includes(item))\n      )\n        return\n\n      const checked: TransferKey[] = []\n      const checkableDataKeys = checkableData.value.map(\n        (item) => item[propsAlias.value.key]\n      )\n\n      val.forEach((item) => {\n        if (checkableDataKeys.includes(item)) {\n          checked.push(item)\n        }\n      })\n      panelState.checkChangeByUser = false\n      panelState.checked = checked\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  return {\n    filteredData,\n    checkableData,\n    checkedSummary,\n    isIndeterminate,\n    updateAllChecked,\n    handleAllCheckedChange,\n  }\n}\n", "import { LEFT_CHECK_CHANGE_EVENT, RIGHT_CHECK_CHANGE_EVENT } from '../transfer'\n\nimport type { SetupContext } from 'vue'\nimport type {\n  TransferCheckedState,\n  TransferEmits,\n  TransferKey,\n} from '../transfer'\n\nexport const useCheckedChange = (\n  checkedState: TransferCheckedState,\n  emit: SetupContext<TransferEmits>['emit']\n) => {\n  const onSourceCheckedChange = (\n    val: TransferKey[],\n    movedKeys?: TransferKey[]\n  ) => {\n    checkedState.leftChecked = val\n    if (!movedKeys) return\n    emit(LEFT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  const onTargetCheckedChange = (\n    val: TransferKey[],\n    movedKeys?: TransferKey[]\n  ) => {\n    checkedState.rightChecked = val\n    if (!movedKeys) return\n    emit(RIGHT_CHECK_CHANGE_EVENT, val, movedKeys)\n  }\n\n  return {\n    onSourceCheckedChange,\n    onTargetCheckedChange,\n  }\n}\n", "import { computed } from 'vue'\nimport { usePropsAlias } from './use-props-alias'\n\nimport type { TransferDataItem, TransferKey, TransferProps } from '../transfer'\n\nexport const useComputedData = (props: TransferProps) => {\n  const propsAlias = usePropsAlias(props)\n\n  const dataObj = computed(() =>\n    props.data.reduce((o, cur) => (o[cur[propsAlias.value.key]] = cur) && o, {})\n  )\n\n  const sourceData = computed(() =>\n    props.data.filter(\n      (item) => !props.modelValue.includes(item[propsAlias.value.key])\n    )\n  )\n\n  const targetData = computed(() => {\n    if (props.targetOrder === 'original') {\n      return props.data.filter((item) =>\n        props.modelValue.includes(item[propsAlias.value.key])\n      )\n    } else {\n      return props.modelValue.reduce(\n        (arr: TransferDataItem[], cur: TransferKey) => {\n          const val = dataObj.value[cur]\n          if (val) {\n            arr.push(val)\n          }\n          return arr\n        },\n        []\n      )\n    }\n  })\n\n  return {\n    sourceData,\n    targetData,\n  }\n}\n", "import { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { usePropsAlias } from './use-props-alias'\n\nimport type { SetupContext } from 'vue'\nimport type {\n  TransferCheckedState,\n  TransferDataItem,\n  TransferDirection,\n  TransferEmits,\n  TransferKey,\n  TransferProps,\n} from '../transfer'\n\nexport const useMove = (\n  props: TransferProps,\n  checkedState: TransferCheckedState,\n  emit: SetupContext<TransferEmits>['emit']\n) => {\n  const propsAlias = usePropsAlias(props)\n\n  const _emit = (\n    value: TransferKey[],\n    direction: TransferDirection,\n    movedKeys: TransferKey[]\n  ) => {\n    emit(UPDATE_MODEL_EVENT, value)\n    emit(CHANGE_EVENT, value, direction, movedKeys)\n  }\n\n  const addToLeft = () => {\n    const currentValue = props.modelValue.slice()\n\n    checkedState.rightChecked.forEach((item) => {\n      const index = currentValue.indexOf(item)\n      if (index > -1) {\n        currentValue.splice(index, 1)\n      }\n    })\n    _emit(currentValue, 'left', checkedState.rightChecked)\n  }\n\n  const addToRight = () => {\n    let currentValue = props.modelValue.slice()\n\n    const itemsToBeMoved = props.data\n      .filter((item: TransferDataItem) => {\n        const itemKey = item[propsAlias.value.key]\n        return (\n          checkedState.leftChecked.includes(itemKey) &&\n          !props.modelValue.includes(itemKey)\n        )\n      })\n      .map((item) => item[propsAlias.value.key])\n\n    currentValue =\n      props.targetOrder === 'unshift'\n        ? itemsToBeMoved.concat(currentValue)\n        : currentValue.concat(itemsToBeMoved)\n\n    if (props.targetOrder === 'original') {\n      currentValue = props.data\n        .filter((item) => currentValue.includes(item[propsAlias.value.key]))\n        .map((item) => item[propsAlias.value.key])\n    }\n\n    _emit(currentValue, 'right', checkedState.leftChecked)\n  }\n\n  return {\n    addToLeft,\n    addToRight,\n  }\n}\n", "<template>\n  <div :class=\"ns.b('panel')\">\n    <p :class=\"ns.be('panel', 'header')\">\n      <el-checkbox\n        v-model=\"allChecked\"\n        :indeterminate=\"isIndeterminate\"\n        :validate-event=\"false\"\n        @change=\"handleAllCheckedChange\"\n      >\n        {{ title }}\n        <span>{{ checkedSummary }}</span>\n      </el-checkbox>\n    </p>\n\n    <div :class=\"[ns.be('panel', 'body'), ns.is('with-footer', hasFooter)]\">\n      <el-input\n        v-if=\"filterable\"\n        v-model=\"query\"\n        :class=\"ns.be('panel', 'filter')\"\n        size=\"default\"\n        :placeholder=\"placeholder\"\n        :prefix-icon=\"Search\"\n        clearable\n        :validate-event=\"false\"\n      />\n      <el-checkbox-group\n        v-show=\"!hasNoMatch && !isEmpty(data)\"\n        v-model=\"checked\"\n        :validate-event=\"false\"\n        :class=\"[ns.is('filterable', filterable), ns.be('panel', 'list')]\"\n      >\n        <el-checkbox\n          v-for=\"item in filteredData\"\n          :key=\"item[propsAlias.key]\"\n          :class=\"ns.be('panel', 'item')\"\n          :label=\"item[propsAlias.key]\"\n          :disabled=\"item[propsAlias.disabled]\"\n          :validate-event=\"false\"\n        >\n          <option-content :option=\"optionRender?.(item)\" />\n        </el-checkbox>\n      </el-checkbox-group>\n      <p v-show=\"hasNoMatch || isEmpty(data)\" :class=\"ns.be('panel', 'empty')\">\n        {{ hasNoMatch ? t('el.transfer.noMatch') : t('el.transfer.noData') }}\n      </p>\n    </div>\n    <p v-if=\"hasFooter\" :class=\"ns.be('panel', 'footer')\">\n      <slot />\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, reactive, toRefs, useSlots } from 'vue'\nimport { isEmpty } from '@element-plus/utils'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElCheckbox, ElCheckboxGroup } from '@element-plus/components/checkbox'\nimport { ElInput } from '@element-plus/components/input'\nimport { Search } from '@element-plus/icons-vue'\nimport { transferPanelEmits, transferPanelProps } from './transfer-panel'\nimport { useCheck, usePropsAlias } from './composables'\n\nimport type { VNode } from 'vue'\nimport type { TransferPanelState } from './transfer-panel'\n\ndefineOptions({\n  name: 'ElTransferPanel',\n})\n\nconst props = defineProps(transferPanelProps)\nconst emit = defineEmits(transferPanelEmits)\nconst slots = useSlots()\n\nconst OptionContent = ({ option }: { option: VNode | VNode[] }) => option\n\nconst { t } = useLocale()\nconst ns = useNamespace('transfer')\n\nconst panelState = reactive<TransferPanelState>({\n  checked: [],\n  allChecked: false,\n  query: '',\n  checkChangeByUser: true,\n})\n\nconst propsAlias = usePropsAlias(props)\n\nconst {\n  filteredData,\n  checkedSummary,\n  isIndeterminate,\n  handleAllCheckedChange,\n} = useCheck(props, panelState, emit)\n\nconst hasNoMatch = computed(\n  () => !isEmpty(panelState.query) && isEmpty(filteredData.value)\n)\n\nconst hasFooter = computed(() => !isEmpty(slots.default!()[0].children))\n\nconst { checked, allChecked, query } = toRefs(panelState)\n\ndefineExpose({\n  /** @description filter keyword */\n  query,\n})\n</script>\n", "<template>\n  <div :class=\"ns.b()\">\n    <transfer-panel\n      ref=\"leftPanel\"\n      :data=\"sourceData\"\n      :option-render=\"optionRender\"\n      :placeholder=\"panelFilterPlaceholder\"\n      :title=\"leftPanelTitle\"\n      :filterable=\"filterable\"\n      :format=\"format\"\n      :filter-method=\"filterMethod\"\n      :default-checked=\"leftDefaultChecked\"\n      :props=\"props.props\"\n      @checked-change=\"onSourceCheckedChange\"\n    >\n      <slot name=\"left-footer\" />\n    </transfer-panel>\n    <div :class=\"ns.e('buttons')\">\n      <el-button\n        type=\"primary\"\n        :class=\"[ns.e('button'), ns.is('with-texts', hasButtonTexts)]\"\n        :disabled=\"isEmpty(checkedState.rightChecked)\"\n        @click=\"addToLeft\"\n      >\n        <el-icon><arrow-left /></el-icon>\n        <span v-if=\"!isUndefined(buttonTexts[0])\">{{ buttonTexts[0] }}</span>\n      </el-button>\n      <el-button\n        type=\"primary\"\n        :class=\"[ns.e('button'), ns.is('with-texts', hasButtonTexts)]\"\n        :disabled=\"isEmpty(checkedState.leftChecked)\"\n        @click=\"addToRight\"\n      >\n        <span v-if=\"!isUndefined(buttonTexts[1])\">{{ buttonTexts[1] }}</span>\n        <el-icon><arrow-right /></el-icon>\n      </el-button>\n    </div>\n    <transfer-panel\n      ref=\"rightPanel\"\n      :data=\"targetData\"\n      :option-render=\"optionRender\"\n      :placeholder=\"panelFilterPlaceholder\"\n      :filterable=\"filterable\"\n      :format=\"format\"\n      :filter-method=\"filterMethod\"\n      :title=\"rightPanelTitle\"\n      :default-checked=\"rightDefaultChecked\"\n      :props=\"props.props\"\n      @checked-change=\"onTargetCheckedChange\"\n    >\n      <slot name=\"right-footer\" />\n    </transfer-panel>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, h, reactive, ref, useSlots, watch } from 'vue'\nimport { debugWarn, isEmpty, isUndefined } from '@element-plus/utils'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElButton } from '@element-plus/components/button'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useFormItem } from '@element-plus/components/form'\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue'\nimport { transferEmits, transferProps } from './transfer'\nimport {\n  useCheckedChange,\n  useComputedData,\n  useMove,\n  usePropsAlias,\n} from './composables'\nimport TransferPanel from './transfer-panel.vue'\n\nimport type {\n  TransferCheckedState,\n  TransferDataItem,\n  TransferDirection,\n} from './transfer'\nimport type { TransferPanelInstance } from './transfer-panel'\n\ndefineOptions({\n  name: 'ElTransfer',\n})\n\nconst props = defineProps(transferProps)\nconst emit = defineEmits(transferEmits)\nconst slots = useSlots()\n\nconst { t } = useLocale()\nconst ns = useNamespace('transfer')\nconst { formItem } = useFormItem()\n\nconst checkedState = reactive<TransferCheckedState>({\n  leftChecked: [],\n  rightChecked: [],\n})\n\nconst propsAlias = usePropsAlias(props)\n\nconst { sourceData, targetData } = useComputedData(props)\n\nconst { onSourceCheckedChange, onTargetCheckedChange } = useCheckedChange(\n  checkedState,\n  emit\n)\n\nconst { addToLeft, addToRight } = useMove(props, checkedState, emit)\n\nconst leftPanel = ref<TransferPanelInstance>()\nconst rightPanel = ref<TransferPanelInstance>()\n\nconst clearQuery = (which: TransferDirection) => {\n  switch (which) {\n    case 'left':\n      leftPanel.value!.query = ''\n      break\n    case 'right':\n      rightPanel.value!.query = ''\n      break\n  }\n}\n\nconst hasButtonTexts = computed(() => props.buttonTexts.length === 2)\n\nconst leftPanelTitle = computed(\n  () => props.titles[0] || t('el.transfer.titles.0')\n)\n\nconst rightPanelTitle = computed(\n  () => props.titles[1] || t('el.transfer.titles.1')\n)\n\nconst panelFilterPlaceholder = computed(\n  () => props.filterPlaceholder || t('el.transfer.filterPlaceholder')\n)\n\nwatch(\n  () => props.modelValue,\n  () => {\n    if (props.validateEvent) {\n      formItem?.validate?.('change').catch((err) => debugWarn(err))\n    }\n  }\n)\n\nconst optionRender = computed(() => (option: TransferDataItem) => {\n  if (props.renderContent) return props.renderContent(h, option)\n\n  if (slots.default) return slots.default({ option })\n\n  return h(\n    'span',\n    option[propsAlias.value.label] || option[propsAlias.value.key]\n  )\n})\n\ndefineExpose({\n  /** @description clear the filter keyword of a certain panel */\n  clearQuery,\n  /** @description left panel ref */\n  leftPanel,\n  /** @description left panel ref */\n  rightPanel,\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\n\nimport Transfer from './src/transfer.vue'\n\nexport const ElTransfer = withInstall(Transfer)\nexport default ElTransfer\n\nexport * from './src/transfer'\n"],
  "mappings": "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",
  "names": []
}
