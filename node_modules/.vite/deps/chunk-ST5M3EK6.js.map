{
  "version": 3,
  "sources": ["../../../packages/components/switch/src/switch.ts", "../../../packages/components/switch/src/switch.vue", "../../../packages/components/switch/index.ts"],
  "sourcesContent": ["import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isBoolean,\n  isNumber,\n  isString,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type Switch from './switch.vue'\nimport type { ExtractPropTypes, PropType } from 'vue'\n\nexport const switchProps = buildProps({\n  modelValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  value: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  width: {\n    type: [String, Number],\n    default: '',\n  },\n  inlinePrompt: {\n    type: Boolean,\n    default: false,\n  },\n  activeIcon: {\n    type: iconPropType,\n  },\n  inactiveIcon: {\n    type: iconPropType,\n  },\n  activeText: {\n    type: String,\n    default: '',\n  },\n  inactiveText: {\n    type: String,\n    default: '',\n  },\n  activeColor: {\n    type: String,\n    default: '',\n  },\n  inactiveColor: {\n    type: String,\n    default: '',\n  },\n  borderColor: {\n    type: String,\n    default: '',\n  },\n  activeValue: {\n    type: [Boolean, String, Number],\n    default: true,\n  },\n  inactiveValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  name: {\n    type: String,\n    default: '',\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  id: String,\n  loading: {\n    type: Boolean,\n    default: false,\n  },\n  beforeChange: {\n    type: definePropType<() => Promise<boolean> | boolean>(Function),\n  },\n  size: {\n    type: String as PropType<ComponentSize>,\n    validator: isValidComponentSize,\n  },\n  tabindex: {\n    type: [String, Number],\n  },\n} as const)\n\nexport type SwitchProps = ExtractPropTypes<typeof switchProps>\n\nexport const switchEmits = {\n  [UPDATE_MODEL_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [CHANGE_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [INPUT_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n}\nexport type SwitchEmits = typeof switchEmits\n\nexport type SwitchInstance = InstanceType<typeof Switch>\n", "<template>\n  <div :class=\"switchKls\" :style=\"styles\" @click.prevent=\"switchValue\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      role=\"switch\"\n      :aria-checked=\"checked\"\n      :aria-disabled=\"switchDisabled\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      :tabindex=\"tabindex\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'left'),\n        ns.is('active', !checked),\n      ]\"\n    >\n      <el-icon v-if=\"inactiveIcon\">\n        <component :is=\"inactiveIcon\" />\n      </el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span ref=\"core\" :class=\"ns.e('core')\" :style=\"coreStyle\">\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon :class=\"ns.is('icon')\">\n            <component :is=\"checked ? activeIcon : inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveText\">\n          <span :class=\"ns.is('text')\" :aria-hidden=\"!checked\">\n            {{ checked ? activeText : inactiveText }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\">\n          <loading />\n        </el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"[\n        ns.e('label'),\n        ns.em('label', 'right'),\n        ns.is('active', checked),\n      ]\"\n    >\n      <el-icon v-if=\"activeIcon\">\n        <component :is=\"activeIcon\" />\n      </el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  getCurrentInstance,\n  nextTick,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { addUnit, debugWarn, isBoolean, throwError } from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useDeprecated, useNamespace } from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElSwitch'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(switchProps)\nconst emit = defineEmits(switchEmits)\n\nconst vm = getCurrentInstance()!\nconst { formItem } = useFormItem()\nconst switchSize = useFormSize()\nconst ns = useNamespace('switch')\n\nuseDeprecated(\n  {\n    from: '\"value\"',\n    replacement: '\"model-value\" or \"v-model\"',\n    scope: COMPONENT_NAME,\n    version: '2.3.0',\n    ref: 'https://element-plus.org/en-US/component/switch.html#attributes',\n    type: 'Attribute',\n  },\n  computed(() => !!vm.vnode.props?.value)\n)\n\nconst { inputId } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst switchDisabled = useFormDisabled(computed(() => props.loading))\nconst isControlled = ref(props.modelValue !== false)\nconst input = ref<HTMLInputElement>()\nconst core = ref<HTMLSpanElement>()\n\nconst switchKls = computed(() => [\n  ns.b(),\n  ns.m(switchSize.value),\n  ns.is('disabled', switchDisabled.value),\n  ns.is('checked', checked.value),\n])\n\nconst coreStyle = computed<CSSProperties>(() => ({\n  width: addUnit(props.width),\n}))\n\nwatch(\n  () => props.modelValue,\n  () => {\n    isControlled.value = true\n  }\n)\n\nwatch(\n  () => props.value,\n  () => {\n    isControlled.value = false\n  }\n)\n\nconst actualValue = computed(() => {\n  return isControlled.value ? props.modelValue : props.value\n})\n\nconst checked = computed(() => actualValue.value === props.activeValue)\n\nif (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n  emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n  emit(CHANGE_EVENT, props.inactiveValue)\n  emit(INPUT_EVENT, props.inactiveValue)\n}\n\nwatch(checked, (val) => {\n  input.value!.checked = val\n\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n})\n\nconst handleChange = () => {\n  const val = checked.value ? props.inactiveValue : props.activeValue\n  emit(UPDATE_MODEL_EVENT, val)\n  emit(CHANGE_EVENT, val)\n  emit(INPUT_EVENT, val)\n  nextTick(() => {\n    input.value!.checked = checked.value\n  })\n}\n\nconst switchValue = () => {\n  if (switchDisabled.value) return\n\n  const { beforeChange } = props\n  if (!beforeChange) {\n    handleChange()\n    return\n  }\n\n  const shouldChange = beforeChange()\n\n  const isPromiseOrBool = [\n    isPromise(shouldChange),\n    isBoolean(shouldChange),\n  ].includes(true)\n  if (!isPromiseOrBool) {\n    throwError(\n      COMPONENT_NAME,\n      'beforeChange must return type `Promise<boolean>` or `boolean`'\n    )\n  }\n\n  if (isPromise(shouldChange)) {\n    shouldChange\n      .then((result) => {\n        if (result) {\n          handleChange()\n        }\n      })\n      .catch((e) => {\n        debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n      })\n  } else if (shouldChange) {\n    handleChange()\n  }\n}\n\nconst styles = computed(() => {\n  return ns.cssVarBlock({\n    ...(props.activeColor ? { 'on-color': props.activeColor } : null),\n    ...(props.inactiveColor ? { 'off-color': props.inactiveColor } : null),\n    ...(props.borderColor ? { 'border-color': props.borderColor } : null),\n  })\n})\n\nconst focus = (): void => {\n  input.value?.focus?.()\n}\n\nonMounted(() => {\n  input.value!.checked = checked.value\n})\n\ndefineExpose({\n  /**\n   *  @description manual focus to the switch component\n   **/\n  focus,\n  /**\n   * @description whether Switch is checked\n   */\n  checked,\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport Switch from './src/switch.vue'\n\nexport const ElSwitch = withInstall(Switch)\nexport default ElSwitch\n\nexport * from './src/switch'\n"],
  "mappings": "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",
  "names": ["isBoolean"]
}
