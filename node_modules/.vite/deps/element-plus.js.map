{
  "version": 3,
  "sources": ["../../../packages/element-plus/version.ts", "../../../packages/element-plus/make-installer.ts", "../../../packages/element-plus/component.ts", "../../../packages/components/infinite-scroll/src/index.ts", "../../../packages/components/infinite-scroll/index.ts", "../../../packages/components/loading/src/loading.ts", "../../../packages/components/loading/src/service.ts", "../../../packages/components/loading/src/directive.ts", "../../../packages/components/loading/index.ts", "../../../packages/components/message/src/message.ts", "../../../packages/components/message/src/instance.ts", "../../../packages/components/message/src/message.vue", "../../../packages/components/message/src/method.ts", "../../../packages/components/message/index.ts", "../../../packages/components/message-box/src/index.vue", "../../../packages/components/message-box/src/messageBox.ts", "../../../packages/components/message-box/index.ts", "../../../packages/components/notification/src/notification.ts", "../../../packages/components/notification/src/notification.vue", "../../../packages/components/notification/src/notify.ts", "../../../packages/components/notification/index.ts", "../../../packages/element-plus/plugin.ts", "../../../packages/element-plus/defaults.ts", "../../../packages/element-plus/index.ts"],
  "sourcesContent": ["export const version = '2.2.34'\n", "import { provideGlobalConfig } from '@element-plus/components/config-provider'\nimport { INSTALLED_KEY } from '@element-plus/constants'\nimport { version } from './version'\n\nimport type { App, Plugin } from '@vue/runtime-core'\nimport type { ConfigProviderContext } from '@element-plus/components/config-provider'\n\nexport const makeInstaller = (components: Plugin[] = []) => {\n  const install = (app: App, options?: ConfigProviderContext) => {\n    if (app[INSTALLED_KEY]) return\n\n    app[INSTALLED_KEY] = true\n    components.forEach((c) => app.use(c))\n\n    if (options) provideGlobalConfig(options, app, true)\n  }\n\n  return {\n    version,\n    install,\n  }\n}\n", "import { ElAffix } from '@element-plus/components/affix'\nimport { ElAlert } from '@element-plus/components/alert'\nimport { ElAutocomplete } from '@element-plus/components/autocomplete'\nimport { ElAvatar } from '@element-plus/components/avatar'\nimport { ElBacktop } from '@element-plus/components/backtop'\nimport { ElBadge } from '@element-plus/components/badge'\nimport {\n  ElBreadcrumb,\n  ElBreadcrumbItem,\n} from '@element-plus/components/breadcrumb'\nimport { ElButton, ElButtonGroup } from '@element-plus/components/button'\nimport { ElCalendar } from '@element-plus/components/calendar'\nimport { ElCard } from '@element-plus/components/card'\nimport { ElCarousel, ElCarouselItem } from '@element-plus/components/carousel'\nimport { ElCascader } from '@element-plus/components/cascader'\nimport { ElCascaderPanel } from '@element-plus/components/cascader-panel'\nimport { ElCheckTag } from '@element-plus/components/check-tag'\nimport {\n  ElCheckbox,\n  ElCheckboxButton,\n  ElCheckboxGroup,\n} from '@element-plus/components/checkbox'\nimport { ElCol } from '@element-plus/components/col'\nimport { ElCollapse, ElCollapseItem } from '@element-plus/components/collapse'\nimport { ElCollapseTransition } from '@element-plus/components/collapse-transition'\nimport { ElColorPicker } from '@element-plus/components/color-picker'\nimport { ElConfigProvider } from '@element-plus/components/config-provider'\nimport {\n  ElAside,\n  ElContainer,\n  ElFooter,\n  ElHeader,\n  ElMain,\n} from '@element-plus/components/container'\nimport { ElDatePicker } from '@element-plus/components/date-picker'\nimport {\n  ElDescriptions,\n  ElDescriptionsItem,\n} from '@element-plus/components/descriptions'\nimport { ElDialog } from '@element-plus/components/dialog'\nimport { ElDivider } from '@element-plus/components/divider'\nimport { ElDrawer } from '@element-plus/components/drawer'\nimport {\n  ElDropdown,\n  ElDropdownItem,\n  ElDropdownMenu,\n} from '@element-plus/components/dropdown'\nimport { ElEmpty } from '@element-plus/components/empty'\nimport { ElForm, ElFormItem } from '@element-plus/components/form'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ElImage } from '@element-plus/components/image'\nimport { ElImageViewer } from '@element-plus/components/image-viewer'\nimport { ElInput } from '@element-plus/components/input'\nimport { ElInputNumber } from '@element-plus/components/input-number'\nimport { ElLink } from '@element-plus/components/link'\nimport {\n  ElMenu,\n  ElMenuItem,\n  ElMenuItemGroup,\n  ElSubMenu,\n} from '@element-plus/components/menu'\nimport { ElPageHeader } from '@element-plus/components/page-header'\nimport { ElPagination } from '@element-plus/components/pagination'\nimport { ElPopconfirm } from '@element-plus/components/popconfirm'\nimport { ElPopover } from '@element-plus/components/popover'\nimport { ElPopper } from '@element-plus/components/popper'\nimport { ElProgress } from '@element-plus/components/progress'\nimport {\n  ElRadio,\n  ElRadioButton,\n  ElRadioGroup,\n} from '@element-plus/components/radio'\nimport { ElRate } from '@element-plus/components/rate'\nimport { ElResult } from '@element-plus/components/result'\nimport { ElRow } from '@element-plus/components/row'\nimport { ElScrollbar } from '@element-plus/components/scrollbar'\nimport {\n  ElOption,\n  ElOptionGroup,\n  ElSelect,\n} from '@element-plus/components/select'\nimport { ElSelectV2 } from '@element-plus/components/select-v2'\nimport { ElSkeleton, ElSkeletonItem } from '@element-plus/components/skeleton'\nimport { ElSlider } from '@element-plus/components/slider'\nimport { ElSpace } from '@element-plus/components/space'\nimport { ElStatistic } from '@element-plus/components/statistic'\nimport { ElCountdown } from '@element-plus/components/countdown'\nimport { ElStep, ElSteps } from '@element-plus/components/steps'\nimport { ElSwitch } from '@element-plus/components/switch'\nimport { ElTable, ElTableColumn } from '@element-plus/components/table'\nimport { ElAutoResizer, ElTableV2 } from '@element-plus/components/table-v2'\nimport { ElTabPane, ElTabs } from '@element-plus/components/tabs'\nimport { ElTag } from '@element-plus/components/tag'\nimport { ElTimePicker } from '@element-plus/components/time-picker'\nimport { ElTimeSelect } from '@element-plus/components/time-select'\nimport { ElTimeline, ElTimelineItem } from '@element-plus/components/timeline'\nimport { ElTooltip } from '@element-plus/components/tooltip'\nimport { ElTooltipV2 } from '@element-plus/components/tooltip-v2'\nimport { ElTransfer } from '@element-plus/components/transfer'\nimport { ElTree } from '@element-plus/components/tree'\nimport { ElTreeSelect } from '@element-plus/components/tree-select'\nimport { ElTreeV2 } from '@element-plus/components/tree-v2'\nimport { ElUpload } from '@element-plus/components/upload'\n\nimport type { Plugin } from 'vue'\n\nexport default [\n  ElAffix,\n  ElAlert,\n  ElAutocomplete,\n  ElAutoResizer,\n  ElAvatar,\n  ElBacktop,\n  ElBadge,\n  ElBreadcrumb,\n  ElBreadcrumbItem,\n  ElButton,\n  ElButtonGroup,\n  ElCalendar,\n  ElCard,\n  ElCarousel,\n  ElCarouselItem,\n  ElCascader,\n  ElCascaderPanel,\n  ElCheckTag,\n  ElCheckbox,\n  ElCheckboxButton,\n  ElCheckboxGroup,\n  ElCol,\n  ElCollapse,\n  ElCollapseItem,\n  ElCollapseTransition,\n  ElColorPicker,\n  ElConfigProvider,\n  ElContainer,\n  ElAside,\n  ElFooter,\n  ElHeader,\n  ElMain,\n  ElDatePicker,\n  ElDescriptions,\n  ElDescriptionsItem,\n  ElDialog,\n  ElDivider,\n  ElDrawer,\n  ElDropdown,\n  ElDropdownItem,\n  ElDropdownMenu,\n  ElEmpty,\n  ElForm,\n  ElFormItem,\n  ElIcon,\n  ElImage,\n  ElImageViewer,\n  ElInput,\n  ElInputNumber,\n  ElLink,\n  ElMenu,\n  ElMenuItem,\n  ElMenuItemGroup,\n  ElSubMenu,\n  ElPageHeader,\n  ElPagination,\n  ElPopconfirm,\n  ElPopover,\n  ElPopper,\n  ElProgress,\n  ElRadio,\n  ElRadioButton,\n  ElRadioGroup,\n  ElRate,\n  ElResult,\n  ElRow,\n  ElScrollbar,\n  ElSelect,\n  ElOption,\n  ElOptionGroup,\n  ElSelectV2,\n  ElSkeleton,\n  ElSkeletonItem,\n  ElSlider,\n  ElSpace,\n  ElStatistic,\n  ElCountdown,\n  ElSteps,\n  ElStep,\n  ElSwitch,\n  ElTable,\n  ElTableColumn,\n  ElTableV2,\n  ElTabs,\n  ElTabPane,\n  ElTag,\n  ElTimePicker,\n  ElTimeSelect,\n  ElTimeline,\n  ElTimelineItem,\n  ElTooltip,\n  ElTooltipV2,\n  ElTransfer,\n  ElTree,\n  ElTreeSelect,\n  ElTreeV2,\n  ElUpload,\n] as Plugin[]\n", "// @ts-nocheck\nimport { nextTick } from 'vue'\nimport { isFunction } from '@vue/shared'\nimport { throttle } from 'lodash-unified'\nimport {\n  getOffsetTopDistance,\n  getScrollContainer,\n  throwError,\n} from '@element-plus/utils'\n\nimport type { ComponentPublicInstance, ObjectDirective } from 'vue'\n\nexport const SCOPE = 'ElInfiniteScroll'\nexport const CHECK_INTERVAL = 50\nexport const DEFAULT_DELAY = 200\nexport const DEFAULT_DISTANCE = 0\n\nconst attributes = {\n  delay: {\n    type: Number,\n    default: DEFAULT_DELAY,\n  },\n  distance: {\n    type: Number,\n    default: DEFAULT_DISTANCE,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  immediate: {\n    type: Boolean,\n    default: true,\n  },\n}\n\ntype Attrs = typeof attributes\ntype ScrollOptions = { [K in keyof Attrs]: Attrs[K]['default'] }\ntype InfiniteScrollCallback = () => void\ntype InfiniteScrollEl = HTMLElement & {\n  [SCOPE]: {\n    container: HTMLElement | Window\n    containerEl: HTMLElement\n    instance: ComponentPublicInstance\n    delay: number // export for test\n    lastScrollTop: number\n    cb: InfiniteScrollCallback\n    onScroll: () => void\n    observer?: MutationObserver\n  }\n}\n\nconst getScrollOptions = (\n  el: HTMLElement,\n  instance: ComponentPublicInstance\n): ScrollOptions => {\n  return Object.entries(attributes).reduce((acm, [name, option]) => {\n    const { type, default: defaultValue } = option\n    const attrVal = el.getAttribute(`infinite-scroll-${name}`)\n    let value = instance[attrVal] ?? attrVal ?? defaultValue\n    value = value === 'false' ? false : value\n    value = type(value)\n    acm[name] = Number.isNaN(value) ? defaultValue : value\n    return acm\n  }, {} as ScrollOptions)\n}\n\nconst destroyObserver = (el: InfiniteScrollEl) => {\n  const { observer } = el[SCOPE]\n\n  if (observer) {\n    observer.disconnect()\n    delete el[SCOPE].observer\n  }\n}\n\nconst handleScroll = (el: InfiniteScrollEl, cb: InfiniteScrollCallback) => {\n  const { container, containerEl, instance, observer, lastScrollTop } =\n    el[SCOPE]\n  const { disabled, distance } = getScrollOptions(el, instance)\n  const { clientHeight, scrollHeight, scrollTop } = containerEl\n  const delta = scrollTop - lastScrollTop\n\n  el[SCOPE].lastScrollTop = scrollTop\n\n  // trigger only if full check has done and not disabled and scroll down\n  if (observer || disabled || delta < 0) return\n\n  let shouldTrigger = false\n\n  if (container === el) {\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance\n  } else {\n    // get the scrollHeight since el might be visible overflow\n    const { clientTop, scrollHeight: height } = el\n    const offsetTop = getOffsetTopDistance(el, containerEl)\n    shouldTrigger =\n      scrollTop + clientHeight >= offsetTop + clientTop + height - distance\n  }\n\n  if (shouldTrigger) {\n    cb.call(instance)\n  }\n}\n\nfunction checkFull(el: InfiniteScrollEl, cb: InfiniteScrollCallback) {\n  const { containerEl, instance } = el[SCOPE]\n  const { disabled } = getScrollOptions(el, instance)\n\n  if (disabled || containerEl.clientHeight === 0) return\n\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\n    cb.call(instance)\n  } else {\n    destroyObserver(el)\n  }\n}\n\nconst InfiniteScroll: ObjectDirective<\n  InfiniteScrollEl,\n  InfiniteScrollCallback\n> = {\n  async mounted(el, binding) {\n    const { instance, value: cb } = binding\n\n    if (!isFunction(cb)) {\n      throwError(SCOPE, \"'v-infinite-scroll' binding value must be a function\")\n    }\n\n    // ensure parentNode mounted\n    await nextTick()\n\n    const { delay, immediate } = getScrollOptions(el, instance)\n    const container = getScrollContainer(el, true)\n    const containerEl =\n      container === window\n        ? document.documentElement\n        : (container as HTMLElement)\n    const onScroll = throttle(handleScroll.bind(null, el, cb), delay)\n\n    if (!container) return\n\n    el[SCOPE] = {\n      instance,\n      container,\n      containerEl,\n      delay,\n      cb,\n      onScroll,\n      lastScrollTop: containerEl.scrollTop,\n    }\n\n    if (immediate) {\n      const observer = new MutationObserver(\n        throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL)\n      )\n      el[SCOPE].observer = observer\n      observer.observe(el, { childList: true, subtree: true })\n      checkFull(el, cb)\n    }\n\n    container.addEventListener('scroll', onScroll)\n  },\n  unmounted(el) {\n    const { container, onScroll } = el[SCOPE]\n\n    container?.removeEventListener('scroll', onScroll)\n    destroyObserver(el)\n  },\n  async updated(el) {\n    if (!el[SCOPE]) {\n      await nextTick()\n    } else {\n      const { containerEl, cb, observer } = el[SCOPE]\n      if (containerEl.clientHeight && observer) {\n        checkFull(el, cb)\n      }\n    }\n  },\n}\n\nexport default InfiniteScroll\n", "import InfiniteScroll from './src'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nconst _InfiniteScroll = InfiniteScroll as SFCWithInstall<typeof InfiniteScroll>\n\n_InfiniteScroll.install = (app: App) => {\n  app.directive('InfiniteScroll', _InfiniteScroll)\n}\n\nexport default _InfiniteScroll\nexport const ElInfiniteScroll = _InfiniteScroll\n", "import {\n  Transition,\n  createApp,\n  createVNode,\n  defineComponent,\n  h,\n  reactive,\n  ref,\n  toRefs,\n  vShow,\n  withCtx,\n  withDirectives,\n} from 'vue'\nimport { useNamespace, useZIndex } from '@element-plus/hooks'\nimport { removeClass } from '@element-plus/utils'\n\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { LoadingOptionsResolved } from './types'\n\nexport function createLoadingComponent(options: LoadingOptionsResolved) {\n  let afterLeaveTimer: number\n  // IMPORTANT NOTE: this is only a hacking way to expose the injections on an\n  // instance, DO NOT FOLLOW this pattern in your own code.\n  const afterLeaveFlag = ref(false)\n  const data = reactive({\n    ...options,\n    originalPosition: '',\n    originalOverflow: '',\n    visible: false,\n  })\n\n  function setText(text: string) {\n    data.text = text\n  }\n\n  function destroySelf() {\n    const target = data.parent\n    const ns = (vm as any).ns as UseNamespaceReturn\n    if (!target.vLoadingAddClassList) {\n      let loadingNumber: number | string | null =\n        target.getAttribute('loading-number')\n      loadingNumber = Number.parseInt(loadingNumber as any) - 1\n      if (!loadingNumber) {\n        removeClass(target, ns.bm('parent', 'relative'))\n        target.removeAttribute('loading-number')\n      } else {\n        target.setAttribute('loading-number', loadingNumber.toString())\n      }\n      removeClass(target, ns.bm('parent', 'hidden'))\n    }\n    removeElLoadingChild()\n    loadingInstance.unmount()\n  }\n  function removeElLoadingChild(): void {\n    vm.$el?.parentNode?.removeChild(vm.$el)\n  }\n  function close() {\n    if (options.beforeClose && !options.beforeClose()) return\n\n    afterLeaveFlag.value = true\n    clearTimeout(afterLeaveTimer)\n\n    afterLeaveTimer = window.setTimeout(handleAfterLeave, 400)\n    data.visible = false\n\n    options.closed?.()\n  }\n\n  function handleAfterLeave() {\n    if (!afterLeaveFlag.value) return\n    const target = data.parent\n    afterLeaveFlag.value = false\n    target.vLoadingAddClassList = undefined\n    destroySelf()\n  }\n\n  const elLoadingComponent = defineComponent({\n    name: 'ElLoading',\n    setup(_, { expose }) {\n      const ns = useNamespace('loading')\n      const zIndex = useZIndex()\n\n      expose({\n        ns,\n        zIndex,\n      })\n\n      return () => {\n        const svg = data.spinner || data.svg\n        const spinner = h(\n          'svg',\n          {\n            class: 'circular',\n            viewBox: data.svgViewBox ? data.svgViewBox : '0 0 50 50',\n            ...(svg ? { innerHTML: svg } : {}),\n          },\n          [\n            h('circle', {\n              class: 'path',\n              cx: '25',\n              cy: '25',\n              r: '20',\n              fill: 'none',\n            }),\n          ]\n        )\n\n        const spinnerText = data.text\n          ? h('p', { class: ns.b('text') }, [data.text])\n          : undefined\n\n        return h(\n          Transition,\n          {\n            name: ns.b('fade'),\n            onAfterLeave: handleAfterLeave,\n          },\n          {\n            default: withCtx(() => [\n              withDirectives(\n                createVNode(\n                  'div',\n                  {\n                    style: {\n                      backgroundColor: data.background || '',\n                    },\n                    class: [\n                      ns.b('mask'),\n                      data.customClass,\n                      data.fullscreen ? 'is-fullscreen' : '',\n                    ],\n                  },\n                  [\n                    h(\n                      'div',\n                      {\n                        class: ns.b('spinner'),\n                      },\n                      [spinner, spinnerText]\n                    ),\n                  ]\n                ),\n                [[vShow, data.visible]]\n              ),\n            ]),\n          }\n        )\n      }\n    },\n  })\n\n  const loadingInstance = createApp(elLoadingComponent)\n  const vm = loadingInstance.mount(document.createElement('div'))\n\n  return {\n    ...toRefs(data),\n    setText,\n    removeElLoadingChild,\n    close,\n    handleAfterLeave,\n    vm,\n    get $el(): HTMLElement {\n      return vm.$el\n    },\n  }\n}\n\nexport type LoadingInstance = ReturnType<typeof createLoadingComponent>\n", "// @ts-nocheck\nimport { nextTick } from 'vue'\nimport { isString } from '@vue/shared'\nimport { isClient } from '@vueuse/core'\nimport { addClass, getStyle, removeClass } from '@element-plus/utils'\nimport { createLoadingComponent } from './loading'\n\nimport type { UseNamespaceReturn, UseZIndexReturn } from '@element-plus/hooks'\nimport type { LoadingInstance } from './loading'\nimport type { LoadingOptionsResolved } from '..'\nimport type { LoadingOptions } from './types'\nimport type { CSSProperties } from 'vue'\n\nlet fullscreenInstance: LoadingInstance | undefined = undefined\n\nexport const Loading = function (\n  options: LoadingOptions = {}\n): LoadingInstance {\n  if (!isClient) return undefined as any\n\n  const resolved = resolveOptions(options)\n\n  if (resolved.fullscreen && fullscreenInstance) {\n    return fullscreenInstance\n  }\n\n  const instance = createLoadingComponent({\n    ...resolved,\n    closed: () => {\n      resolved.closed?.()\n      if (resolved.fullscreen) fullscreenInstance = undefined\n    },\n  })\n\n  addStyle(resolved, resolved.parent, instance)\n  addClassList(resolved, resolved.parent, instance)\n\n  resolved.parent.vLoadingAddClassList = () =>\n    addClassList(resolved, resolved.parent, instance)\n\n  /**\n   * add loading-number to parent.\n   * because if a fullscreen loading is triggered when somewhere\n   * a v-loading.body was triggered before and it's parent is\n   * document.body which with a margin , the fullscreen loading's\n   * destroySelf function will remove 'el-loading-parent--relative',\n   * and then the position of v-loading.body will be error.\n   */\n  let loadingNumber: string | null =\n    resolved.parent.getAttribute('loading-number')\n  if (!loadingNumber) {\n    loadingNumber = '1'\n  } else {\n    loadingNumber = `${Number.parseInt(loadingNumber) + 1}`\n  }\n  resolved.parent.setAttribute('loading-number', loadingNumber)\n\n  resolved.parent.appendChild(instance.$el)\n\n  // after instance render, then modify visible to trigger transition\n  nextTick(() => (instance.visible.value = resolved.visible))\n\n  if (resolved.fullscreen) {\n    fullscreenInstance = instance\n  }\n  return instance\n}\n\nconst resolveOptions = (options: LoadingOptions): LoadingOptionsResolved => {\n  let target: HTMLElement\n  if (isString(options.target)) {\n    target =\n      document.querySelector<HTMLElement>(options.target) ?? document.body\n  } else {\n    target = options.target || document.body\n  }\n  return {\n    parent: target === document.body || options.body ? document.body : target,\n    background: options.background || '',\n    svg: options.svg || '',\n    svgViewBox: options.svgViewBox || '',\n    spinner: options.spinner || false,\n    text: options.text || '',\n    fullscreen: target === document.body && (options.fullscreen ?? true),\n    lock: options.lock ?? false,\n    customClass: options.customClass || '',\n    visible: options.visible ?? true,\n    target,\n  }\n}\n\nconst addStyle = async (\n  options: LoadingOptionsResolved,\n  parent: HTMLElement,\n  instance: LoadingInstance\n) => {\n  const { nextZIndex } = (instance.vm as any).zIndex as UseZIndexReturn\n\n  const maskStyle: CSSProperties = {}\n  if (options.fullscreen) {\n    instance.originalPosition.value = getStyle(document.body, 'position')\n    instance.originalOverflow.value = getStyle(document.body, 'overflow')\n    maskStyle.zIndex = nextZIndex()\n  } else if (options.parent === document.body) {\n    instance.originalPosition.value = getStyle(document.body, 'position')\n    /**\n     * await dom render when visible is true in init,\n     * because some component's height maybe 0.\n     * e.g. el-table.\n     */\n    await nextTick()\n    for (const property of ['top', 'left']) {\n      const scroll = property === 'top' ? 'scrollTop' : 'scrollLeft'\n      maskStyle[property] = `${\n        (options.target as HTMLElement).getBoundingClientRect()[property] +\n        document.body[scroll] +\n        document.documentElement[scroll] -\n        Number.parseInt(getStyle(document.body, `margin-${property}`), 10)\n      }px`\n    }\n    for (const property of ['height', 'width']) {\n      maskStyle[property] = `${\n        (options.target as HTMLElement).getBoundingClientRect()[property]\n      }px`\n    }\n  } else {\n    instance.originalPosition.value = getStyle(parent, 'position')\n  }\n  for (const [key, value] of Object.entries(maskStyle)) {\n    instance.$el.style[key] = value\n  }\n}\n\nconst addClassList = (\n  options: LoadingOptions,\n  parent: HTMLElement,\n  instance: LoadingInstance\n) => {\n  const ns = (instance.vm as any).ns as UseNamespaceReturn\n\n  if (\n    !['absolute', 'fixed', 'sticky'].includes(instance.originalPosition.value)\n  ) {\n    addClass(parent, ns.bm('parent', 'relative'))\n  } else {\n    removeClass(parent, ns.bm('parent', 'relative'))\n  }\n  if (options.fullscreen && options.lock) {\n    addClass(parent, ns.bm('parent', 'hidden'))\n  } else {\n    removeClass(parent, ns.bm('parent', 'hidden'))\n  }\n}\n", "// @ts-nocheck\nimport { isRef, ref } from 'vue'\nimport { hyphenate, isObject, isString } from '@vue/shared'\nimport { Loading } from './service'\nimport type { Directive, DirectiveBinding, UnwrapRef } from 'vue'\nimport type { LoadingOptions } from './types'\nimport type { LoadingInstance } from './loading'\n\nconst INSTANCE_KEY = Symbol('ElLoading')\n\nexport type LoadingBinding = boolean | UnwrapRef<LoadingOptions>\nexport interface ElementLoading extends HTMLElement {\n  [INSTANCE_KEY]?: {\n    instance: LoadingInstance\n    options: LoadingOptions\n  }\n}\n\nconst createInstance = (\n  el: ElementLoading,\n  binding: DirectiveBinding<LoadingBinding>\n) => {\n  const vm = binding.instance\n\n  const getBindingProp = <K extends keyof LoadingOptions>(\n    key: K\n  ): LoadingOptions[K] =>\n    isObject(binding.value) ? binding.value[key] : undefined\n\n  const resolveExpression = (key: any) => {\n    const data = (isString(key) && vm?.[key]) || key\n    if (data) return ref(data)\n    else return data\n  }\n\n  const getProp = <K extends keyof LoadingOptions>(name: K) =>\n    resolveExpression(\n      getBindingProp(name) ||\n        el.getAttribute(`element-loading-${hyphenate(name)}`)\n    )\n\n  const fullscreen =\n    getBindingProp('fullscreen') ?? binding.modifiers.fullscreen\n\n  const options: LoadingOptions = {\n    text: getProp('text'),\n    svg: getProp('svg'),\n    svgViewBox: getProp('svgViewBox'),\n    spinner: getProp('spinner'),\n    background: getProp('background'),\n    customClass: getProp('customClass'),\n    fullscreen,\n    target: getBindingProp('target') ?? (fullscreen ? undefined : el),\n    body: getBindingProp('body') ?? binding.modifiers.body,\n    lock: getBindingProp('lock') ?? binding.modifiers.lock,\n  }\n  el[INSTANCE_KEY] = {\n    options,\n    instance: Loading(options),\n  }\n}\n\nconst updateOptions = (\n  newOptions: UnwrapRef<LoadingOptions>,\n  originalOptions: LoadingOptions\n) => {\n  for (const key of Object.keys(originalOptions)) {\n    if (isRef(originalOptions[key]))\n      originalOptions[key].value = newOptions[key]\n  }\n}\n\nexport const vLoading: Directive<ElementLoading, LoadingBinding> = {\n  mounted(el, binding) {\n    if (binding.value) {\n      createInstance(el, binding)\n    }\n  },\n  updated(el, binding) {\n    const instance = el[INSTANCE_KEY]\n    if (binding.oldValue !== binding.value) {\n      if (binding.value && !binding.oldValue) {\n        createInstance(el, binding)\n      } else if (binding.value && binding.oldValue) {\n        if (isObject(binding.value))\n          updateOptions(binding.value, instance!.options)\n      } else {\n        instance?.instance.close()\n      }\n    }\n  },\n  unmounted(el) {\n    el[INSTANCE_KEY]?.instance.close()\n  },\n}\n", "import { Loading } from './src/service'\nimport { vLoading } from './src/directive'\n\nimport type { App } from 'vue'\n\n// installer and everything in all\nexport const ElLoading = {\n  install(app: App) {\n    app.directive('loading', vLoading)\n    app.config.globalProperties.$loading = Loading\n  },\n  directive: vLoading,\n  service: Loading,\n}\n\nexport default ElLoading\nexport { vLoading, vLoading as ElLoadingDirective, Loading as ElLoadingService }\n\nexport * from './src/types'\n", "import { isClient } from '@vueuse/core'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport type { AppContext, ExtractPropTypes, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type MessageConstructor from './message.vue'\n\nexport const messageTypes = ['success', 'info', 'warning', 'error'] as const\n\nexport type messageType = typeof messageTypes[number]\n\nexport interface MessageConfigContext {\n  max?: number\n}\n\nexport const messageDefaults = mutable({\n  customClass: '',\n  center: false,\n  dangerouslyUseHTMLString: false,\n  duration: 3000,\n  icon: undefined,\n  id: '',\n  message: '',\n  onClose: undefined,\n  showClose: false,\n  type: 'info',\n  offset: 16,\n  zIndex: 0,\n  grouping: false,\n  repeatNum: 1,\n  appendTo: isClient ? document.body : (undefined as never),\n} as const)\n\nexport const messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: messageDefaults.customClass,\n  },\n  center: {\n    type: Boolean,\n    default: messageDefaults.center,\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: messageDefaults.dangerouslyUseHTMLString,\n  },\n  duration: {\n    type: Number,\n    default: messageDefaults.duration,\n  },\n  icon: {\n    type: iconPropType,\n    default: messageDefaults.icon,\n  },\n  id: {\n    type: String,\n    default: messageDefaults.id,\n  },\n  message: {\n    type: definePropType<string | VNode | (() => VNode)>([\n      String,\n      Object,\n      Function,\n    ]),\n    default: messageDefaults.message,\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: false,\n  },\n  showClose: {\n    type: Boolean,\n    default: messageDefaults.showClose,\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: messageDefaults.type,\n  },\n  offset: {\n    type: Number,\n    default: messageDefaults.offset,\n  },\n  zIndex: {\n    type: Number,\n    default: messageDefaults.zIndex,\n  },\n  grouping: {\n    type: Boolean,\n    default: messageDefaults.grouping,\n  },\n  repeatNum: {\n    type: Number,\n    default: messageDefaults.repeatNum,\n  },\n} as const)\nexport type MessageProps = ExtractPropTypes<typeof messageProps>\n\nexport const messageEmits = {\n  destroy: () => true,\n}\nexport type MessageEmits = typeof messageEmits\n\nexport type MessageInstance = InstanceType<typeof MessageConstructor>\n\nexport type MessageOptions = Partial<\n  Mutable<\n    Omit<MessageProps, 'id'> & {\n      appendTo?: HTMLElement | string\n    }\n  >\n>\nexport type MessageParams = MessageOptions | MessageOptions['message']\nexport type MessageParamsNormalized = Omit<MessageProps, 'id'> & {\n  appendTo: HTMLElement\n}\nexport type MessageOptionsWithType = Omit<MessageOptions, 'type'>\nexport type MessageParamsWithType =\n  | MessageOptionsWithType\n  | MessageOptions['message']\n\nexport interface MessageHandler {\n  close: () => void\n}\n\nexport type MessageFn = {\n  (options?: MessageParams, appContext?: null | AppContext): MessageHandler\n  closeAll(type?: messageType): void\n}\nexport type MessageTypedFn = (\n  options?: MessageParamsWithType,\n  appContext?: null | AppContext\n) => MessageHandler\n\nexport interface Message extends MessageFn {\n  success: MessageTypedFn\n  warning: MessageTypedFn\n  info: MessageTypedFn\n  error: MessageTypedFn\n}\n", "import { shallowReactive } from 'vue'\nimport type { ComponentInternalInstance, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type { MessageHandler, MessageProps } from './message'\n\nexport type MessageContext = {\n  id: string\n  vnode: VNode\n  handler: MessageHandler\n  vm: ComponentInternalInstance\n  props: Mutable<MessageProps>\n}\n\nexport const instances: MessageContext[] = shallowReactive([])\n\nexport const getInstance = (id: string) => {\n  const idx = instances.findIndex((instance) => instance.id === id)\n  const current = instances[idx]\n  let prev: MessageContext | undefined\n  if (idx > 0) {\n    prev = instances[idx - 1]\n  }\n  return { current, prev }\n}\n\nexport const getLastOffset = (id: string): number => {\n  const { prev } = getInstance(id)\n  if (!prev) return 0\n  return prev.vm.exposed!.bottom.value\n}\n\nexport const getOffsetOrSpace = (id: string, offset: number) => {\n  const idx = instances.findIndex((instance) => instance.id === id)\n  return idx > 0 ? 20 : offset\n}\n", "<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      ref=\"messageRef\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type && !icon },\n        ns.is('center', center),\n        ns.is('closable', showClose),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      />\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\" />\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <Close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useEventListener, useResizeObserver, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { useGlobalComponentSettings } from '@element-plus/components/config-provider'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { messageEmits, messageProps } from './message'\nimport { getLastOffset, getOffsetOrSpace } from './instance'\nimport type { BadgeProps } from '@element-plus/components/badge'\nimport type { CSSProperties } from 'vue'\n\nconst { Close } = TypeComponents\n\ndefineOptions({\n  name: 'ElMessage',\n})\n\nconst props = defineProps(messageProps)\ndefineEmits(messageEmits)\n\nconst { ns, zIndex } = useGlobalComponentSettings('message')\nconst { currentZIndex, nextZIndex } = zIndex\n\nconst messageRef = ref<HTMLDivElement>()\nconst visible = ref(false)\nconst height = ref(0)\n\nlet stopTimer: (() => void) | undefined = undefined\n\nconst badgeType = computed<BadgeProps['type']>(() =>\n  props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n)\nconst typeClass = computed(() => {\n  const type = props.type\n  return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n})\nconst iconComponent = computed(\n  () => props.icon || TypeComponentsMap[props.type] || ''\n)\n\nconst lastOffset = computed(() => getLastOffset(props.id))\nconst offset = computed(\n  () => getOffsetOrSpace(props.id, props.offset) + lastOffset.value\n)\nconst bottom = computed((): number => height.value + offset.value)\nconst customStyle = computed<CSSProperties>(() => ({\n  top: `${offset.value}px`,\n  zIndex: currentZIndex.value,\n}))\n\nfunction startTimer() {\n  if (props.duration === 0) return\n  ;({ stop: stopTimer } = useTimeoutFn(() => {\n    close()\n  }, props.duration))\n}\n\nfunction clearTimer() {\n  stopTimer?.()\n}\n\nfunction close() {\n  visible.value = false\n}\n\nfunction keydown({ code }: KeyboardEvent) {\n  if (code === EVENT_CODE.esc) {\n    // press esc to close the message\n    close()\n  }\n}\n\nonMounted(() => {\n  startTimer()\n  nextZIndex()\n  visible.value = true\n})\n\nwatch(\n  () => props.repeatNum,\n  () => {\n    clearTimer()\n    startTimer()\n  }\n)\n\nuseEventListener(document, 'keydown', keydown)\n\nuseResizeObserver(messageRef, () => {\n  height.value = messageRef.value!.getBoundingClientRect().height\n})\n\ndefineExpose({\n  visible,\n  bottom,\n  close,\n})\n</script>\n", "import { createVNode, render } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport {\n  debugWarn,\n  isElement,\n  isFunction,\n  isNumber,\n  isString,\n  isVNode,\n} from '@element-plus/utils'\nimport { messageConfig } from '@element-plus/components/config-provider'\nimport MessageConstructor from './message.vue'\nimport { messageDefaults, messageTypes } from './message'\nimport { instances } from './instance'\n\nimport type { MessageContext } from './instance'\nimport type { AppContext } from 'vue'\nimport type {\n  Message,\n  MessageFn,\n  MessageHandler,\n  MessageOptions,\n  MessageParams,\n  MessageParamsNormalized,\n  messageType,\n} from './message'\n\nlet seed = 1\n\n// TODO: Since Notify.ts is basically the same like this file. So we could do some encapsulation against them to reduce code duplication.\n\nconst normalizeOptions = (params?: MessageParams) => {\n  const options: MessageOptions =\n    !params || isString(params) || isVNode(params) || isFunction(params)\n      ? { message: params }\n      : params\n\n  const normalized = {\n    ...messageDefaults,\n    ...options,\n  }\n\n  if (!normalized.appendTo) {\n    normalized.appendTo = document.body\n  } else if (isString(normalized.appendTo)) {\n    let appendTo = document.querySelector<HTMLElement>(normalized.appendTo)\n\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElMessage',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n\n    normalized.appendTo = appendTo\n  }\n\n  return normalized as MessageParamsNormalized\n}\n\nconst closeMessage = (instance: MessageContext) => {\n  const idx = instances.indexOf(instance)\n  if (idx === -1) return\n\n  instances.splice(idx, 1)\n  const { handler } = instance\n  handler.close()\n}\n\nconst createMessage = (\n  { appendTo, ...options }: MessageParamsNormalized,\n  context?: AppContext | null\n): MessageContext => {\n  const id = `message_${seed++}`\n  const userOnClose = options.onClose\n\n  const container = document.createElement('div')\n\n  const props = {\n    ...options,\n    // now the zIndex will be used inside the message.vue component instead of here.\n    // zIndex: nextIndex() + options.zIndex\n    id,\n    onClose: () => {\n      userOnClose?.()\n      closeMessage(instance)\n    },\n\n    // clean message element preventing mem leak\n    onDestroy: () => {\n      // since the element is destroy, then the VNode should be collected by GC as well\n      // we do not want cause any mem leak because we have returned vm as a reference to users\n      // so that we manually set it to false.\n      render(null, container)\n    },\n  }\n  const vnode = createVNode(\n    MessageConstructor,\n    props,\n    isFunction(props.message) || isVNode(props.message)\n      ? {\n          default: isFunction(props.message)\n            ? props.message\n            : () => props.message,\n        }\n      : null\n  )\n  vnode.appContext = context || message._context\n\n  render(vnode, container)\n  // instances will remove this item when close function gets called. So we do not need to worry about it.\n  appendTo.appendChild(container.firstElementChild!)\n\n  const vm = vnode.component!\n\n  const handler: MessageHandler = {\n    // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n    // for out component, so that all closing steps will not be skipped.\n    close: () => {\n      vm.exposed!.visible.value = false\n    },\n  }\n\n  const instance: MessageContext = {\n    id,\n    vnode,\n    vm,\n    handler,\n    props: (vnode.component as any).props,\n  }\n\n  return instance\n}\n\nconst message: MessageFn &\n  Partial<Message> & { _context: AppContext | null } = (\n  options = {},\n  context\n) => {\n  if (!isClient) return { close: () => undefined }\n\n  if (isNumber(messageConfig.max) && instances.length >= messageConfig.max) {\n    return { close: () => undefined }\n  }\n\n  const normalized = normalizeOptions(options)\n\n  if (normalized.grouping && instances.length) {\n    const instance = instances.find(\n      ({ vnode: vm }) => vm.props?.message === normalized.message\n    )\n    if (instance) {\n      instance.props.repeatNum += 1\n      instance.props.type = normalized.type\n      return instance.handler\n    }\n  }\n\n  const instance = createMessage(normalized, context)\n\n  instances.push(instance)\n  return instance.handler\n}\n\nmessageTypes.forEach((type) => {\n  message[type] = (options = {}, appContext) => {\n    const normalized = normalizeOptions(options)\n    return message({ ...normalized, type }, appContext)\n  }\n})\n\nexport function closeAll(type?: messageType): void {\n  for (const instance of instances) {\n    if (!type || type === instance.props.type) {\n      instance.handler.close()\n    }\n  }\n}\n\nmessage.closeAll = closeAll\nmessage._context = null\n\nexport default message as Message\n", "import { withInstallFunction } from '@element-plus/utils'\n\nimport Message from './src/method'\n\nexport const ElMessage = withInstallFunction(Message, '$message')\nexport default ElMessage\n\nexport * from './src/message'\n", "<template>\n  <transition name=\"fade-in-linear\" @after-leave=\"$emit('vanish')\">\n    <el-overlay\n      v-show=\"visible\"\n      :z-index=\"zIndex\"\n      :overlay-class=\"[ns.is('message-box'), modalClass]\"\n      :mask=\"modal\"\n    >\n      <div\n        role=\"dialog\"\n        :aria-label=\"title\"\n        aria-modal=\"true\"\n        :aria-describedby=\"!showInput ? contentId : undefined\"\n        :class=\"`${ns.namespace.value}-overlay-message-box`\"\n        @click=\"overlayEvent.onClick\"\n        @mousedown=\"overlayEvent.onMousedown\"\n        @mouseup=\"overlayEvent.onMouseup\"\n      >\n        <el-focus-trap\n          loop\n          :trapped=\"visible\"\n          :focus-trap-el=\"rootRef\"\n          :focus-start-el=\"focusStartRef\"\n          @release-requested=\"onCloseRequested\"\n        >\n          <div\n            ref=\"rootRef\"\n            :class=\"[\n              ns.b(),\n              customClass,\n              ns.is('draggable', draggable),\n              { [ns.m('center')]: center },\n            ]\"\n            :style=\"customStyle\"\n            tabindex=\"-1\"\n            @click.stop=\"\"\n          >\n            <div\n              v-if=\"title !== null && title !== undefined\"\n              ref=\"headerRef\"\n              :class=\"ns.e('header')\"\n            >\n              <div :class=\"ns.e('title')\">\n                <el-icon\n                  v-if=\"iconComponent && center\"\n                  :class=\"[ns.e('status'), typeClass]\"\n                >\n                  <component :is=\"iconComponent\" />\n                </el-icon>\n                <span>{{ title }}</span>\n              </div>\n              <button\n                v-if=\"showClose\"\n                type=\"button\"\n                :class=\"ns.e('headerbtn')\"\n                :aria-label=\"t('el.messagebox.close')\"\n                @click=\"\n                  handleAction(distinguishCancelAndClose ? 'close' : 'cancel')\n                \"\n                @keydown.prevent.enter=\"\n                  handleAction(distinguishCancelAndClose ? 'close' : 'cancel')\n                \"\n              >\n                <el-icon :class=\"ns.e('close')\">\n                  <close />\n                </el-icon>\n              </button>\n            </div>\n            <div :id=\"contentId\" :class=\"ns.e('content')\">\n              <div :class=\"ns.e('container')\">\n                <el-icon\n                  v-if=\"iconComponent && !center && hasMessage\"\n                  :class=\"[ns.e('status'), typeClass]\"\n                >\n                  <component :is=\"iconComponent\" />\n                </el-icon>\n                <div v-if=\"hasMessage\" :class=\"ns.e('message')\">\n                  <slot>\n                    <component\n                      :is=\"showInput ? 'label' : 'p'\"\n                      v-if=\"!dangerouslyUseHTMLString\"\n                      :for=\"showInput ? inputId : undefined\"\n                    >\n                      {{ !dangerouslyUseHTMLString ? message : '' }}\n                    </component>\n                    <component\n                      :is=\"showInput ? 'label' : 'p'\"\n                      v-else\n                      :for=\"showInput ? inputId : undefined\"\n                      v-html=\"message\"\n                    />\n                  </slot>\n                </div>\n              </div>\n              <div v-show=\"showInput\" :class=\"ns.e('input')\">\n                <el-input\n                  :id=\"inputId\"\n                  ref=\"inputRef\"\n                  v-model=\"inputValue\"\n                  :type=\"inputType\"\n                  :placeholder=\"inputPlaceholder\"\n                  :aria-invalid=\"validateError\"\n                  :class=\"{ invalid: validateError }\"\n                  @keydown.enter=\"handleInputEnter\"\n                />\n                <div\n                  :class=\"ns.e('errormsg')\"\n                  :style=\"{\n                    visibility: !!editorErrorMessage ? 'visible' : 'hidden',\n                  }\"\n                >\n                  {{ editorErrorMessage }}\n                </div>\n              </div>\n            </div>\n            <div :class=\"ns.e('btns')\">\n              <el-button\n                v-if=\"showCancelButton\"\n                :loading=\"cancelButtonLoading\"\n                :class=\"[cancelButtonClass]\"\n                :round=\"roundButton\"\n                :size=\"btnSize\"\n                @click=\"handleAction('cancel')\"\n                @keydown.prevent.enter=\"handleAction('cancel')\"\n              >\n                {{ cancelButtonText || t('el.messagebox.cancel') }}\n              </el-button>\n              <el-button\n                v-show=\"showConfirmButton\"\n                ref=\"confirmRef\"\n                type=\"primary\"\n                :loading=\"confirmButtonLoading\"\n                :class=\"[confirmButtonClasses]\"\n                :round=\"roundButton\"\n                :disabled=\"confirmButtonDisabled\"\n                :size=\"btnSize\"\n                @click=\"handleAction('confirm')\"\n                @keydown.prevent.enter=\"handleAction('confirm')\"\n              >\n                {{ confirmButtonText || t('el.messagebox.confirm') }}\n              </el-button>\n            </div>\n          </div>\n        </el-focus-trap>\n      </div>\n    </el-overlay>\n  </transition>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport { TrapFocus } from '@element-plus/directives'\nimport {\n  useDraggable,\n  useId,\n  useLockscreen,\n  useRestoreActive,\n  useSameTarget,\n} from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport { useFormSize } from '@element-plus/components/form'\nimport { ElOverlay } from '@element-plus/components/overlay'\nimport {\n  TypeComponents,\n  TypeComponentsMap,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport { ElIcon } from '@element-plus/components/icon'\nimport ElFocusTrap from '@element-plus/components/focus-trap'\nimport { useGlobalComponentSettings } from '@element-plus/components/config-provider'\n\nimport type { ComponentPublicInstance, DefineComponent, PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type {\n  Action,\n  MessageBoxState,\n  MessageBoxType,\n} from './message-box.type'\n\nexport default defineComponent({\n  name: 'ElMessageBox',\n  directives: {\n    TrapFocus,\n  },\n  components: {\n    ElButton,\n    ElFocusTrap,\n    ElInput,\n    ElOverlay,\n    ElIcon,\n    ...TypeComponents,\n  },\n  inheritAttrs: false,\n  props: {\n    buttonSize: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    modal: {\n      type: Boolean,\n      default: true,\n    },\n    lockScroll: {\n      type: Boolean,\n      default: true,\n    },\n    showClose: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnClickModal: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnPressEscape: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnHashChange: {\n      type: Boolean,\n      default: true,\n    },\n    center: Boolean,\n    draggable: Boolean,\n    roundButton: {\n      default: false,\n      type: Boolean,\n    },\n    container: {\n      type: String, // default append to body\n      default: 'body',\n    },\n    boxType: {\n      type: String as PropType<MessageBoxType>,\n      default: '',\n    },\n  },\n  emits: ['vanish', 'action'],\n  setup(props, { emit }) {\n    // const popup = usePopup(props, doClose)\n    const { locale, zIndex, ns } = useGlobalComponentSettings('message-box')\n\n    const { t } = locale\n    const { nextZIndex } = zIndex\n\n    const visible = ref(false)\n    // s represents state\n    const state = reactive<MessageBoxState>({\n      // autofocus element when open message-box\n      autofocus: true,\n      beforeClose: null,\n      callback: null,\n      cancelButtonText: '',\n      cancelButtonClass: '',\n      confirmButtonText: '',\n      confirmButtonClass: '',\n      customClass: '',\n      customStyle: {},\n      dangerouslyUseHTMLString: false,\n      distinguishCancelAndClose: false,\n      icon: '',\n      inputPattern: null,\n      inputPlaceholder: '',\n      inputType: 'text',\n      inputValue: null,\n      inputValidator: null,\n      inputErrorMessage: '',\n      message: null,\n      modalFade: true,\n      modalClass: '',\n      showCancelButton: false,\n      showConfirmButton: true,\n      type: '',\n      title: undefined,\n      showInput: false,\n      action: '' as Action,\n      confirmButtonLoading: false,\n      cancelButtonLoading: false,\n      confirmButtonDisabled: false,\n      editorErrorMessage: '',\n      // refer to: https://github.com/ElemeFE/element/commit/2999279ae34ef10c373ca795c87b020ed6753eed\n      // seemed ok for now without this state.\n      // isOnComposition: false, // temporary remove\n      validateError: false,\n      zIndex: nextZIndex(),\n    })\n\n    const typeClass = computed(() => {\n      const type = state.type\n      return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n    })\n\n    const contentId = useId()\n    const inputId = useId()\n\n    const btnSize = useFormSize(\n      computed(() => props.buttonSize),\n      { prop: true, form: true, formItem: true }\n    )\n\n    const iconComponent = computed(\n      () => state.icon || TypeComponentsMap[state.type] || ''\n    )\n    const hasMessage = computed(() => !!state.message)\n    const rootRef = ref<HTMLElement>()\n    const headerRef = ref<HTMLElement>()\n    const focusStartRef = ref<HTMLElement>()\n    const inputRef = ref<ComponentPublicInstance>()\n    const confirmRef = ref<ComponentPublicInstance>()\n\n    const confirmButtonClasses = computed(() => state.confirmButtonClass)\n\n    watch(\n      () => state.inputValue,\n      async (val) => {\n        await nextTick()\n        if (props.boxType === 'prompt' && val !== null) {\n          validate()\n        }\n      },\n      { immediate: true }\n    )\n\n    watch(\n      () => visible.value,\n      (val) => {\n        if (val) {\n          if (props.boxType !== 'prompt') {\n            if (state.autofocus) {\n              focusStartRef.value = confirmRef.value?.$el ?? rootRef.value\n            } else {\n              focusStartRef.value = rootRef.value\n            }\n          }\n          state.zIndex = nextZIndex()\n        }\n        if (props.boxType !== 'prompt') return\n        if (val) {\n          nextTick().then(() => {\n            if (inputRef.value && inputRef.value.$el) {\n              if (state.autofocus) {\n                focusStartRef.value = getInputElement() ?? rootRef.value\n              } else {\n                focusStartRef.value = rootRef.value\n              }\n            }\n          })\n        } else {\n          state.editorErrorMessage = ''\n          state.validateError = false\n        }\n      }\n    )\n\n    const draggable = computed(() => props.draggable)\n    useDraggable(rootRef, headerRef, draggable)\n\n    onMounted(async () => {\n      await nextTick()\n      if (props.closeOnHashChange) {\n        window.addEventListener('hashchange', doClose)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      if (props.closeOnHashChange) {\n        window.removeEventListener('hashchange', doClose)\n      }\n    })\n\n    function doClose() {\n      if (!visible.value) return\n      visible.value = false\n      nextTick(() => {\n        if (state.action) emit('action', state.action)\n      })\n    }\n\n    const handleWrapperClick = () => {\n      if (props.closeOnClickModal) {\n        handleAction(state.distinguishCancelAndClose ? 'close' : 'cancel')\n      }\n    }\n\n    const overlayEvent = useSameTarget(handleWrapperClick)\n\n    const handleInputEnter = (e: KeyboardEvent) => {\n      if (state.inputType !== 'textarea') {\n        e.preventDefault()\n        return handleAction('confirm')\n      }\n    }\n\n    const handleAction = (action: Action) => {\n      if (props.boxType === 'prompt' && action === 'confirm' && !validate()) {\n        return\n      }\n\n      state.action = action\n\n      if (state.beforeClose) {\n        state.beforeClose?.(action, state, doClose)\n      } else {\n        doClose()\n      }\n    }\n\n    const validate = () => {\n      if (props.boxType === 'prompt') {\n        const inputPattern = state.inputPattern\n        if (inputPattern && !inputPattern.test(state.inputValue || '')) {\n          state.editorErrorMessage =\n            state.inputErrorMessage || t('el.messagebox.error')\n          state.validateError = true\n          return false\n        }\n        const inputValidator = state.inputValidator\n        if (typeof inputValidator === 'function') {\n          const validateResult = inputValidator(state.inputValue)\n          if (validateResult === false) {\n            state.editorErrorMessage =\n              state.inputErrorMessage || t('el.messagebox.error')\n            state.validateError = true\n            return false\n          }\n          if (typeof validateResult === 'string') {\n            state.editorErrorMessage = validateResult\n            state.validateError = true\n            return false\n          }\n        }\n      }\n      state.editorErrorMessage = ''\n      state.validateError = false\n      return true\n    }\n\n    const getInputElement = () => {\n      const inputRefs = inputRef.value.$refs\n      return (inputRefs.input || inputRefs.textarea) as HTMLElement\n    }\n\n    const handleClose = () => {\n      handleAction('close')\n    }\n\n    // when close on press escape is disabled, pressing esc should not callout\n    // any other message box and close any other dialog-ish elements\n    // e.g. Dialog has a close on press esc feature, and when it closes, it calls\n    // props.beforeClose method to make a intermediate state by callout a message box\n    // for some verification or alerting. then if we allow global event liek this\n    // to dispatch, it could callout another message box.\n    const onCloseRequested = () => {\n      if (props.closeOnPressEscape) {\n        handleClose()\n      }\n    }\n\n    // locks the screen to prevent scroll\n    if (props.lockScroll) {\n      useLockscreen(visible)\n    }\n\n    // restore to prev active element.\n    useRestoreActive(visible)\n\n    return {\n      ...toRefs(state),\n      ns,\n      overlayEvent,\n      visible,\n      hasMessage,\n      typeClass,\n      contentId,\n      inputId,\n      btnSize,\n      iconComponent,\n      confirmButtonClasses,\n      rootRef,\n      focusStartRef,\n      headerRef,\n      inputRef,\n      confirmRef,\n      doClose, // for outside usage\n      handleClose, // for out side usage\n      onCloseRequested,\n      handleWrapperClick,\n      handleInputEnter,\n      handleAction,\n      t,\n    }\n  },\n}) as DefineComponent\n</script>\n", "import { createVNode, render } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport {\n  debugWarn,\n  hasOwn,\n  isElement,\n  isFunction,\n  isObject,\n  isString,\n  isUndefined,\n  isVNode,\n} from '@element-plus/utils'\nimport MessageBoxConstructor from './index.vue'\n\nimport type { AppContext, ComponentPublicInstance, VNode } from 'vue'\nimport type {\n  Action,\n  Callback,\n  ElMessageBoxOptions,\n  ElMessageBoxShortcutMethod,\n  IElMessageBox,\n  MessageBoxData,\n  MessageBoxState,\n} from './message-box.type'\n\n// component default merge props & data\n\nconst messageInstance = new Map<\n  ComponentPublicInstance<{ doClose: () => void }>, // marking doClose as function\n  {\n    options: any\n    callback: Callback | undefined\n    resolve: (res: any) => void\n    reject: (reason?: any) => void\n  }\n>()\n\nconst getAppendToElement = (props: any): HTMLElement => {\n  let appendTo: HTMLElement | null = document.body\n  if (props.appendTo) {\n    if (isString(props.appendTo)) {\n      appendTo = document.querySelector<HTMLElement>(props.appendTo)\n    }\n    if (isElement(props.appendTo)) {\n      appendTo = props.appendTo\n    }\n\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElMessageBox',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n  }\n  return appendTo\n}\n\nconst initInstance = (\n  props: any,\n  container: HTMLElement,\n  appContext: AppContext | null = null\n) => {\n  const vnode = createVNode(\n    MessageBoxConstructor,\n    props,\n    isFunction(props.message) || isVNode(props.message)\n      ? {\n          default: isFunction(props.message)\n            ? props.message\n            : () => props.message,\n        }\n      : null\n  )\n  vnode.appContext = appContext\n  render(vnode, container)\n  getAppendToElement(props).appendChild(container.firstElementChild!)\n  return vnode.component\n}\n\nconst genContainer = () => {\n  return document.createElement('div')\n}\n\nconst showMessage = (options: any, appContext?: AppContext | null) => {\n  const container = genContainer()\n  // Adding destruct method.\n  // when transition leaves emitting `vanish` evt. so that we can do the clean job.\n  options.onVanish = () => {\n    // not sure if this causes mem leak, need proof to verify that.\n    // maybe calling out like 1000 msg-box then close them all.\n    render(null, container)\n    messageInstance.delete(vm) // Remove vm to avoid mem leak.\n    // here we were suppose to call document.body.removeChild(container.firstElementChild)\n    // but render(null, container) did that job for us. so that we do not call that directly\n  }\n\n  options.onAction = (action: Action) => {\n    const currentMsg = messageInstance.get(vm)!\n    let resolve: Action | { value: string; action: Action }\n    if (options.showInput) {\n      resolve = { value: vm.inputValue, action }\n    } else {\n      resolve = action\n    }\n    if (options.callback) {\n      options.callback(resolve, instance.proxy)\n    } else {\n      if (action === 'cancel' || action === 'close') {\n        if (options.distinguishCancelAndClose && action !== 'cancel') {\n          currentMsg.reject('close')\n        } else {\n          currentMsg.reject('cancel')\n        }\n      } else {\n        currentMsg.resolve(resolve)\n      }\n    }\n  }\n\n  const instance = initInstance(options, container, appContext)!\n\n  // This is how we use message box programmably.\n  // Maybe consider releasing a template version?\n  // get component instance like v2.\n  const vm = instance.proxy as ComponentPublicInstance<\n    {\n      visible: boolean\n      doClose: () => void\n    } & MessageBoxState\n  >\n\n  for (const prop in options) {\n    if (hasOwn(options, prop) && !hasOwn(vm.$props, prop)) {\n      vm[prop as keyof ComponentPublicInstance] = options[prop]\n    }\n  }\n\n  // change visibility after everything is settled\n  vm.visible = true\n  return vm\n}\n\nasync function MessageBox(\n  options: ElMessageBoxOptions,\n  appContext?: AppContext | null\n): Promise<MessageBoxData>\nfunction MessageBox(\n  options: ElMessageBoxOptions | string | VNode,\n  appContext: AppContext | null = null\n): Promise<{ value: string; action: Action } | Action> {\n  if (!isClient) return Promise.reject()\n  let callback: Callback | undefined\n  if (isString(options) || isVNode(options)) {\n    options = {\n      message: options,\n    }\n  } else {\n    callback = options.callback\n  }\n\n  return new Promise((resolve, reject) => {\n    const vm = showMessage(\n      options,\n      appContext ?? (MessageBox as IElMessageBox)._context\n    )\n    // collect this vm in order to handle upcoming events.\n    messageInstance.set(vm, {\n      options,\n      callback,\n      resolve,\n      reject,\n    })\n  })\n}\n\nconst MESSAGE_BOX_VARIANTS = ['alert', 'confirm', 'prompt'] as const\nconst MESSAGE_BOX_DEFAULT_OPTS: Record<\n  typeof MESSAGE_BOX_VARIANTS[number],\n  Partial<ElMessageBoxOptions>\n> = {\n  alert: { closeOnPressEscape: false, closeOnClickModal: false },\n  confirm: { showCancelButton: true },\n  prompt: { showCancelButton: true, showInput: true },\n}\n\nMESSAGE_BOX_VARIANTS.forEach((boxType) => {\n  ;(MessageBox as IElMessageBox)[boxType] = messageBoxFactory(\n    boxType\n  ) as ElMessageBoxShortcutMethod\n})\n\nfunction messageBoxFactory(boxType: typeof MESSAGE_BOX_VARIANTS[number]) {\n  return (\n    message: string | VNode,\n    title: string | ElMessageBoxOptions,\n    options?: ElMessageBoxOptions,\n    appContext?: AppContext | null\n  ) => {\n    let titleOrOpts = ''\n    if (isObject(title)) {\n      options = title as ElMessageBoxOptions\n      titleOrOpts = ''\n    } else if (isUndefined(title)) {\n      titleOrOpts = ''\n    } else {\n      titleOrOpts = title as string\n    }\n\n    return MessageBox(\n      Object.assign(\n        {\n          title: titleOrOpts,\n          message,\n          type: '',\n          ...MESSAGE_BOX_DEFAULT_OPTS[boxType],\n        },\n        options,\n        {\n          boxType,\n        }\n      ),\n      appContext\n    )\n  }\n}\n\nMessageBox.close = () => {\n  // instance.setupInstall.doClose()\n  // instance.setupInstall.state.visible = false\n\n  messageInstance.forEach((_, vm) => {\n    vm.doClose()\n  })\n\n  messageInstance.clear()\n}\n;(MessageBox as IElMessageBox)._context = null\n\nexport default MessageBox as IElMessageBox\n", "import MessageBox from './src/messageBox'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nconst _MessageBox = MessageBox as SFCWithInstall<typeof MessageBox>\n\n_MessageBox.install = (app: App) => {\n  _MessageBox._context = app._context\n  app.config.globalProperties.$msgbox = _MessageBox\n  app.config.globalProperties.$messageBox = _MessageBox\n  app.config.globalProperties.$alert = _MessageBox.alert\n  app.config.globalProperties.$confirm = _MessageBox.confirm\n  app.config.globalProperties.$prompt = _MessageBox.prompt\n}\n\nexport default _MessageBox\nexport const ElMessageBox = _MessageBox\n\nexport * from './src/message-box.type'\n", "import { buildProps, definePropType, iconPropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes, VNode } from 'vue'\nimport type Notification from './notification.vue'\n\nexport const notificationTypes = [\n  'success',\n  'info',\n  'warning',\n  'error',\n] as const\n\nexport const notificationProps = buildProps({\n  customClass: {\n    type: String,\n    default: '',\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 4500,\n  },\n  icon: {\n    type: iconPropType,\n  },\n  id: {\n    type: String,\n    default: '',\n  },\n  message: {\n    type: definePropType<string | VNode>([String, Object]),\n    default: '',\n  },\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  onClick: {\n    type: definePropType<() => void>(Function),\n    default: () => undefined,\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: true,\n  },\n  position: {\n    type: String,\n    values: ['top-right', 'top-left', 'bottom-right', 'bottom-left'],\n    default: 'top-right',\n  },\n  showClose: {\n    type: Boolean,\n    default: true,\n  },\n  title: {\n    type: String,\n    default: '',\n  },\n  type: {\n    type: String,\n    values: [...notificationTypes, ''],\n    default: '',\n  },\n  zIndex: {\n    type: Number,\n    default: 0,\n  },\n} as const)\nexport type NotificationProps = ExtractPropTypes<typeof notificationProps>\n\nexport const notificationEmits = {\n  destroy: () => true,\n}\nexport type NotificationEmits = typeof notificationEmits\n\nexport type NotificationInstance = InstanceType<typeof Notification>\n\nexport type NotificationOptions = Omit<NotificationProps, 'id'> & {\n  appendTo?: HTMLElement | string\n}\nexport type NotificationOptionsTyped = Omit<NotificationOptions, 'type'>\n\nexport interface NotificationHandle {\n  close: () => void\n}\n\nexport type NotificationParams = Partial<NotificationOptions> | string | VNode\nexport type NotificationParamsTyped =\n  | Partial<NotificationOptionsTyped>\n  | string\n  | VNode\n\nexport type NotifyFn = ((\n  options?: NotificationParams\n) => NotificationHandle) & { closeAll: () => void }\n\nexport type NotifyTypedFn = (\n  options?: NotificationParamsTyped\n) => NotificationHandle\n\nexport interface Notify extends NotifyFn {\n  success: NotifyTypedFn\n  warning: NotifyTypedFn\n  error: NotifyTypedFn\n  info: NotifyTypedFn\n}\n\nexport interface NotificationQueueItem {\n  vm: VNode\n}\n\nexport type NotificationQueue = NotificationQueueItem[]\n", "<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"[ns.b(), customClass, horizontalClass]\"\n      :style=\"positionStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onClick\"\n    >\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <div :class=\"ns.e('group')\">\n        <h2 :class=\"ns.e('title')\" v-text=\"title\" />\n        <div\n          v-show=\"message\"\n          :class=\"ns.e('content')\"\n          :style=\"!!title ? undefined : { margin: 0 }\"\n        >\n          <slot>\n            <p v-if=\"!dangerouslyUseHTMLString\">{{ message }}</p>\n            <!-- Caution here, message could've been compromised, never use user's input as message -->\n            <p v-else v-html=\"message\" />\n          </slot>\n        </div>\n        <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n          <Close />\n        </el-icon>\n      </div>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, onMounted, ref } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { CloseComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useGlobalComponentSettings } from '@element-plus/components/config-provider'\nimport { notificationEmits, notificationProps } from './notification'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElNotification',\n})\n\nconst props = defineProps(notificationProps)\ndefineEmits(notificationEmits)\n\nconst { ns, zIndex } = useGlobalComponentSettings('notification')\nconst { nextZIndex, currentZIndex } = zIndex\n\nconst { Close } = CloseComponents\n\nconst visible = ref(false)\nlet timer: (() => void) | undefined = undefined\n\nconst typeClass = computed(() => {\n  const type = props.type\n  return type && TypeComponentsMap[props.type] ? ns.m(type) : ''\n})\n\nconst iconComponent = computed(() => {\n  if (!props.type) return props.icon\n  return TypeComponentsMap[props.type] || props.icon\n})\n\nconst horizontalClass = computed(() =>\n  props.position.endsWith('right') ? 'right' : 'left'\n)\n\nconst verticalProperty = computed(() =>\n  props.position.startsWith('top') ? 'top' : 'bottom'\n)\n\nconst positionStyle = computed<CSSProperties>(() => {\n  return {\n    [verticalProperty.value]: `${props.offset}px`,\n    zIndex: currentZIndex.value,\n  }\n})\n\nfunction startTimer() {\n  if (props.duration > 0) {\n    ;({ stop: timer } = useTimeoutFn(() => {\n      if (visible.value) close()\n    }, props.duration))\n  }\n}\n\nfunction clearTimer() {\n  timer?.()\n}\n\nfunction close() {\n  visible.value = false\n}\n\nfunction onKeydown({ code }: KeyboardEvent) {\n  if (code === EVENT_CODE.delete || code === EVENT_CODE.backspace) {\n    clearTimer() // press delete/backspace clear timer\n  } else if (code === EVENT_CODE.esc) {\n    // press esc to close the notification\n    if (visible.value) {\n      close()\n    }\n  } else {\n    startTimer() // resume timer\n  }\n}\n\n// lifecycle\nonMounted(() => {\n  startTimer()\n  nextZIndex()\n  visible.value = true\n})\n\nuseEventListener(document, 'keydown', onKeydown)\n\ndefineExpose({\n  visible,\n  /** @description close notification */\n  close,\n})\n</script>\n", "import { createVNode, render } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { debugWarn, isElement, isString, isVNode } from '@element-plus/utils'\nimport NotificationConstructor from './notification.vue'\nimport { notificationTypes } from './notification'\n\nimport type { AppContext, Ref, VNode } from 'vue'\nimport type {\n  NotificationOptions,\n  NotificationProps,\n  NotificationQueue,\n  Notify,\n  NotifyFn,\n} from './notification'\n\n// This should be a queue but considering there were `non-autoclosable` notifications.\nconst notifications: Record<\n  NotificationOptions['position'],\n  NotificationQueue\n> = {\n  'top-left': [],\n  'top-right': [],\n  'bottom-left': [],\n  'bottom-right': [],\n}\n\n// the gap size between each notification\nconst GAP_SIZE = 16\nlet seed = 1\n\nconst notify: NotifyFn & Partial<Notify> & { _context: AppContext | null } =\n  function (options = {}, context: AppContext | null = null) {\n    if (!isClient) return { close: () => undefined }\n\n    if (typeof options === 'string' || isVNode(options)) {\n      options = { message: options }\n    }\n\n    const position = options.position || 'top-right'\n\n    let verticalOffset = options.offset || 0\n    notifications[position].forEach(({ vm }) => {\n      verticalOffset += (vm.el?.offsetHeight || 0) + GAP_SIZE\n    })\n    verticalOffset += GAP_SIZE\n\n    const id = `notification_${seed++}`\n    const userOnClose = options.onClose\n    const props: Partial<NotificationProps> = {\n      ...options,\n      offset: verticalOffset,\n      id,\n      onClose: () => {\n        close(id, position, userOnClose)\n      },\n    }\n\n    let appendTo: HTMLElement | null = document.body\n    if (isElement(options.appendTo)) {\n      appendTo = options.appendTo\n    } else if (isString(options.appendTo)) {\n      appendTo = document.querySelector(options.appendTo)\n    }\n\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElNotification',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n\n    const container = document.createElement('div')\n\n    const vm = createVNode(\n      NotificationConstructor,\n      props,\n      isVNode(props.message)\n        ? {\n            default: () => props.message,\n          }\n        : null\n    )\n    vm.appContext = context ?? notify._context\n\n    // clean notification element preventing mem leak\n    vm.props!.onDestroy = () => {\n      render(null, container)\n    }\n\n    // instances will remove this item when close function gets called. So we do not need to worry about it.\n    render(vm, container)\n    notifications[position].push({ vm })\n    appendTo.appendChild(container.firstElementChild!)\n\n    return {\n      // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n      // for out component, so that all closing steps will not be skipped.\n      close: () => {\n        ;(vm.component!.exposed as { visible: Ref<boolean> }).visible.value =\n          false\n      },\n    }\n  }\nnotificationTypes.forEach((type) => {\n  notify[type] = (options = {}) => {\n    if (typeof options === 'string' || isVNode(options)) {\n      options = {\n        message: options,\n      }\n    }\n    return notify({\n      ...options,\n      type,\n    })\n  }\n})\n\n/**\n * This function gets called when user click `x` button or press `esc` or the time reached its limitation.\n * Emitted by transition@before-leave event so that we can fetch the current notification.offsetHeight, if this was called\n * by @after-leave the DOM element will be removed from the page thus we can no longer fetch the offsetHeight.\n * @param {String} id notification id to be closed\n * @param {Position} position the positioning strategy\n * @param {Function} userOnClose the callback called when close passed by user\n */\nexport function close(\n  id: string,\n  position: NotificationOptions['position'],\n  userOnClose?: (vm: VNode) => void\n): void {\n  // maybe we can store the index when inserting the vm to notification list.\n  const orientedNotifications = notifications[position]\n  const idx = orientedNotifications.findIndex(\n    ({ vm }) => vm.component?.props.id === id\n  )\n  if (idx === -1) return\n  const { vm } = orientedNotifications[idx]\n  if (!vm) return\n  // calling user's on close function before notification gets removed from DOM.\n  userOnClose?.(vm)\n\n  // note that this is called @before-leave, that's why we were able to fetch this property.\n  const removedHeight = vm.el!.offsetHeight\n  const verticalPos = position.split('-')[0]\n  orientedNotifications.splice(idx, 1)\n  const len = orientedNotifications.length\n  if (len < 1) return\n  // starting from the removing item.\n  for (let i = idx; i < len; i++) {\n    // new position equals the current offsetTop minus removed height plus 16px(the gap size between each item)\n    const { el, component } = orientedNotifications[i].vm\n    const pos =\n      Number.parseInt(el!.style[verticalPos], 10) - removedHeight - GAP_SIZE\n    component!.props.offset = pos\n  }\n}\n\nexport function closeAll(): void {\n  // loop through all directions, close them at once.\n  for (const orientedNotifications of Object.values(notifications)) {\n    orientedNotifications.forEach(({ vm }) => {\n      // same as the previous close method, we'd like to make sure lifecycle gets handle properly.\n      ;(vm.component!.exposed as { visible: Ref<boolean> }).visible.value =\n        false\n    })\n  }\n}\n\nnotify.closeAll = closeAll\nnotify._context = null\n\nexport default notify as Notify\n", "import { withInstallFunction } from '@element-plus/utils'\n\nimport Notify from './src/notify'\n\nexport const ElNotification = withInstallFunction(Notify, '$notify')\nexport default ElNotification\n\nexport * from './src/notification'\n", "import { ElInfiniteScroll } from '@element-plus/components/infinite-scroll'\nimport { ElLoading } from '@element-plus/components/loading'\nimport { ElMessage } from '@element-plus/components/message'\nimport { ElMessageBox } from '@element-plus/components/message-box'\nimport { ElNotification } from '@element-plus/components/notification'\nimport { ElPopoverDirective } from '@element-plus/components/popover'\n\nimport type { Plugin } from 'vue'\n\nexport default [\n  ElInfiniteScroll,\n  ElLoading,\n  ElMessage,\n  ElMessageBox,\n  ElNotification,\n  ElPopoverDirective,\n] as Plugin[]\n", "import { makeInstaller } from './make-installer'\nimport Components from './component'\nimport Plugins from './plugin'\n\nexport default makeInstaller([...Components, ...Plugins])\n", "import installer from './defaults'\nexport * from '@element-plus/components'\nexport * from '@element-plus/constants'\nexport * from '@element-plus/directives'\nexport * from '@element-plus/hooks'\nexport * from './make-installer'\n\nexport const install = installer.install\nexport const version = installer.version\nexport default installer\n\nexport { default as dayjs } from 'dayjs'\n"],
  "mappingsgBAAgB,CAAC,aAAa,CAAA,MAAO;AAChD,QAAMA,WAAU,CAAC,KAAK,YAAY;AAChC,QAAI,IAAI,aAAa;AACnB;AACF,QAAI,aAAa,IAAI;AACrB,eAAW,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;AACpC,QAAI;AACF,0BAAoB,SAAS,KAAK,IAAI;EAC5C;AACE,SAAO;IACL;IACA,SAAAA;EACJ;AACA;;;ACuFA,IAAA,aAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;;ACjMY,IAAC,QAAQ;AACT,IAAC,iBAAiB;AAClB,IAAC,gBAAgB;AACjB,IAAC,mBAAmB;AAChC,IAAM,aAAa;EACjB,OAAO;IACL,MAAM;IACN,SAAS;EACb;EACE,UAAU;IACR,MAAM;IACN,SAAS;EACb;EACE,UAAU;IACR,MAAM;IACN,SAAS;EACb;EACE,WAAW;IACT,MAAM;IACN,SAAS;EACb;AACA;AACA,IAAM,mBAAmB,CAAC,IAAI,aAAa;AACzC,SAAO,OAAO,QAAQ,UAAU,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,MAAM,MAAM;AAChE,QAAI,IAAI;AACR,UAAM,EAAE,MAAM,SAAS,aAAY,IAAK;AACxC,UAAM,UAAU,GAAG,aAAa,mBAAmB,MAAM;AACzD,QAAI,SAAS,MAAM,KAAK,SAAS,O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",
  "names": ["install", "close", "isClient", "close", "isClient", "Message", "_sfc_main", "_resolveComponent", "_openBlock", "_createBlock", "_Transition", "_withCtx", "_withDirectives", "_createVNode", "_createElementVNode", "_normalizeClass", "_normalizeStyle", "_withModifiers", "_createElementBlock", "_createCommentVNode", "_toDisplayString", "_withKeys", "_hoisted_2", "_renderSlot", "_resolveDynamicComponent", "_createTextVNode", "_vShow", "isClient", "message", "useTimeoutFn", "close", "useEventListener", "seed", "isClient", "closeAll", "Notify", "version"]
}
