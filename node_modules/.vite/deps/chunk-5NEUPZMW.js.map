{
  "version": 3,
  "sources": ["../../../packages/components/popconfirm/src/popconfirm.ts", "../../../packages/components/popconfirm/src/popconfirm.vue", "../../../packages/components/popconfirm/index.ts"],
  "sourcesContent": ["import { buttonTypes } from '@element-plus/components/button'\nimport { QuestionFilled } from '@element-plus/icons-vue'\nimport { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport type { ExtractPropTypes } from 'vue'\nimport type Popconfirm from './popconfirm.vue'\n\nexport const popconfirmProps = buildProps({\n  title: String,\n  confirmButtonText: String,\n  cancelButtonText: String,\n  confirmButtonType: {\n    type: String,\n    values: buttonTypes,\n    default: 'primary',\n  },\n  cancelButtonType: {\n    type: String,\n    values: buttonTypes,\n    default: 'text',\n  },\n  icon: {\n    type: iconPropType,\n    default: () => QuestionFilled,\n  },\n  iconColor: {\n    type: String,\n    default: '#f90',\n  },\n  hideIcon: {\n    type: Boolean,\n    default: false,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  onConfirm: {\n    type: definePropType<(e: Event) => Promise<void> | void>(Function),\n  },\n  onCancel: {\n    type: definePropType<(e: Event) => Promise<void> | void>(Function),\n  },\n  teleported: useTooltipContentProps.teleported,\n  persistent: useTooltipContentProps.persistent,\n  width: {\n    type: [String, Number],\n    default: 150,\n  },\n} as const)\nexport type PopconfirmProps = ExtractPropTypes<typeof popconfirmProps>\n\nexport type PopconfirmInstance = InstanceType<typeof Popconfirm>\n", "<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    trigger=\"click\"\n    effect=\"light\"\n    v-bind=\"$attrs\"\n    :popper-class=\"`${ns.namespace.value}-popover`\"\n    :popper-style=\"style\"\n    :teleported=\"teleported\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :hide-after=\"hideAfter\"\n    :persistent=\"persistent\"\n  >\n    <template #content>\n      <div :class=\"ns.b()\">\n        <div :class=\"ns.e('main')\">\n          <el-icon\n            v-if=\"!hideIcon && icon\"\n            :class=\"ns.e('icon')\"\n            :style=\"{ color: iconColor }\"\n          >\n            <component :is=\"icon\" />\n          </el-icon>\n          {{ title }}\n        </div>\n        <div :class=\"ns.e('action')\">\n          <el-button\n            size=\"small\"\n            :type=\"cancelButtonType === 'text' ? '' : cancelButtonType\"\n            :text=\"cancelButtonType === 'text'\"\n            @click=\"cancel\"\n          >\n            {{ finalCancelButtonText }}\n          </el-button>\n          <el-button\n            size=\"small\"\n            :type=\"confirmButtonType === 'text' ? '' : confirmButtonType\"\n            :text=\"confirmButtonType === 'text'\"\n            @click=\"confirm\"\n          >\n            {{ finalConfirmButtonText }}\n          </el-button>\n        </div>\n      </div>\n    </template>\n    <template v-if=\"$slots.reference\">\n      <slot name=\"reference\" />\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { addUnit } from '@element-plus/utils'\nimport { popconfirmProps } from './popconfirm'\n\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\ndefineOptions({\n  name: 'ElPopconfirm',\n})\n\nconst props = defineProps(popconfirmProps)\n\nconst { t } = useLocale()\nconst ns = useNamespace('popconfirm')\nconst tooltipRef = ref<TooltipInstance>()\n\nconst hidePopper = () => {\n  tooltipRef.value?.onClose?.()\n}\n\nconst style = computed(() => {\n  return {\n    width: addUnit(props.width),\n  }\n})\n\nconst confirm = (e: Event) => {\n  props.onConfirm?.(e)\n  hidePopper()\n}\nconst cancel = (e: Event) => {\n  props.onCancel?.(e)\n  hidePopper()\n}\n\nconst finalConfirmButtonText = computed(\n  () => props.confirmButtonText || t('el.popconfirm.confirmButtonText')\n)\nconst finalCancelButtonText = computed(\n  () => props.cancelButtonText || t('el.popconfirm.cancelButtonText')\n)\n</script>\n", "import { withInstall } from '@element-plus/utils'\n\nimport Popconfirm from './src/popconfirm.vue'\n\nexport const ElPopconfirm = withInstall(Popconfirm)\nexport default ElPopconfirm\n\nexport * from './src/popconfirm'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIY,IAAC,kBAAkB,WAAW;EACxC,OAAO;EACP,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;IACjB,MAAM;IACN,QAAQ;IACR,SAAS;EACb;EACE,kBAAkB;IAChB,MAAM;IACN,QAAQ;IACR,SAAS;EACb;EACE,MAAM;IACJ,MAAM;IACN,SAAS,MAAM;EACnB;EACE,WAAW;IACT,MAAM;IACN,SAAS;EACb;EACE,UAAU;IACR,MAAM;IACN,SAAS;EACb;EACE,WAAW;IACT,MAAM;IACN,SAAS;EACb;EACE,WAAW;IACT,MAAM,eAAe,QAAQ;EACjC;EACE,UAAU;IACR,MAAM,eAAe,QAAQ;EACjC;EACE,YAAY,uBAAuB;EACnC,YAAY,uBAAuB;EACnC,OAAO;IACL,MAAM,CAAC,QAAQ,MAAM;IACrB,SAAS;EACb;AACA,CAAC;;;kCCgBa;EACZ,MAAM;AACR,CAAA;;;;;;AAIM,UAAA,EAAE,EAAA,IAAM,UAAU;AAClB,UAAA,KAAK,aAAa,YAAY;AACpC,UAAM,aAAa,IAAqB;AAExC,UAAM,aAAa,MAAM;AACvB,UAAA,IAAA;AACF,OAAA,MAAA,KAAA,WAAA,UAAA,OAAA,SAAA,GAAA,YAAA,OAAA,SAAA,GAAA,KAAA,EAAA;IAEA;AACS,UAAA,QAAA,SAAA,MAAA;AACL,aAAA;QACF,OAAA,QAAA,MAAA,KAAA;MAAA;IAGF,CAAM;AACJ,UAAA,UAAA,CAAA,MAAmB;AACR,UAAA;AACb,OAAA,KAAA,MAAA,cAAA,OAAA,SAAA,GAAA,KAAA,OAAA,CAAA;AACM,iBAAA;IACJ;AACW,UAAA,SAAA,CAAA,MAAA;AACb,UAAA;AAEA,OAAA,KAAA,MAAA,aAAA,OACE,SAAA,GAAM,KAAA,OAA2B,CAAA;AAEnC,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FY,IAAC,eAAe,YAAY,UAAU;",
  "names": []
}
