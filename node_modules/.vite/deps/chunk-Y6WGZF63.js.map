{
  "version": 3,
  "sources": ["../../../packages/components/time-select/src/time-select.ts", "../../../packages/components/time-select/src/utils.ts", "../../../packages/components/time-select/src/time-select.vue", "../../../packages/components/time-select/index.ts"],
  "sourcesContent": ["import { buildProps, definePropType } from '@element-plus/utils'\nimport { CircleClose, Clock } from '@element-plus/icons-vue'\nimport { useSizeProp } from '@element-plus/hooks'\nimport type TimeSelect from './time-select.vue'\nimport type { Component, ExtractPropTypes, PropType } from 'vue'\n\nexport const timeSelectProps = buildProps({\n  format: {\n    type: String,\n    default: 'HH:mm',\n  },\n  modelValue: String,\n  disabled: Boolean,\n  editable: {\n    type: Boolean,\n    default: true,\n  },\n  effect: {\n    type: String as PropType<'light' | 'dark' | string>,\n    default: 'light',\n  },\n  clearable: {\n    type: Boolean,\n    default: true,\n  },\n  size: useSizeProp,\n  placeholder: String,\n  start: {\n    type: String,\n    default: '09:00',\n  },\n  end: {\n    type: String,\n    default: '18:00',\n  },\n  step: {\n    type: String,\n    default: '00:30',\n  },\n  minTime: String,\n  maxTime: String,\n  name: String,\n  prefixIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: () => Clock,\n  },\n  clearIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: () => CircleClose,\n  },\n} as const)\n\nexport type TimeSelectProps = ExtractPropTypes<typeof timeSelectProps>\n\nexport type TimeSelectInstance = InstanceType<typeof TimeSelect>\n", "interface Time {\n  hours: number\n  minutes: number\n}\n\nexport const parseTime = (time: string): null | Time => {\n  const values = (time || '').split(':')\n  if (values.length >= 2) {\n    let hours = Number.parseInt(values[0], 10)\n    const minutes = Number.parseInt(values[1], 10)\n    const timeUpper = time.toUpperCase()\n    if (timeUpper.includes('AM') && hours === 12) {\n      hours = 0\n    } else if (timeUpper.includes('PM') && hours !== 12) {\n      hours += 12\n    }\n    return {\n      hours,\n      minutes,\n    }\n  }\n\n  return null\n}\n\nexport const compareTime = (time1: string, time2: string): number => {\n  const value1 = parseTime(time1)\n  if (!value1) return -1\n  const value2 = parseTime(time2)\n  if (!value2) return -1\n  const minutes1 = value1.minutes + value1.hours * 60\n  const minutes2 = value2.minutes + value2.hours * 60\n  if (minutes1 === minutes2) {\n    return 0\n  }\n  return minutes1 > minutes2 ? 1 : -1\n}\n\nexport const padTime = (time: number | string) => {\n  return `${time}`.padStart(2, '0')\n}\nexport const formatTime = (time: Time): string => {\n  return `${padTime(time.hours)}:${padTime(time.minutes)}`\n}\n\nexport const nextTime = (time: string, step: string): string => {\n  const timeValue = parseTime(time)\n  if (!timeValue) return ''\n\n  const stepValue = parseTime(step)\n  if (!stepValue) return ''\n\n  const next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes,\n  }\n  next.minutes += stepValue.minutes\n  next.hours += stepValue.hours\n  next.hours += Math.floor(next.minutes / 60)\n  next.minutes = next.minutes % 60\n  return formatTime(next)\n}\n", "<template>\n  <el-select\n    ref=\"select\"\n    :model-value=\"value\"\n    :disabled=\"_disabled\"\n    :clearable=\"clearable\"\n    :clear-icon=\"clearIcon\"\n    :size=\"size\"\n    :effect=\"effect\"\n    :placeholder=\"placeholder\"\n    default-first-option\n    :filterable=\"editable\"\n    @update:model-value=\"(event) => $emit('update:modelValue', event)\"\n    @change=\"(event) => $emit('change', event)\"\n    @blur=\"(event) => $emit('blur', event)\"\n    @focus=\"(event) => $emit('focus', event)\"\n  >\n    <el-option\n      v-for=\"item in items\"\n      :key=\"item.value\"\n      :label=\"item.value\"\n      :value=\"item.value\"\n      :disabled=\"item.disabled\"\n    />\n    <template #prefix>\n      <el-icon v-if=\"prefixIcon\" :class=\"nsInput.e('prefix-icon')\">\n        <component :is=\"prefixIcon\" />\n      </el-icon>\n    </template>\n  </el-select>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport ElSelect from '@element-plus/components/select'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport ElIcon from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { timeSelectProps } from './time-select'\nimport { compareTime, formatTime, nextTime, parseTime } from './utils'\n\ndayjs.extend(customParseFormat)\n\nconst { Option: ElOption } = ElSelect\n\ndefineOptions({\n  name: 'ElTimeSelect',\n})\n\ndefineEmits(['change', 'blur', 'focus', 'update:modelValue'])\n\nconst props = defineProps(timeSelectProps)\n\nconst nsInput = useNamespace('input')\nconst select = ref<typeof ElSelect>()\n\nconst _disabled = useFormDisabled()\n\nconst value = computed(() => props.modelValue)\nconst start = computed(() => {\n  const time = parseTime(props.start)\n  return time ? formatTime(time) : null\n})\n\nconst end = computed(() => {\n  const time = parseTime(props.end)\n  return time ? formatTime(time) : null\n})\n\nconst step = computed(() => {\n  const time = parseTime(props.step)\n  return time ? formatTime(time) : null\n})\n\nconst minTime = computed(() => {\n  const time = parseTime(props.minTime || '')\n  return time ? formatTime(time) : null\n})\n\nconst maxTime = computed(() => {\n  const time = parseTime(props.maxTime || '')\n  return time ? formatTime(time) : null\n})\n\nconst items = computed(() => {\n  const result: { value: string; disabled: boolean }[] = []\n  if (props.start && props.end && props.step) {\n    let current = start.value\n    let currentTime: string\n    while (current && end.value && compareTime(current, end.value) <= 0) {\n      currentTime = dayjs(current, 'HH:mm').format(props.format)\n      result.push({\n        value: currentTime,\n        disabled:\n          compareTime(current, minTime.value || '-1:-1') <= 0 ||\n          compareTime(current, maxTime.value || '100:100') >= 0,\n      })\n      current = nextTime(current, step.value!)\n    }\n  }\n  return result\n})\n\nconst blur = () => {\n  select.value?.blur?.()\n}\n\nconst focus = () => {\n  select.value?.focus?.()\n}\n\ndefineExpose({\n  blur,\n  focus,\n})\n</script>\n", "import TimeSelect from './src/time-select.vue'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nTimeSelect.install = (app: App): void => {\n  app.component(TimeSelect.name, TimeSelect)\n}\n\nconst _TimeSelect = TimeSelect as SFCWithInstall<typeof TimeSelect>\n\nexport default _TimeSelect\nexport const ElTimeSelect = _TimeSelect\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGY,IAAC,kBAAkB,WAAW;EACxC,QAAQ;IACN,MAAM;IACN,SAAS;EACb;EACE,YAAY;EACZ,UAAU;EACV,UAAU;IACR,MAAM;IACN,SAAS;EACb;EACE,QAAQ;IACN,MAAM;IACN,SAAS;EACb;EACE,WAAW;IACT,MAAM;IACN,SAAS;EACb;EACE,MAAM;EACN,aAAa;EACb,OAAO;IACL,MAAM;IACN,SAAS;EACb;EACE,KAAK;IACH,MAAM;IACN,SAAS;EACb;EACE,MAAM;IACJ,MAAM;IACN,SAAS;EACb;EACE,SAAS;EACT,SAAS;EACT,MAAM;EACN,YAAY;IACV,MAAM,eAAe,CAAC,QAAQ,MAAM,CAAC;IACrC,SAAS,MAAM;EACnB;EACE,WAAW;IACT,MAAM,eAAe,CAAC,QAAQ,MAAM,CAAC;IACrC,SAAS,MAAM;EACnB;AACA,CAAC;;;AC/CW,IAAC,YAAY,CAAC,SAAS;AACjC,QAAM,UAAU,QAAQ,IAAI,MAAM,GAAG;AACrC,MAAI,OAAO,UAAU,GAAG;AACtB,QAAI,QAAQ,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE;AACzC,UAAM,UAAU,OAAO,SAAS,OAAO,CAAC,GAAG,EAAE;AAC7C,UAAM,YAAY,KAAK,YAAW;AAClC,QAAI,UAAU,SAAS,IAAI,KAAK,UAAU,IAAI;AAC5C,cAAQ;IACd,WAAe,UAAU,SAAS,IAAI,KAAK,UAAU,IAAI;AACnD,eAAS;IACf;AACI,WAAO;MACL;MACA;IACN;EACA;AACE,SAAO;AACT;AACY,IAAC,cAAc,CAAC,OAAO,UAAU;AAC3C,QAAM,SAAS,UAAU,KAAK;AAC9B,MAAI,CAAC;AACH,WAAO;AACT,QAAM,SAAS,UAAU,KAAK;AAC9B,MAAI,CAAC;AACH,WAAO;AACT,QAAM,WAAW,OAAO,UAAU,OAAO,QAAQ;AACjD,QAAM,WAAW,OAAO,UAAU,OAAO,QAAQ;AACjD,MAAI,aAAa,UAAU;AACzB,WAAO;EACX;AACE,SAAO,WAAW,WAAW,IAAI;AACnC;AACY,IAAC,UAAU,CAAC,SAAS;AAC/B,SAAO,GAAG,OAAO,SAAS,GAAG,GAAG;AAClC;AACY,IAAC,aAAa,CAAC,SAAS;AAClC,SAAO,GAAG,QAAQ,KAAK,KAAK,KAAK,QAAQ,KAAK,OAAO;AACvD;AACY,IAAC,WAAW,CAAC,MAAM,SAAS;AACtC,QAAM,YAAY,UAAU,IAAI;AAChC,MAAI,CAAC;AACH,WAAO;AACT,QAAM,YAAY,UAAU,IAAI;AAChC,MAAI,CAAC;AACH,WAAO;AACT,QAAM,OAAO;IACX,OAAO,UAAU;IACjB,SAAS,UAAU;EACvB;AACE,OAAK,WAAW,UAAU;AAC1B,OAAK,SAAS,UAAU;AACxB,OAAK,SAAS,KAAK,MAAM,KAAK,UAAU,EAAE;AAC1C,OAAK,UAAU,KAAK,UAAU;AAC9B,SAAO,WAAW,IAAI;AACxB;;;kCCPc;EACZ,MAAM;AACR,CAAA;;;;;;;AANA,iBAAAA,QAAM,OAAO,yBAAAC,OAAiB;AAExB,UAAA,EAAE,QAAQ,SAAa,IAAA;AAUvB,UAAA,UAAU,aAAa,OAAO;AACpC,UAAM,SAAS,IAAqB;AAEpC,UAAM,YAAY,gBAAgB;AAElC,UAAM,QAAQ,SAAS,MAAM,MAAM,UAAU;AACvC,UAAA,QAAQ,SAAS,MAAM;AACrB,YAAA,OAAO,UAAU,MAAM,KAAK;AAC3B,aAAA,OAAO,WAAW,IAAI,IAAI;IAAA,CAClC;AAEK,UAAA,MAAM,SAAS,MAAM;AACnB,YAAA,OAAO,UAAU,MAAM,GAAG;AACzB,aAAA,OAAO,WAAW,IAAI,IAAI;IAAA,CAClC;AAEK,UAAA,OAAO,SAAS,MAAM;AACpB,YAAA,OAAO,UAAU,MAAM,IAAI;AAC1B,aAAA,OAAO,WAAW,IAAI,IAAI;IAAA,CAClC;AAEK,UAAA,UAAU,SAAS,MAAM;AAC7B,YAAM,OAAO,UAAU,MAAM,WAAW,EAAE;AACnC,aAAA,OAAO,WAAW,IAAI,IAAI;IAAA,CAClC;AAEK,UAAA,UAAU,SAAS,MAAM;AAC7B,YAAM,OAAO,UAAU,MAAM,WAAW,EAAE;AACnC,aAAA,OAAO,WAAW,IAAI,IAAI;IAAA,CAClC;AAEK,UAAA,QAAQ,SAAS,MAAM;AAC3B,YAAM,SAAiD,CAAA;AACvD,UAAI,MAAM,SAAS,MAAM,OAAO,MAAM,MAAM;AAC1C,YAAI,UAAU,MAAM;AAChB,YAAA;AACG,eAAA,WAAW,IAAI,SAAS,YAAY,SAAS,IAAI,KAAK,KAAK,GAAG;AACnE,4BAAc,aAAAD,SAAM,SAAS,OAAO,EAAE,OAAO,MAAM,MAAM;AACzD,iBAAO,KAAK;YACV,OAAO;YACP,UACE,YAAY,SAAS,QAAQ,SAAS,OAAO,KAAK,KAClD,YAAY,SAAS,QAAQ,SAAS,SAAS,KAAK;UAAA,CACvD;AACS,oBAAA,SAAS,SAAS,KAAK,KAAM;QAAA;MACzC;AAEK,aAAA;IAAA,CACR;AAED,UAAM,OAAO,MAAM;AACjB,UAAA,IAAA;AACF,OAAA,MAAA,KAAA,OAAA,UAAA,OAAA,SAAA,GAAA,SAAA,OAAA,SAAA,GAAA,KAAA,EAAA;IAEA;AACE,UAAA,QAAA,MAAsB;AACxB,UAAA,IAAA;AAEa,OAAA,MAAA,KAAA,OAAA,UAAA,OAAA,SAAA,GAAA,UAAA,OAAA,SAAA,GAAA,KAAA,EAAA;IAAA;AAEX,WAAA;MACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnHD,WAAW,UAAU,CAAC,QAAQ;AAC5B,MAAI,UAAU,WAAW,MAAM,UAAU;AAC3C;AACK,IAAC,cAAc;AAER,IAAC,eAAe;",
  "names": ["dayjs", "customParseFormat"]
}
