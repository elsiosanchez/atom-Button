{
  "version": 3,
  "sources": ["../../../packages/components/input-number/src/input-number.ts", "../../../packages/components/input-number/src/input-number.vue", "../../../packages/components/input-number/index.ts"],
  "sourcesContent": ["import { isNil } from 'lodash-unified'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { buildProps, isNumber } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type InputNumber from './input-number.vue'\n\nexport const inputNumberProps = buildProps({\n  /**\n   * @description same as `id` in native input\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description incremental step\n   */\n  step: {\n    type: Number,\n    default: 1,\n  },\n  /**\n   * @description whether input value can only be multiple of step\n   */\n  stepStrictly: Boolean,\n  /**\n   * @description the maximum allowed value\n   */\n  max: {\n    type: Number,\n    default: Number.POSITIVE_INFINITY,\n  },\n  /**\n   * @description the minimum allowed value\n   */\n  min: {\n    type: Number,\n    default: Number.NEGATIVE_INFINITY,\n  },\n  /**\n   * @description binding value\n   */\n  modelValue: Number,\n  /**\n   * @description same as `readonly` in native input\n   */\n  readonly: Boolean,\n  /**\n   * @description whether the component is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description size of the component\n   */\n  size: useSizeProp,\n  /**\n   * @description whether to enable the control buttons\n   */\n  controls: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description position of the control buttons\n   */\n  controlsPosition: {\n    type: String,\n    default: '',\n    values: ['', 'right'],\n  },\n  /**\n   * @description value should be set when input box is cleared\n   */\n  valueOnClear: {\n    type: [String, Number, null],\n    validator: (val: 'min' | 'max' | number | null) =>\n      val === null || isNumber(val) || ['min', 'max'].includes(val),\n    default: null,\n  },\n  /**\n   * @description same as `name` in native input\n   */\n  name: String,\n  /**\n   * @description same as `label` in native input\n   */\n  label: String,\n  /**\n   * @description same as `placeholder` in native input\n   */\n  placeholder: String,\n  /**\n   * @description precision of input value\n   */\n  precision: {\n    type: Number,\n    validator: (val: number) =>\n      val >= 0 && val === Number.parseInt(`${val}`, 10),\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type InputNumberProps = ExtractPropTypes<typeof inputNumberProps>\n\nexport const inputNumberEmits = {\n  [CHANGE_EVENT]: (cur: number | undefined, prev: number | undefined) =>\n    prev !== cur,\n  blur: (e: FocusEvent) => e instanceof FocusEvent,\n  focus: (e: FocusEvent) => e instanceof FocusEvent,\n  [INPUT_EVENT]: (val: number | null | undefined) =>\n    isNumber(val) || isNil(val),\n  [UPDATE_MODEL_EVENT]: (val: number | undefined) =>\n    isNumber(val) || isNil(val),\n}\nexport type InputNumberEmits = typeof inputNumberEmits\n\nexport type InputNumberInstance = InstanceType<typeof InputNumber>\n", "<template>\n  <div\n    :class=\"[\n      ns.b(),\n      ns.m(inputNumberSize),\n      ns.is('disabled', inputNumberDisabled),\n      ns.is('without-controls', !controls),\n      ns.is('controls-right', controlsAtRight),\n    ]\"\n    @dragstart.prevent\n  >\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"decrease\"\n      role=\"button\"\n      :aria-label=\"t('el.inputNumber.decrease')\"\n      :class=\"[ns.e('decrease'), ns.is('disabled', minDisabled)]\"\n      @keydown.enter=\"decrease\"\n    >\n      <el-icon>\n        <arrow-down v-if=\"controlsAtRight\" />\n        <minus v-else />\n      </el-icon>\n    </span>\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"increase\"\n      role=\"button\"\n      :aria-label=\"t('el.inputNumber.increase')\"\n      :class=\"[ns.e('increase'), ns.is('disabled', maxDisabled)]\"\n      @keydown.enter=\"increase\"\n    >\n      <el-icon>\n        <arrow-up v-if=\"controlsAtRight\" />\n        <plus v-else />\n      </el-icon>\n    </span>\n    <el-input\n      :id=\"id\"\n      ref=\"input\"\n      type=\"number\"\n      :step=\"step\"\n      :model-value=\"displayValue\"\n      :placeholder=\"placeholder\"\n      :readonly=\"readonly\"\n      :disabled=\"inputNumberDisabled\"\n      :size=\"inputNumberSize\"\n      :max=\"max\"\n      :min=\"min\"\n      :name=\"name\"\n      :label=\"label\"\n      :validate-event=\"false\"\n      @wheel.prevent\n      @keydown.up.prevent=\"increase\"\n      @keydown.down.prevent=\"decrease\"\n      @blur=\"handleBlur\"\n      @focus=\"handleFocus\"\n      @input=\"handleInput\"\n      @change=\"handleInputChange\"\n    />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, onMounted, onUpdated, reactive, ref, watch } from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { ElInput } from '@element-plus/components/input'\nimport { ElIcon } from '@element-plus/components/icon'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { vRepeatClick } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { debugWarn, isNumber, isString, isUndefined } from '@element-plus/utils'\nimport { ArrowDown, ArrowUp, Minus, Plus } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { inputNumberEmits, inputNumberProps } from './input-number'\n\nimport type { InputInstance } from '@element-plus/components/input'\n\ndefineOptions({\n  name: 'ElInputNumber',\n})\n\nconst props = defineProps(inputNumberProps)\nconst emit = defineEmits(inputNumberEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('input-number')\nconst input = ref<InputInstance>()\n\ninterface Data {\n  currentValue: number | null | undefined\n  userInput: null | number | string\n}\nconst data = reactive<Data>({\n  currentValue: props.modelValue,\n  userInput: null,\n})\n\nconst { formItem } = useFormItem()\n\nconst minDisabled = computed(\n  () => isNumber(props.modelValue) && props.modelValue <= props.min\n)\nconst maxDisabled = computed(\n  () => isNumber(props.modelValue) && props.modelValue >= props.max\n)\n\nconst numPrecision = computed(() => {\n  const stepPrecision = getPrecision(props.step)\n  if (!isUndefined(props.precision)) {\n    if (stepPrecision > props.precision) {\n      debugWarn(\n        'InputNumber',\n        'precision should not be less than the decimal places of step'\n      )\n    }\n    return props.precision\n  } else {\n    return Math.max(getPrecision(props.modelValue), stepPrecision)\n  }\n})\nconst controlsAtRight = computed(() => {\n  return props.controls && props.controlsPosition === 'right'\n})\n\nconst inputNumberSize = useFormSize()\nconst inputNumberDisabled = useFormDisabled()\n\nconst displayValue = computed(() => {\n  if (data.userInput !== null) {\n    return data.userInput\n  }\n  let currentValue: number | string | undefined | null = data.currentValue\n  if (isNil(currentValue)) return ''\n  if (isNumber(currentValue)) {\n    if (Number.isNaN(currentValue)) return ''\n    if (!isUndefined(props.precision)) {\n      currentValue = currentValue.toFixed(props.precision)\n    }\n  }\n  return currentValue\n})\nconst toPrecision = (num: number, pre?: number) => {\n  if (isUndefined(pre)) pre = numPrecision.value\n  if (pre === 0) return Math.round(num)\n  let snum = String(num)\n  const pointPos = snum.indexOf('.')\n  if (pointPos === -1) return num\n  const nums = snum.replace('.', '').split('')\n  const datum = nums[pointPos + pre]\n  if (!datum) return num\n  const length = snum.length\n  if (snum.charAt(length - 1) === '5') {\n    snum = `${snum.slice(0, Math.max(0, length - 1))}6`\n  }\n  return Number.parseFloat(Number(snum).toFixed(pre))\n}\nconst getPrecision = (value: number | null | undefined) => {\n  if (isNil(value)) return 0\n  const valueString = value.toString()\n  const dotPosition = valueString.indexOf('.')\n  let precision = 0\n  if (dotPosition !== -1) {\n    precision = valueString.length - dotPosition - 1\n  }\n  return precision\n}\nconst ensurePrecision = (val: number, coefficient: 1 | -1 = 1) => {\n  if (!isNumber(val)) return data.currentValue\n  // Solve the accuracy problem of JS decimal calculation by converting the value to integer.\n  return toPrecision(val + props.step * coefficient)\n}\nconst increase = () => {\n  if (props.readonly || inputNumberDisabled.value || maxDisabled.value) return\n  const value = Number(displayValue.value) || 0\n  const newVal = ensurePrecision(value)\n  setCurrentValue(newVal)\n  emit(INPUT_EVENT, data.currentValue)\n}\nconst decrease = () => {\n  if (props.readonly || inputNumberDisabled.value || minDisabled.value) return\n  const value = Number(displayValue.value) || 0\n  const newVal = ensurePrecision(value, -1)\n  setCurrentValue(newVal)\n  emit(INPUT_EVENT, data.currentValue)\n}\nconst verifyValue = (\n  value: number | string | null | undefined,\n  update?: boolean\n): number | null | undefined => {\n  const { max, min, step, precision, stepStrictly, valueOnClear } = props\n  let newVal = Number(value)\n  if (isNil(value) || Number.isNaN(newVal)) {\n    return null\n  }\n  if (value === '') {\n    if (valueOnClear === null) {\n      return null\n    }\n    newVal = isString(valueOnClear) ? { min, max }[valueOnClear] : valueOnClear\n  }\n  if (stepStrictly) {\n    newVal = toPrecision(Math.round(newVal / step) * step, precision)\n  }\n  if (!isUndefined(precision)) {\n    newVal = toPrecision(newVal, precision)\n  }\n  if (newVal > max || newVal < min) {\n    newVal = newVal > max ? max : min\n    update && emit(UPDATE_MODEL_EVENT, newVal)\n  }\n  return newVal\n}\nconst setCurrentValue = (\n  value: number | string | null | undefined,\n  emitChange = true\n) => {\n  const oldVal = data.currentValue\n  const newVal = verifyValue(value)\n  if (oldVal === newVal) return\n  if (!emitChange) {\n    emit(UPDATE_MODEL_EVENT, newVal!)\n    return\n  }\n  data.userInput = null\n  emit(UPDATE_MODEL_EVENT, newVal!)\n  emit(CHANGE_EVENT, newVal!, oldVal!)\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n  data.currentValue = newVal\n}\nconst handleInput = (value: string) => {\n  data.userInput = value\n  const newVal = value === '' ? null : Number(value)\n  emit(INPUT_EVENT, newVal)\n  setCurrentValue(newVal, false)\n}\nconst handleInputChange = (value: string) => {\n  const newVal = value !== '' ? Number(value) : ''\n  if ((isNumber(newVal) && !Number.isNaN(newVal)) || value === '') {\n    setCurrentValue(newVal)\n  }\n  data.userInput = null\n}\n\nconst focus = () => {\n  input.value?.focus?.()\n}\n\nconst blur = () => {\n  input.value?.blur?.()\n}\n\nconst handleFocus = (event: MouseEvent | FocusEvent) => {\n  emit('focus', event)\n}\n\nconst handleBlur = (event: MouseEvent | FocusEvent) => {\n  emit('blur', event)\n  if (props.validateEvent) {\n    formItem?.validate?.('blur').catch((err) => debugWarn(err))\n  }\n}\n\nwatch(\n  () => props.modelValue,\n  (value) => {\n    const userInput = verifyValue(data.userInput)\n    const newValue = verifyValue(value, true)\n    if (!isNumber(userInput) && (!userInput || userInput !== newValue)) {\n      data.currentValue = newValue\n      data.userInput = null\n    }\n  },\n  { immediate: true }\n)\nonMounted(() => {\n  const { min, max, modelValue } = props\n  const innerInput = input.value?.input as HTMLInputElement\n  innerInput.setAttribute('role', 'spinbutton')\n  if (Number.isFinite(max)) {\n    innerInput.setAttribute('aria-valuemax', String(max))\n  } else {\n    innerInput.removeAttribute('aria-valuemax')\n  }\n  if (Number.isFinite(min)) {\n    innerInput.setAttribute('aria-valuemin', String(min))\n  } else {\n    innerInput.removeAttribute('aria-valuemin')\n  }\n  innerInput.setAttribute('aria-valuenow', String(data.currentValue))\n  innerInput.setAttribute('aria-disabled', String(inputNumberDisabled.value))\n  if (!isNumber(modelValue) && modelValue != null) {\n    let val: number | null = Number(modelValue)\n    if (Number.isNaN(val)) {\n      val = null\n    }\n    emit(UPDATE_MODEL_EVENT, val!)\n  }\n})\nonUpdated(() => {\n  const innerInput = input.value?.input\n  innerInput?.setAttribute('aria-valuenow', `${data.currentValue}`)\n})\ndefineExpose({\n  /** @description get focus the input component */\n  focus,\n  /** @description remove focus the input component */\n  blur,\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport InputNumber from './src/input-number.vue'\n\nexport const ElInputNumber = withInstall(InputNumber)\n\nexport default ElInputNumber\nexport * from './src/input-number'\n"],
  "mappings": "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",
  "names": ["isNumber"]
}
